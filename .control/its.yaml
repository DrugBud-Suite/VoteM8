changelog:
  pkg_api:
    name: Public API
    path: CHANGELOG.md
    title: ${{ name }}$ Changelog - Public API
    intro: |
      This document records all changes to the public API of ${{ name }}$ in each new final release.
      The changes documented here are only those that affect the end-users of the software,
      such as added, changed, or removed features, bug fixes, and performance improvements.

      The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
      and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).
    entry:
      title: "[{ver_dist}] – {date}"
      intro: |
        - Commit Type: {commit_type}
        - Commit Title: {commit_title}
        - Parent Commit: [{parent_commit_hash}]({parent_commit_url})
    sections: &changelog_pkg_api_sections
      - id: removed
        title: ⛔ Removed Features
        description: |
          Features that have been removed from the public API.
      - id: changed
        title: 🚫 Changed Features
        description: |
          Features that have been changed in the public API.
      - id: deprecated
        title: ⚠️ Deprecated Features
        description: |
          Features that have been deprecated in the public API.
      - id: added
        title: 🌱 New Features
        description: |
          Features that have been added to the public API.
      - id: enhanced
        title: ✨ Enhanced Features
        description: |
          Features that have been enhanced in the public API.
      - id: security
        title: 🛡️ Security Fixes
        description: |
          Security fixes that have been applied to the public API.
      - id: fixed
        title: 🐞 Bug Fixes
        description: |
          Bug fixes that have been applied to the public API.
      - id: improved
        title: 🚀 Performance Improvements
        description: |
          Performance improvements that have been applied to the public API.
      - id: docs
        title: 📝 Docstring Fixes
        description: |
          Docstring fixes that have been applied to the public API.
      - id: notes
        title: 📔️ Release-Notes Fixes
        description: |
          Release-Notes fixes that have been applied to the public API.
  pkg_api_pre:
    name: Pre-release Public API
    path: CHANGELOG_PRERELEASE.md
    title: ${{ name }}$ Changelog - Pre-release Public API
    intro: |
      This document records all changes to the public API of ${{ name }}$ during a pre-release period.
      The changes documented here are only those that affect the end-users of the software,
      such as added, changed, or removed features, bug fixes, and performance improvements.

      The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
      and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).
    entry:
      title: "[{ver_dist}] – {date}"
      intro: |
        - Commit Type: {commit_type}
        - Commit Title: {commit_title}
        - Parent Commit: [{parent_commit_hash}]({parent_commit_url})
    sections: *changelog_pkg_api_sections
  website:
    name: Website
    path: docs/website/CHANGELOG.md
    title: "${{ name }}$ Changelog (Website)"
    intro: |
      This changelog documents the changes to the website.
    entry:
      title: "[{ver_dist}] – {date}"
      intro: |
        - Commit Type: {commit_type}
        - Commit Title: {commit_title}
        - Parent Commit: [{parent_commit_hash}]({parent_commit_url})
    sections:
      - id: content
        title: Content
        description: Changes to website content.
      - id: design
        title: Design
        description: Changes to website design.
      - id: backend
        title: Backend
        description: Changes to website backend.
  package_private:
    name: Private API
    path: ".dev/CHANGELOG.md"
    title: "${{ name }}$ Changelog (Private API)"
    intro: |
      This file contains changes to the private API, as well as changes that
      do not induce a version bump.
    sections:
      - id: removed
        title: ⛔ Removed Features
        description: Features that have been removed from the private API.
      - id: changed
        title: 🚫 Changed Features
        description: Features that have been changed in the private API.
      - id: added
        title: 🌱 New Features
        description: Features that have been added to the private API.
      - id: enhanced
        title: ✨ Enhanced Features
        description: Features that have been enhanced in the private API.
      - id: fixed
        title: 🐞 Bug Fixes
        description: Bug fixes that have been applied to the private API.
      - id: improved
        title: 🚀 Performance Improvements
        description: Performance improvements that have been applied to the private API.
      - id: docs
        title: 📝 Docstring Fixes
        description: Docstring fixes that have been applied to the private API.
      - id: build
        title: 🛠️ Build System Changes
        description: Changes to the package build system.
      - id: refactor
        title: 🧹 Refactorings
        description: Code refactorings.
      - id: style
        title: 🎨 Style Changes
        description: Code style changes.
  tests:
    name: Test Suite
    path: "tests/CHANGELOG.md"
    title: "${{ name }}$ Changelog (Test Suite)"
    intro: |
      This changelog documents the changes to the test suite.
    sections:
      - id: removed
        title: ⛔ Removed Features
        description: Features that have been removed from the test suite.
      - id: changed
        title: 🚫 Changed Features
        description: Features that have been changed in the test suite.
      - id: added
        title: 🌱 New Features
        description: Features that have been added to the test suite.
      - id: enhanced
        title: ✨ Enhanced Features
        description: Features that have been enhanced in the test suite.
      - id: fixed
        title: 🐞 Bug Fixes
        description: Bug fixes that have been applied to the test suite.
      - id: improved
        title: 🚀 Performance Improvements
        description: Performance improvements that have been applied to the test suite.
      - id: docs
        title: 📝 Docstring Fixes
        description: Docstring fixes that have been applied to the test suite.
      - id: build
        title: 🛠️ Build System Changes
        description: Changes to the test-suite build system.
      - id: refactor
        title: 🧹 Refactorings
        description: Code refactorings in the test-suite.
      - id: style
        title: 🎨 Style Changes
        description: Code style changes in the test-suite.
  meta:
    name: Meta Content
    path: .meta/CHANGELOG.md
    title: ${{ name }}$ Changelog (Meta)
    intro: This changelog documents the changes to the meta content.
    sections:
      - id: credits
        title: Credits
        description: Changes to core/credits.yaml file.
      - id: extensions
        title: Extensions
        description: Changes to core/extensions.yaml file.
      - id: intro
        title: Intro
        description: Changes to core/intro.yaml file.
      - id: license
        title: License
        description: Changes to core/license.yaml file.
      - id: changelog
        title: Changelogs
        description: Changes to dev/changelogs.yaml file.
      - id: commits
        title: Commits
        description: Changes to dev/commits.yaml file.
      - id: issues
        title: Issues
        description: Changes to dev/issues.yaml file.
      - id: labels
        title: Labels
        description: Changes to dev/labels.yaml file.
      - id: maintainers
        title: Maintainers
        description: Changes to dev/maintainers.yaml file.
      - id: repo
        title: Repo
        description: Changes to dev/repo.yaml file.
      - id: workflows
        title: Workflows
        description: Changes to dev/workflows.yaml file.
      - id: package_metadata
        title: Package Metadata
        description: Changes to package/metadata.yaml file.
      - id: package_build
        title: Package Build System.
        description: Changes to package/config_build files.
      - id: package_tools
        title: Package Configurations.
        description: Changes to package/config_tools files.
  workflows:
    name: Workflows
    path: .github/CHANGELOG.md
    title: ${{ name }}$ Changelog (Workflows)
    intro: This changelog documents the changes to the workflows.
    sections:
      - id: workflows
        title: Workflows
        description: Changes to workflows.
commit:
  auto:
    sync:
      type: auto-sync
    maintain:
      type: auto-maintain
  primary:
    internal:
      type: internal
      description: Internal project changes.
    package_private:
      type: pkg
      subtypes:
        any:
          - priv-remove
          - priv-change
          - priv-feat
          - priv-enhance
          - priv-fix
          - priv-perf
          - priv-docs
          - build
          - refactor
          - style
      description: |
        Change the private API, the build system, or refactor code,
        without affecting the public API,
        and without publishing a new package release.
    tests:
      type: test
      subtypes:
        any:
          - test-remove
          - test-change
          - test-feat
          - test-enhance
          - test-fix
          - test-perf
          - test-docs
          - test-build
          - test-refactor
          - test-style
      description: |
        Change the test-suite, without affecting the public API,
        and without publishing a new package release.
    workflows:
      type: ci
      subtypes:
        any: [ ci ]
      description: |
        Change the GitHub workflows of the repository.
  secondary:
    remove:
      description: Remove a feature/component from the public API.
      changelog_id: pkg_ap
      changelog_section_id: removed
    change:
      description: Change a feature/component in the public API.
      changelog_id: pkg_ap
      changelog_section_id: changed
    deprecate:
      description: Deprecate a feature/component from the public API.
      changelog_id: pkg_ap
      changelog_section_id: deprecated
    feat:
      description: Add a feature/component to the public API.
      changelog_id: pkg_ap
      changelog_section_id: added
    enhance:
      description: Enhance a feature/component in the public API.
      changelog_id: pkg_ap
      changelog_section_id: enhanced
    secure:
      description: Fix a security issue in the public API.
      changelog_id: pkg_ap
      changelog_section_id: security
    fix:
      description: Fix a bug in the public API.
      changelog_id: pkg_ap
      changelog_section_id: fixed
    perf:
      description: Improve performance in the public API.
      changelog_id: pkg_ap
      changelog_section_id: improved
    docs:
      description: Fix documentation.
      changelog_id: pkg_ap
      changelog_section_id: docs
    notes:
      description: Fix release notes.
      changelog_id: pkg_ap
      changelog_section_id: notes
    web-content:
      description: Change the website content.
      changelog_id: website
      changelog_section_id: content
    web-design:
      description: Change the website design.
      changelog_id: website
      changelog_section_id: design
    web-backend:
      description: Change the website backend.
      changelog_id: website
      changelog_section_id: backend
    priv-remove:
      description: Remove a feature/component from the private API.
      changelog_id: package_private
      changelog_section_id: removed
    priv-change:
      description: Change a feature/component in the private API.
      changelog_id: package_private
      changelog_section_id: changed
    priv-feat:
      description: Add a feature/component to the private API.
      changelog_id: package_private
      changelog_section_id: added
    priv-enhance:
      description: Enhance a feature/component in the private API.
      changelog_id: package_private
      changelog_section_id: enhanced
    priv-fix:
      description: Fix a bug in the private API.
      changelog_id: package_private
      changelog_section_id: fixed
    priv-perf:
      description: Improve performance in the private API.
      changelog_id: package_private
      changelog_section_id: improved
    priv-docs:
      description: Fix documentation.
      changelog_id: package_private
      changelog_section_id: docs
    build:
      description: Change the build system.
      changelog_id: package_private
      changelog_section_id: build
    refactor:
      description: Refactor code.
      changelog_id: package_private
      changelog_section_id: refactor
    style:
      description: Change text style and formatting without affecting the meaning.
      changelog_id: package_private
      changelog_section_id: style
    test-remove:
      description: Remove a feature/component from the test-suite.
      changelog_id: tests
      changelog_section_id: removed
    test-change:
      description: Change a feature/component in the test-suite.
      changelog_id: tests
      changelog_section_id: changed
    test-feat:
      description: Add a feature/component to the test-suite.
      changelog_id: tests
      changelog_section_id: added
    test-enhance:
      description: Enhance a feature/component in the test-suite.
      changelog_id: tests
      changelog_section_id: enhanced
    test-fix:
      description: Fix a bug in the test-suite.
      changelog_id: tests
      changelog_section_id: fixed
    test-perf:
      description: Improve performance in the test-suite.
      changelog_id: tests
      changelog_section_id: improved
    test-docs:
      description: Fix documentation in the test-suite.
      changelog_id: tests
      changelog_section_id: docs
    test-build:
      description: Change the test-suite build system.
      changelog_id: tests
      changelog_section_id: build
    test-refactor:
      description: Refactor code in the test-suite.
      changelog_id: tests
      changelog_section_id: refactor
    test-style:
      description: Change text style and formatting in the test-suite without affecting the meaning.
      changelog_id: tests
      changelog_section_id: style
    ci:
      description: Change the CI configuration files and scripts.
      changelog_id: workflows
      changelog_section_id: workflows
    meta-credits:
      description: Change credits meta content.
      changelog_id: meta
      changelog_section_id: credits
    meta-extensions:
      description: Change extensions meta content.
      changelog_id: meta
      changelog_section_id: extensions
#    meta-intro:
#      description: Change intro meta content.
#      changelog_id: 'meta
#      changelog_section_id: 'intro
#    meta-license:
#      description: Change license meta content.
#      changelog_id: 'meta
#      changelog_section_id: 'license
#    meta-changelog:
#      description: Change changelog meta content.
#      changelog_id: 'meta
#      changelog_section_id: 'changelog
#    meta-commits:
#      description: Change commits meta content.
#      changelog_id: 'meta
#      changelog_section_id: 'commits
#    meta-issues:
#      description: Change issues meta content.
#      changelog_id: 'meta
#      changelog_section_id: 'issues
#    meta-labels:
#      description: Change labels meta content.
#      changelog_id: 'meta
#      changelog_section_id: 'labels
#    meta-maintainers:
#      description: Change maintainers meta content.
#      changelog_id: 'meta
#      changelog_section_id: 'maintainers
#    meta-repo:
#      description: Change repo meta content.
#      changelog_id: 'meta
#      changelog_section_id: 'repo
#    meta-workflows:
#      description: Change workflows meta content.
#      changelog_id: 'meta
#      changelog_section_id: 'workflows
#    meta-package:
#      description: Change package meta content.
#      changelog_id: 'meta
#      changelog_section_id: 'package
#    meta-package-build:
#      description: Change package build meta content.
#      changelog_id: 'meta
#      changelog_section_id: 'package_build
#    meta-package-tools:
#      description: Change package tools meta content.
#      changelog_id: 'meta
#      changelog_section_id: 'package_tools
label:
  type:
    label:
      internal:
        suffix: 'Internal'
        description: Internal project changes.
  subtype:
    prefix: 'subtype: '
    color: '#0366d6'
    label:
      api:
        suffix: API
        description: Related to ${{ pkg.name }}$'s Python API.
      cli:
        suffix: CLI
        description: Related to ${{ pkg.name }}$'s command-line interface.
      gui:
        suffix: GUI
        description: Related to ${{ pkg.name }}$'s graphical user interface.
      setup:
        suffix: Setup
        description: Related to ${{ pkg.name }}$'s installation.
      doc_fix:
        suffix: Doc Fix
        description: Related to documentation fixes.
      doc_feat:
        suffix: Doc Feat
        description: Related to documentation features.
      doc_change:
        suffix: Doc Change
        description: Related to documentation changes.
      test_api_fix:
        suffix: Test API Fix
        description: Related to fixes in ${{ test.name }}$'s Python API.
      test_cli_fix:
        suffix: Test CLI Fix
        description: Related to fixes in ${{ test.name }}$'s command-line interface.
      test_gui_fix:
        suffix: Test GUI Fix
        description: Related to fixes in ${{ test.name }}$'s graphical user interface.
      test_setup_fix:
        suffix: Test Setup Fix
        description: Related to fixes in ${{ test.name }}$'s installation.
      test_api_feat:
        suffix: Test API Feat
        description: Related to features in ${{ test.name }}$'s Python API.
      test_cli_feat:
        suffix: Test CLI Feat
        description: Related to features in ${{ test.name }}$'s command-line interface.
      test_gui_feat:
        suffix: Test GUI Feat
        description: Related to features in ${{ test.name }}$'s graphical user interface.
      test_api_change:
        suffix: Test API Change
        description: Related to changes in ${{ test.name }}$'s Python API.
      test_cli_change:
        suffix: Test CLI Change
        description: Related to changes in ${{ test.name }}$'s command-line interface.
      test_gui_change:
        suffix: Test GUI Change
        description: Related to changes in ${{ test.name }}$'s graphical user interface.
      refactor:
        suffix: Refactor
        description: Related to refactoring changes without affecting the API.
      config:
        suffix: Config
        description: Related to ${{ name }}$ metadata and settings.
      devops:
        suffix: DevOps
        description: Related to DevOps and CI/CD changes.
      maintenance:
        suffix: Maintenance
        description: Related to project maintenance tasks.
  custom:
    group:
      remark:
        prefix: 'remark: '
        color: '#0366d6'
        label:
          queued:
            suffix: 'Queued'
            description: The issue/pull-request is queued for processing.
          discuss:
            suffix: 'Discuss'
            description: The issue/pull-request requires more discussion.
          need_volunteer:
            suffix: 'Need Volunteer'
            description: The issue/pull-request requires a volunteer.
issue:
  blank_enabled: false
  contact_links:
    - name: '🎓️  Learn More'
      about: Not sure where to start? Read our contribution guide to learn more.
      url: ${{ web.page.contribute.url }}$
    - name: '💬  Contact Us'
      about: Have another inquiry or need help? Contact us directly!
      url: ${{ web.page.contact.url }}$
  __custom_template__:
    # Body Templates
    body_fix_api:
      - '*{{ issue.__custom_template__.header_bug }}*'
      - '*{{ issue.__custom_template__.address_api }}*'
      - ${{ issue.__custom__.issue_summary }}$
      - type: textarea
        id: test_case
        attributes:
          label: Test Case
          description: >-
            Please provide a [test case](https://docs.pytest.org/en/stable/getting-started.html)
            that demonstrates the bug:
            
            - At the top of the code block below,
            add the minimum number of imports required to reproduce the bug.
            
            - Replace the ellipsis (`...`) in the `test` function with a
            [Minimal Reproducible Example](https://stackoverflow.com/help/minimal-reproducible-example) (MRE).
            Use [`assert` statements](https://docs.pytest.org/en/stable/how-to/assert.html)
            to specify the expected results.
          value: |
            import ${{ .__custom__.python_api_names[0] }}$


            def test():
                ...
          render: python
        validations:
          required: true
    body_fix_cli:
      - '*{{ issue.__custom_template__.header_bug }}*'
      - '*{{ issue.__custom_template__.address_cli }}*'
      - ${{ issue.__custom__.issue_summary }}$
      - type: textarea
        id: test_case
        attributes:
          label: Test Case
          description: >-
            Please provide a [test case](https://docs.pytest.org/en/stable/getting-started.html)
            that demonstrates the bug:
            
            - In the `test` function below,
            replace the value of `command` with the
            exact command that is causing the problem.
            
            - Replace the value of `expected_return_code`
            with the expected return code of the command.
            
            - Replace the value of `expected_output` with the expected output of the command.
            Use [`assert` statements](https://docs.pytest.org/en/stable/how-to/assert.html)
            to specify the expected results.
            
            - If the command has side effects,
            add further [`assert` statements](https://docs.pytest.org/en/stable/how-to/assert.html)
            to specify the expected results.
          value: |
            import subprocess 


            def test():
                command = ""
                expected_return_code = 0
                expected_output = b""

                result = subprocess.run(command, stdout=subprocess.PIPE, shell=True)
                assert result.returncode == expected_return_code
                assert result.stdout == expected_output
          render: python
        validations:
          required: true
    body_fix_gui:
      - '*{{ issue.__custom_template__.header_bug }}*'
      - '*{{ issue.__custom_template__.address_gui }}*'
      - ${{ issue.__custom__.issue_summary }}$
      - ${{ issue.__custom__.mre_generic }}$
      - ${{ issue.__custom__.stderr_optional }}$
    body_fix_setup:
      - '*{{ issue.__custom_template__.header_bug }}*'
      - ${{ issue.__custom__.issue_summary }}$
      - ${{ issue.__custom__.mre_generic }}$
      - ${{ issue.__custom__.stderr_optional }}$
    body_feat_api:
      - '*{{ issue.__custom_template__.header_feature }}*'
      - '*{{ issue.__custom_template__.address_api }}*'
      - ${{ issue.__custom__.issue_summary }}$
      - ${{ issue.__custom__.proposal }}$
    body_feat_cli:
      - '*{{ issue.__custom_template__.header_feature }}*'
      - '*{{ issue.__custom_template__.address_cli }}*'
      - ${{ issue.__custom__.issue_summary }}$
      - ${{ issue.__custom__.proposal }}$
    body_feat_gui:
      - '*{{ issue.__custom_template__.header_feature }}*'
      - '*{{ issue.__custom_template__.address_gui }}*'
      - ${{ issue.__custom__.issue_summary }}$
      - ${{ issue.__custom__.proposal }}$
    body_change_api:
      - '*{{ issue.__custom_template__.header_breaking }}*'
      - '*{{ issue.__custom_template__.address_api }}*'
      - ${{ issue.__custom__.issue_summary }}$
      - ${{ issue.__custom__.proposal }}$
    body_change_cli:
      - '*{{ issue.__custom_template__.header_breaking }}*'
      - '*{{ issue.__custom_template__.address_cli }}*'
      - ${{ issue.__custom__.issue_summary }}$
      - ${{ issue.__custom__.proposal }}$
    body_change_gui:
      - '*{{ issue.__custom_template__.header_breaking }}*'
      - '*{{ issue.__custom_template__.address_gui }}*'
      - ${{ issue.__custom__.issue_summary }}$
      - ${{ issue.__custom__.proposal }}$
    body_fix_doc:
      - '*{{ issue.__custom_template__.header }}*'
      - ${{ issue.__custom__.verify_bug }}$
      - '*{{ issue.__custom__.agreements }}*'
      - ${{ issue.__custom__.heading_bug_report }}$
      - ${{ issue.__custom__.version }}$
      - '*{{ issue.__custom_template__.address_doc }}*'
      - ${{ issue.__custom__.issue_summary }}$
      - ${{ issue.__custom__.mre_generic }}$
    body_feat_doc:
      - '*{{ issue.__custom_template__.header }}*'
      - ${{ issue.__custom__.verify_feat }}$
      - '*{{ issue.__custom__.agreements }}*'
      - ${{ issue.__custom__.heading_feature_request }}$
      - ${{ issue.__custom__.version }}$
      - '*{{ issue.__custom_template__.address_doc }}*'
      - ${{ issue.__custom__.issue_summary }}$
      - ${{ issue.__custom__.proposal }}$
    body_change_doc:
      - '*{{ issue.__custom_template__.header }}*'
      - ${{ issue.__custom__.verify_change }}$
      - '*{{ issue.__custom__.agreements }}*'
      - ${{ issue.__custom__.heading_change_request }}$
      - ${{ issue.__custom__.version }}$
      - '*{{ issue.__custom_template__.address_doc }}*'
      - ${{ issue.__custom__.issue_summary }}$
      - ${{ issue.__custom__.proposal }}$
    body_refactor:
      - '*{{ issue.__custom_template__.header }}*'
      - '*{{ issue.__custom__.agreements }}*'
      - ${{ issue.__custom__.heading_change_request }}$
      - ${{ issue.__custom__.version }}$
      - ${{ issue.__custom__.issue_summary }}$
      - ${{ issue.__custom__.proposal }}$
    body_config:
      - '*{{ issue.__custom_template__.header }}*'
      - '*{{ issue.__custom__.agreements }}*'
      - ${{ issue.__custom__.heading_change_request }}$
      - ${{ issue.__custom__.version }}$
      - '*{{ issue.__custom_template__.address_config }}*'
      - ${{ issue.__custom__.issue_summary }}$
      - ${{ issue.__custom__.proposal }}$
    body_devops:
      - '*{{ issue.__custom_template__.header }}*'
      - '*{{ issue.__custom__.agreements }}*'
      - ${{ issue.__custom__.heading_change_request }}$
      - ${{ issue.__custom__.version }}$
      - '*{{ issue.__custom_template__.address_config }}*'
      - ${{ issue.__custom__.issue_summary }}$
      - ${{ issue.__custom__.proposal }}$
    body_maintenance:
      - '*{{ issue.__custom_template__.header }}*'
      - '*{{ issue.__custom__.agreements }}*'
      - ${{ issue.__custom__.heading_change_request }}$
      - ${{ issue.__custom__.version }}$
      - ${{ issue.__custom__.issue_summary }}$
      - ${{ issue.__custom__.proposal }}$
    # Body Header Templates
    header_bug:
      - '*{{ issue.__custom_template__.header }}*'
      - ${{ issue.__custom__.verify_bug }}$
      - '*{{ issue.__custom__.agreements }}*'
      - '*{{ issue.__custom__.environment }}*'
      - ${{ issue.__custom__.heading_bug_report }}$
      - ${{ issue.__custom__.version }}$
    header_feature:
      - '*{{ issue.__custom_template__.header }}*'
      - ${{ issue.__custom__.verify_feat }}$
      - '*{{ issue.__custom__.agreements }}*'
      - ${{ issue.__custom__.heading_feature_request }}$
      - ${{ issue.__custom__.version }}$
    header_breaking:
      - '*{{ issue.__custom_template__.header }}*'
      - ${{ issue.__custom__.verify_change }}$
      - '*{{ issue.__custom__.agreements }}*'
      - ${{ issue.__custom__.heading_change_request }}$
      - ${{ issue.__custom__.version }}$
    header:
      - type: markdown
        attributes:
          value: >-
            <p align="justify">
              Thank you for providing feedback on ${{ name }}$;
              we greatly appreciate your contribution!
              Before submitting a ticket,
              please take a moment to review and accept our terms and conditions.
            </p>
      - type: markdown
        attributes:
          value: |
            <br>
            
            ## 🤝 Terms and Conditions
      - type: markdown
        attributes:
          value: |
            ### ⛔ Choosing the Right Form

            <p align="justify">
              Please note that this form is specifically for ${{ .__custom_template__.purpose }}$,
              For other types of issues and requests, select the appropriate form
              from the <a href="${{ repo.url.issues.chooser }}$">issue template chooser</a>.
              If you are unsure about which form to choose or have another inquiry,
              please open a discussion in our <a href="${{ repo.url.discussions.home }}$">discussion forum</a>.
            </p>
    # Template Chooser Descriptions
    description_bug: >-
      Report problems and errors in
      ${{ .__custom__.pkg_name }}$'s ${{ .__custom__.pkg_entry_name }}$.
    description_feat: >-
      Request backward-compatible improvements and new functionalities
      in ${{ .__custom__.pkg_name }}$'s ${{ .__custom__.pkg_entry_name }}$.
    description_break: >-
      Request backward-incompatible changes to
      ${{ .__custom__.pkg_name }}$'s ${{ .__custom__.pkg_entry_name }}$.
    # Form Purpose
    purpose_bug: >-
      reporting a <b>non-security-related bug in
      ${{ .__custom__.pkg_name }}$'s ${{ .__custom__.pkg_entry_name }}$</b>,
      i.e. an unexpected behavior or result
      in ${{ .__custom__.pkg_name }}$'s ${{ .__custom__.pkg_entry_description }}$.
    purpose_feat: >-
      requesting a <b>backward-compatible improvement</b> or <b>new functionality</b> in
      ${{ .__custom__.pkg_name }}$'s ${{ .__custom__.pkg_entry_name }}$,
      i.e. a non-breaking change (that is not a bug fix) in
      ${{ .__custom__.pkg_name }}$'s ${{ .__custom__.pkg_entry_description }}$.
    purpose_break: >-
      requesting a <b>backward-incompatible change</b> in
      ${{ .__custom__.pkg_name }}$'s ${{ .__custom__.pkg_entry_name }}$,
      i.e. a breaking change in behaviour or functionalities of
      ${{ .__custom__.pkg_name }}$'s ${{ .__custom__.pkg_entry_description }}$.
    # Address
    address_api:
      - type: dropdown
        id: entrypoint
        attributes:
          label: API Entry Point
          description: Please select the relevant API entry point.
          multiple: false
          options: ${{ .__custom__.python_api_names }}$
          default: 0
        validations:
          required: true
      - type: input
        id: endpoint
        attributes:
          label: Fully Qualified Name
          description: >-
            Please provide the fully qualified name (minus the entry point)
            of the relevant API endpoint.
            For example, for a method at
            `${{ .__custom__.python_api_names[0] }}$.module_name.ClassName.method_name`
            in the entry point `${{ .__custom__.python_api_names[0] }}$`,
            you should write `module_name.ClassName.method_name`.
          placeholder: module_name.ClassName.method_name
        validations:
          required: true
    address_cli:
      - type: dropdown
        id: entrypoint
        attributes:
          label: CLI Entry Point
          description: Please select the relevant CLI entry point.
          multiple: false
          options: ${{ .__custom__.cli_names }}$
          default: 0
        validations:
          required: true
    address_gui:
      - type: dropdown
        id: entrypoint
        attributes:
          label: GUI Entry Point
          description: Please select the affected GUI entry point.
          multiple: false
          options: ${{ .__custom__.gui_names }}$
          default: 0
        validations:
          required: true
    address_doc:
      - type: input
        id: url
        attributes:
          label: URL
          description: >-
            Please provide the URL of the relevant web page or repository file.
          placeholder: ${{ web.url.home }}$
        validations:
          required: true
    address_config:
      - type: input
        id: url
        attributes:
          label: URL
          description: >-
            Please provide the URL of the relevant configuration file in the repository.
          placeholder: ${{ repo.url.blob }}$/${{ control.path }}$/proj.yaml
        validations:
          required: true
      - type: input
        id: jsonpath
        attributes:
          label: Path
          description: >-
            Please provide the JSONPath expression to the relevant configuration field.
          placeholder: $.license.expression
        validations:
          required: true
  __custom__:
    title_api: ' 🖥 API'
    title_cli: ' ⌨️ CLI'
    title_gui: ' 🖱 GUI'
    title_setup: ' ⚙️ Setup'
    title_bug: ' 🐞 Bug Report'
    title_feat: ' ✨ Feature Request'
    title_breaking: ' 💥 Change Request'
    title_doc: ' 📚 Docs'
    title_test: ' 🧪 Test'
    heading_bug_report:
      type: markdown
      attributes:
        value: |
          <br>

          ## 🐞 Bug Report
    heading_feature_request:
      type: markdown
      attributes:
        value: |
          <br>

          ## ✨ Feature Request
    heading_change_request:
      type: markdown
      attributes:
        value: |
          <br>

          ## 💥 Change Request
    agreements:
      - type: markdown
        attributes:
          value: |
            ### ℹ️ Choosing the Right Title
            
            <p align="justify">Please write a concise and descriptive title and
            use relevant keywords to help others find the issue.</p>
      - type: markdown
        attributes:
          value: '### ✅ Agreements'
      - type: checkboxes
        id: terms
        attributes:
          label: >-
            To submit an issue, please agree to the following terms and conditions:
          options:
            - label: >-
                I confirm that I am following ${{ name }}$'s
                [Contribution Guidelines](${{ web.page.contribute.url }}$).
              required: true
            - label: >-
                I agree to follow ${{ name }}$'s
                [Code of Conduct](${{ health.code_of_conduct.url }}$).
              required: true
      - type: markdown
        attributes:
          value: '### 🧑‍💻️ Collaboration'
      - type: checkboxes
        id: collab
        attributes:
          label: |
            Thank you again for filling out this ticket.
            If you are willing to collaborate on its implementation,
            please select the option below.
          options:
            - label: >-
                I am willing to collaborate on this issue and submit a pull request.
              required: false
    environment:
      - type: markdown
        attributes:
          value: |
            <br>
            
            ## 🎛 Environment Specifications
      - type: dropdown
        id: os
        attributes:
          label: Operating System
          description: |
            Please select all operating systems on which you have encountered the bug.
          multiple: true
          options: ${{ project.os_names }}$
        validations:
          required: true
      - type: dropdown
        id: python_version
        attributes:
          label: Python Version
          description: |
            Please select all Python versions in which you have encountered the bug.
          multiple: true
          options: ${{ project.python_versions }}$
          default: 0
        validations:
          required: true
      - type: dropdown
        id: package_manager
        attributes:
          label: Package Manager
          description: |
            Please select the package manager used to download and install ${{ name }}$.
          multiple: false
          options: ${{ project.package_managers }}$
          default: 0
        validations:
          required: true
      - type: textarea
        id: environment
        attributes:
          label: Environment
          description: >-
            Please provide the details of all installed packages and their exact versions
            in the environment where you have encountered the bug. Follow the instructions below
            based on the package manager you have selected:

            1. **`pip`**: Run `pip freeze > requirements.txt` in your terminal within the environment,
            and copy the contents of the generated `requirements.txt` file here.

            2. **`conda`**: Run `conda env export > environment.yml` in your terminal within the environment
            (or alternatively `conda env export -n {YOUR_ENVIRONMENT_NAME} > environment.yml`),
            and copy the contents of the generated `environment.yml` file here.
          render: yaml
        validations:
          required: true
    version:
      type: dropdown
      id: version
      attributes:
        label: Version
        description: |
          Please select all relevant ${{ name }}$ versions.
        multiple: true
        options: ${{ project.versions }}$
        default: 0
      validations:
        required: true
    issue_summary:
      type: textarea
      id: summary
      attributes:
        label: Summary
        description: Please provide a summary of the issue.
      validations:
        required: true
    mre_generic:
      type: textarea
      id: mre
      attributes:
        label: Minimal Reproducible Example (MRE)
        description: >-
          Please provide an exact step-by-step instruction to reproduce the problem.
          You can also include screenshots/recordings by dragging and dropping them here.
        placeholder: |
          1. ...
          2. ...
          3. ...
      validations:
        required: true
    stderr_optional:
      type: textarea
      id: stderr
      attributes:
        label: Error Message
        description: If applicable, provide the full traceback of the error message.
        render: shell
      validations:
        required: false
    proposal:
      type: textarea
      id: proposal
      attributes:
        label: Proposal
        description: Please describe your proposal in detail.
      validations:
        required: true
    post_process:
      assign_creator:
        if_checkbox:
          id: collab
          number: 1
          is_checked: true
      body: |
        ### Target
        
        - **Version(s)**: {{ input.version }}
        {%- if input.entrypoint %}
        - Entry Point: `{{ input.entrypoint }}`
        {%- endif %}
        {%- if input.endpoint %}
        - End Point: `{{ input.endpoint }}`
        {%- endif %}
        {%- if input.url %}
        - URL: {{ input.url }}
        {%- endif %}
        {%- if input.jsonpath %}
        - JSON Path: `{{ input.jsonpath }}`
        {%- endif %}
        
        ### Summary
        
        {{ input.summary }}
        
        {%- if input.proposal %}
        ### Proposal
        
        {{ input.proposal }}
        {%- endif %}
        
        {%- if input.test_case %}
        ### Test Case
        
        {{ input.test_case }}
        {%- endif %}
        
        {%- if input.mre %}
        ### Minimal Reproducible Example
        
        {{ input.mre }}
        {%- endif %}
        
        {%- if input.stderr %}
        ### Output Log
        
        {{ input.stderr }}
        {%- endif %}
        
        {%- if input.environment %}
        ### Test Environment
        
        - **OS**: {{ input.os }}
        - **Python Version**: {{ input.python_version }}
        - **Package Manager**: {{ input.package_manager }}
        <details><summary><b>Environment</b></summary>
        
        {{ input.environment }}
        
        </details>
        {%- endif %}
    verify_bug:
      type: markdown
      attributes:
        value: |
          ### ⚠️ Verifying the Bug

          <p align="justify">
            Before submitting a report, please make sure that you are following our
            <a href="${{ web.page.contribute.url }}$">Bug Report Guidelines</a> to verify that:
          </p>

          - <p align="justify">The issue you are experiencing is in fact a bug, and not a documented expected behavior.</p>
          - <p align="justify">The bug is reproducible in the latest version of the release, and has not yet been reported.</p>
    verify_feat:
      type: markdown
      attributes:
        value: |
          ### ⚠️ Verifying the Request

          <p align="justify">
            Before submitting a report, please make sure that you are following our
            <a href="${{ web.page.contribute.url }}$">Feature Request Guidelines</a> to verify that:
          </p>

          - <p align="justify">Your request is for a backward-compatible change, and not a breaking change or a bug fix.</p>
          - <p align="justify">The request is not implemented in the latest version of the release, and has not yet been filed.</p>
    verify_change:
      type: markdown
      attributes:
        value: |
          ### ⚠️ Verifying the Request

          <p align="justify">
            Before submitting a report, please make sure that you are following our
            <a href="${{ web.page.contribute.url }}$">Change Request Guidelines</a> to verify that:
          </p>

          - <p align="justify">Your request is for a backward-incompatible change, and not a new feature, improvement, or bug fix.</p>
          - <p align="justify">The request is not implemented in the latest version of the release, and has not yet been filed.</p>
    custom_pkg_api:
      pkg_name: ${{ pkg.name }}$
      pkg_entry_name: 'API'
      pkg_entry_description: 'Python application programming interface'
      python_api_names: ${{ project.python_api_names }}$
    custom_pkg_cli:
      pkg_name: ${{ pkg.name }}$
      pkg_entry_name: 'CLI'
      pkg_entry_description: 'command-line interface'
      cli_names: ${{ project.cli_names }}$
    custom_pkg_gui:
      pkg_name: ${{ pkg.name }}$
      pkg_entry_name: 'GUI'
      pkg_entry_description: 'graphical user interface'
      gui_names: ${{ project.gui_names }}$
    custom_test_api:
      pkg_name: ${{ test.name }}$
      pkg_entry_name: 'API'
      pkg_entry_description: 'Python application programming interface'
      python_api_names: ${{ project.test_python_api_names }}$
    custom_test_cli:
      pkg_name: ${{ test.name }}$
      pkg_entry_name: 'CLI'
      pkg_entry_description: 'command-line interface'
      cli_names: ${{ project.test_cli_names }}$
    custom_test_gui:
      pkg_name: ${{ test.name }}$
      pkg_entry_name: 'GUI'
      pkg_entry_description: 'graphical user interface'
      gui_names: ${{ project.test_gui_names }}$
  forms:
    # Package
    - id: pkg_api_fix
      type: patch
      subtype: api
      pre_process:
        if_any: [ "${{ project.python_api_names }}$" ]
      name: ${{ issue.__custom__.title_api }}$${{ issue.__custom__.title_bug }}$
      description: ${{ issue.__custom_template__.description_bug }}$
      __custom__: ${{ issue.__custom__.custom_pkg_api }}$
      __custom_template__:
        purpose: ${{ issue.__custom_template__.purpose_bug }}$
      body: ${{ issue.__custom_template__.body_fix_api }}$
      post_process: ${{ issue.__custom__.post_process }}$
    - id: pkg_cli_fix
      type: patch
      subtype: cli
      pre_process:
        if_any: [ "${{ project.cli_names }}$" ]
      name: ${{ issue.__custom__.title_cli }}$${{ issue.__custom__.title_bug }}$
      description: ${{ issue.__custom_template__.description_bug }}$
      __custom__: ${{ issue.__custom__.custom_pkg_cli }}$
      __custom_template__:
        purpose: ${{ issue.__custom_template__.purpose_bug }}$
      body: ${{ issue.__custom_template__.body_fix_cli }}$
      post_process: ${{ issue.__custom__.post_process }}$
    - id: pkg_gui_fix
      pre_process:
        if_any: [ "${{ project.gui_names }}$" ]
      type: patch
      subtype: gui
      name: ${{ issue.__custom__.title_gui }}$${{ issue.__custom__.title_bug }}$
      description: ${{ issue.__custom_template__.description_bug }}$
      __custom__: ${{ issue.__custom__.custom_pkg_gui }}$
      __custom_template__:
        purpose: ${{ issue.__custom_template__.purpose_bug }}$
      body: ${{ issue.__custom_template__.body_fix_gui }}$
      post_process: ${{ issue.__custom__.post_process }}$
    - id: pkg_setup_fix
      type: patch
      subtype: setup
      name: ${{ issue.__custom__.title_setup }}$${{ issue.__custom__.title_bug }}$
      description: Report problems in downloading, installation, or initialization of ${{ pkg.name }}$.
      __custom_template__:
        purpose: >-
          reporting a <b>non-security-related bug in ${{ name }}$'s setup process</b>,
          i.e. an unexpected behavior that occurs during
          the download, installation, or initialization of the application.
      body: ${{ issue.__custom_template__.body_fix_setup }}$
      post_process: ${{ issue.__custom__.post_process }}$
    - id: pkg_api_feat
      type: minor
      subtype: api
      pre_process:
        if_any: [ "${{ project.python_api_names }}$" ]
      name: ${{ issue.__custom__.title_api }}$${{ issue.__custom__.title_feat }}$
      description: ${{ issue.__custom_template__.description_feat }}$
      __custom__: ${{ issue.__custom__.custom_pkg_api }}$
      __custom_template__:
        purpose: ${{ issue.__custom_template__.purpose_feat }}$
      body: ${{ issue.__custom_template__.body_feat_api }}$
      post_process: ${{ issue.__custom__.post_process }}$
    - id: pkg_cli_feat
      type: minor
      subtype: cli
      pre_process:
        if_any: [ "${{ project.cli_names }}$" ]
      name: ${{ issue.__custom__.title_cli }}$${{ issue.__custom__.title_feat }}$
      description: ${{ issue.__custom_template__.description_feat }}$
      __custom__: ${{ issue.__custom__.custom_pkg_cli }}$
      __custom_template__:
        purpose: ${{ issue.__custom_template__.purpose_feat }}$
      body: ${{ issue.__custom_template__.body_feat_cli }}$
      post_process: ${{ issue.__custom__.post_process }}$
    - id: pkg_gui_feat
      type: minor
      subtype: gui
      pre_process:
        if_any: [ "${{ project.gui_names }}$" ]
      name: ${{ issue.__custom__.title_gui }}$${{ issue.__custom__.title_feat }}$
      description: ${{ issue.__custom_template__.description_feat }}$
      __custom__: ${{ issue.__custom__.custom_pkg_gui }}$
      __custom_template__:
        purpose: ${{ issue.__custom_template__.purpose_feat }}$
      body: ${{ issue.__custom_template__.body_feat_gui }}$
      post_process: ${{ issue.__custom__.post_process }}$
    - id: pkg_api_change
      type: major
      subtype: api
      pre_process:
        if_any: [ "${{ project.python_api_names }}$" ]
      name: ${{ issue.__custom__.title_api }}$${{ issue.__custom__.title_breaking }}$
      description: ${{ issue.__custom_template__.description_break }}$
      __custom__: ${{ issue.__custom__.custom_pkg_api }}$
      __custom_template__:
        purpose: ${{ issue.__custom_template__.purpose_break }}$
      body: ${{ issue.__custom_template__.body_change_api }}$
      post_process: ${{ issue.__custom__.post_process }}$
    - id: pkg_cli_change
      type: major
      subtype: cli
      pre_process:
        if_any: [ "${{ project.cli_names }}$" ]
      name: ${{ issue.__custom__.title_cli }}$${{ issue.__custom__.title_breaking }}$
      description: ${{ issue.__custom_template__.description_break }}$
      __custom__: ${{ issue.__custom__.custom_pkg_cli }}$
      __custom_template__:
        purpose: ${{ issue.__custom_template__.purpose_break }}$
      body: ${{ issue.__custom_template__.body_change_cli }}$
      post_process: ${{ issue.__custom__.post_process }}$
    - id: pkg_gui_change
      type: major
      subtype: gui
      pre_process:
        if_any: [ "${{ project.gui_names }}$" ]
      name: ${{ issue.__custom__.title_gui }}$${{ issue.__custom__.title_breaking }}$
      description: ${{ issue.__custom_template__.description_break }}$
      __custom__: ${{ issue.__custom__.custom_pkg_gui }}$
      __custom_template__:
        purpose: ${{ issue.__custom_template__.purpose_break }}$
      body: ${{ issue.__custom_template__.body_change_gui }}$
      post_process: ${{ issue.__custom__.post_process }}$
    # Documentation
    - id: doc_fix
      type: post
      subtype: doc_fix
      name: ${{ issue.__custom__.title_doc }}$${{ issue.__custom__.title_bug }}$
      description: >-
        Report problems and errors 
        in ${{ name }}$'s website and documentation materials.
      __custom_template__:
        purpose: >-
          reporting a <b>non-security-related bug in
          ${{ name }}$'s website and documentation materials</b>,
          e.g. misspellings and other mechanical errors,
          broken links and images, layout issues, etc.
      body: ${{ issue.__custom_template__.body_fix_doc }}$
      post_process: ${{ issue.__custom__.post_process }}$
    - id: doc_feat
      type: post
      subtype: doc_feat
      name: ${{ issue.__custom__.title_doc }}$${{ issue.__custom__.title_feat }}$
      description: >-
        Request backward-compatible improvements and new content
        in ${{ name }}$'s website and documentation materials.
      __custom_template__:
        purpose: >-
          requesting a <b>backward-compatible improvement</b> or <b>new content</b> in
          ${{ name }}$'s website and documentation materials</b>,
          i.e. a change that is not a bug fix
          and does not break existing references or functionalities.
      body: ${{ issue.__custom_template__.body_feat_doc }}$
      post_process: ${{ issue.__custom__.post_process }}$
    - id: doc_change
      type: post
      subtype: doc_change
      name: ${{ issue.__custom__.title_doc }}$${{ issue.__custom__.title_breaking }}$
      description: >-
        Request backward-incompatible changes
        to ${{ name }}$'s website and documentation materials.
      __custom_template__:
        purpose: >-
          requesting a <b>backward-incompatible change</b> in
          ${{ name }}$'s website and documentation materials</b>,
          i.e. a change that breaks existing references or functionalities.
      body: ${{ issue.__custom_template__.body_change_doc }}$
      post_process: ${{ issue.__custom__.post_process }}$
    # Test Suite
    - id: test_api_fix
      type: post
      subtype: test_api_fix
      pre_process:
        if_any: [ "${{ project.test_python_api_names }}$" ]
      name: ${{ issue.__custom__.title_test }}$${{ issue.__custom__.title_api }}$${{ issue.__custom__.title_bug }}$
      description: ${{ issue.__custom_template__.description_bug }}$
      __custom__: ${{ issue.__custom__.custom_test_api }}$
      __custom_template__:
        purpose: ${{ issue.__custom_template__.purpose_bug }}$
      body: ${{ issue.__custom_template__.body_fix_api }}$
      post_process: ${{ issue.__custom__.post_process }}$
    - id: test_cli_fix
      type: post
      subtype: test_cli_fix
      pre_process:
        if_any: [ "${{ project.test_cli_names }}$" ]
      name: ${{ issue.__custom__.title_test }}$${{ issue.__custom__.title_cli }}$${{ issue.__custom__.title_bug }}$
      description: ${{ issue.__custom_template__.description_bug }}$
      __custom__: ${{ issue.__custom__.custom_test_cli }}$
      __custom_template__:
        purpose: ${{ issue.__custom_template__.purpose_bug }}$
      body: ${{ issue.__custom_template__.body_fix_cli }}$
      post_process: ${{ issue.__custom__.post_process }}$
    - id: test_gui_fix
      type: post
      subtype: test_gui_fix
      pre_process:
        if_any: [ "${{ project.test_gui_names }}$" ]
      name: ${{ issue.__custom__.title_test }}$${{ issue.__custom__.title_gui }}$${{ issue.__custom__.title_bug }}$
      description: ${{ issue.__custom_template__.description_bug }}$
      __custom__: ${{ issue.__custom__.custom_test_gui }}$
      __custom_template__:
        purpose: ${{ issue.__custom_template__.purpose_bug }}$
      body: ${{ issue.__custom_template__.body_fix_gui }}$
      post_process: ${{ issue.__custom__.post_process }}$
    - id: test_setup_fix
      type: post
      subtype: test_setup_fix
      name: ${{ issue.__custom__.title_test }}$${{ issue.__custom__.title_setup }}$${{ issue.__custom__.title_bug }}$
      description: Report problems in downloading, installation, or initialization of ${{ pkg.name }}$.
      __custom_template__:
        purpose: >-
          reporting a <b>non-security-related bug in ${{ name }}$'s setup process</b>,
          i.e. an unexpected behavior that occurs during
          the download, installation, or initialization of the application.
      body: ${{ issue.__custom_template__.body_fix_setup }}$
      post_process: ${{ issue.__custom__.post_process }}$
    - id: test_api_feat
      type: post
      subtype: test_api_feat
      pre_process:
        if_any: [ "${{ project.test_python_api_names }}$" ]
      name: ${{ issue.__custom__.title_test }}$${{ issue.__custom__.title_api }}$${{ issue.__custom__.title_feat }}$
      description: ${{ issue.__custom_template__.description_feat }}$
      __custom__: ${{ issue.__custom__.custom_test_api }}$
      __custom_template__:
        purpose: ${{ issue.__custom_template__.purpose_feat }}$
      body: ${{ issue.__custom_template__.body_feat_api }}$
      post_process: ${{ issue.__custom__.post_process }}$
    - id: test_cli_feat
      type: post
      subtype: test_cli_feat
      pre_process:
        if_any: [ "${{ project.test_cli_names }}$" ]
      name: ${{ issue.__custom__.title_test }}$${{ issue.__custom__.title_cli }}$${{ issue.__custom__.title_feat }}$
      description: ${{ issue.__custom_template__.description_feat }}$
      __custom__: ${{ issue.__custom__.custom_test_cli }}$
      __custom_template__:
        purpose: ${{ issue.__custom_template__.purpose_feat }}$
      body: ${{ issue.__custom_template__.body_feat_cli }}$
      post_process: ${{ issue.__custom__.post_process }}$
    - id: test_gui_feat
      type: post
      subtype: test_gui_feat
      pre_process:
        if_any: [ "${{ project.test_gui_names }}$" ]
      name: ${{ issue.__custom__.title_test }}$${{ issue.__custom__.title_gui }}$${{ issue.__custom__.title_feat }}$
      description: ${{ issue.__custom_template__.description_feat }}$
      __custom__: ${{ issue.__custom__.custom_test_gui }}$
      __custom_template__:
        purpose: ${{ issue.__custom_template__.purpose_feat }}$
      body: ${{ issue.__custom_template__.body_feat_gui }}$
      post_process: ${{ issue.__custom__.post_process }}$
    - id: test_api_change
      type: post
      subtype: test_api_change
      pre_process:
        if_any: [ "${{ project.test_python_api_names }}$" ]
      name: ${{ issue.__custom__.title_test }}$${{ issue.__custom__.title_api }}$${{ issue.__custom__.title_breaking }}$
      description: ${{ issue.__custom_template__.description_break }}$
      __custom__: ${{ issue.__custom__.custom_test_api }}$
      __custom_template__:
        purpose: ${{ issue.__custom_template__.purpose_break }}$
      body: ${{ issue.__custom_template__.body_change_api }}$
      post_process: ${{ issue.__custom__.post_process }}$
    - id: test_cli_change
      type: post
      subtype: test_cli_change
      pre_process:
        if_any: [ "${{ project.test_cli_names }}$" ]
      name: ${{ issue.__custom__.title_test }}$${{ issue.__custom__.title_cli }}$${{ issue.__custom__.title_breaking }}$
      description: ${{ issue.__custom_template__.description_break }}$
      __custom__: ${{ issue.__custom__.custom_test_cli }}$
      __custom_template__:
        purpose: ${{ issue.__custom_template__.purpose_break }}$
      body: ${{ issue.__custom_template__.body_change_cli }}$
      post_process: ${{ issue.__custom__.post_process }}$
    - id: test_gui_change
      type: post
      subtype: test_gui_change
      pre_process:
        if_any: [ "${{ project.test_gui_names }}$" ]
      name: ${{ issue.__custom__.title_test }}$${{ issue.__custom__.title_gui }}$${{ issue.__custom__.title_breaking }}$
      description: ${{ issue.__custom_template__.description_break }}$
      __custom__: ${{ issue.__custom__.custom_test_gui }}$
      __custom_template__:
        purpose: ${{ issue.__custom_template__.purpose_break }}$
      body: ${{ issue.__custom_template__.body_change_gui }}$
      post_process: ${{ issue.__custom__.post_process }}$
    # Refactoring
    - id: refactor
      type: post
      subtype: refactor
      name: ' 🧹️ Refactoring Request'
      description: >-
        Request code formatting and refactoring in ${{ name }}$'s source files.
      __custom_template__:
        purpose: >-
          requesting a <b>code formatting and refactoring</b> in ${{ name }}$'s source files,
          i.e. a change that improves the code quality, readability, and maintainability,
          without affecting the code's runtime behavior.
      body: ${{ issue.__custom_template__.body_refactor }}$
      post_process: ${{ issue.__custom__.post_process }}$
    # Internal
    - id: config
      type: internal
      subtype: config
      name: ' 🛠️ Configuration Request'
      description: >-
        Request a change in ${{ name }}$'s metadata and settings.
      __custom_template__:
        purpose: >-
          requesting a <b>reconfiguration</b> in ${{ name }}$'s metadata and settings,
          such as project information and other options that do not fall under
          other issue categories.
      body: ${{ issue.__custom_template__.body_config }}$
      post_process: ${{ issue.__custom__.post_process }}$
    - id: devops
      type: internal
      subtype: devops
      name: ' 🤖️ DevOps Request'
      description: >-
        Request a change in ${{ name }}$'s automated workflows and development environment.
      __custom_template__:
        purpose: >-
          requesting a <b>change in ${{ name }}$'s automated workflows and development environment</b>,
          such as CI/CD pipelines, testing, and deployment configurations.
      body: ${{ issue.__custom_template__.body_config }}$
      post_process: ${{ issue.__custom__.post_process }}$
    - id: maintenance
      type: internal
      subtype: maintenance
      name: ' 🧹️ Maintenance Request'
      description: Request a maintenance job in ${{ name }}$.
      __custom_template__:
        purpose: >-
          requesting a <b>maintenance job</b> in ${{ name }}$,
          such as file cleanup and other tasks that
          do not fall under other issue categories.
      body: ${{ issue.__custom_template__.body_maintenance }}$
      post_process: ${{ issue.__custom__.post_process }}$
pull:
  template:
    default: |
      ## Description
      Provide a brief description of the PR's purpose here.

      ## Content
      Notable points that this PR has either accomplished or will accomplish.
      - [ ] TODO 1

      ## Questions
      - [ ] Question1

      ## Status
       - [ ] Tests
       - [ ] Docs
       - [ ] CHANGELOG updated
       - [ ] Issue raised/referenced
       - [ ] Ready to merge

discussion:
  category:
    question_issues:
      form:
        title: "[General] "
        labels: [ "General Introduction" ]
        body:
          - type: markdown
            attributes:
              value: |
                This is text that will show up in the template!
          - type: textarea
            id: improvements
            attributes:
              label: Top 3 improvements
              description: "What are the top 3 improvements we could make to this project?"
              value: |
                1.
                2.
                3.
                ...
              render: bash
            validations:
              required: true
          - type: markdown
            attributes:
              value: |
                ## Markdown header
                And some more markdown
          - type: input
            id: has-id
            attributes:
              label: Suggestions
              description: A description about suggestions to help you
            validations:
              required: true
          - type: dropdown
            id: download
            attributes:
              label: Which area of this project could be most improved?
              options:
                - Documentation
                - Pull request review time
                - Bug fix time
                - Release cadence
            validations:
              required: true
          - type: checkboxes
            attributes:
              label: Check that box!
              options:
                - label: This one!
                  required: true
                - label: I won't stop you if you check this one, too
          - type: markdown
            attributes:
              value: |
                ### The thrilling conclusion
                _to our template_
