# Install package from a given source and run unit-tests.
# Install the package and run tests on a matrix of supported Python versions and operating systems.

name: '[Callable]: Package - Test'

on:
  workflow_call:
    inputs:
      config:
        type: string
        required: true
        description: Configuration as a JSON string.

jobs:
  test:
    name: '${{ matrix.config.os-name }} - Py ${{ matrix.config.python-version }}'
    permissions:
      id-token: write  # For token-less upload of coverage reports to Codecov.
    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJSON(inputs.config) }}
    runs-on: ${{ matrix.config.runner }}
    steps:
      - uses: RepoDynamics/PyTester@v1
        with:
          repository: ${{ matrix.config.repository }}
          ref: ${{ matrix.config.ref }}
          python-version: ${{ matrix.config.python-version }}
          tests-path: ${{ matrix.config.tests-path }}
          tests-name: ${{ matrix.config.tests-name }}
          pkg-src: ${{ matrix.config.pkg-src }}
          pkg-path: ${{ matrix.config.pkg-path }}
          pkg-name: ${{ matrix.config.pkg-name }}
          pkg-version: ${{ matrix.config.pkg-version }}
          pkg-req-path: ${{ matrix.config.pkg-req-path }}
          retries: ${{ matrix.config.retries }}
          retry-sleep-seconds: ${{ matrix.config.retry-sleep-seconds }}
          pyargs: ${{ matrix.config.pyargs }}
          args: ${{ matrix.config.args }}
          overrides: ${{ matrix.config.overrides }}
          report-artifact-name: ${{ matrix.config.report-artifact-name }}
