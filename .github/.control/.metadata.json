{
   "abstract": "VoteM8 is a Python library for consensus scoring and ranking of multi-criteria data. It implements multiple scoring methods including ECR, RbR, TOPSIS, VIKOR and others to combine different evaluation metrics into unified rankings. The library supports customizable weights, handles missing values, and provides both normalization and aggregation options. It includes a command-line interface and can process both CSV and SDF file formats, making it particularly useful for processing molecular docking scores and other scientific data requiring consensus analysis.",
   "announcement": {
      "path": "docs/website/announcement.html",
      "retention_days": 30,
      "url": "https://raw.githubusercontent.com/DrugBud-Suite/VoteM8/main/docs/website/announcement.html"
   },
   "branch": {
      "auto": {
         "name": "auto-update/",
         "ruleset": {
            "bypass_actors": [
               {
                  "mode": "always",
                  "role": "organization_admin"
               },
               {
                  "mode": "always",
                  "role": "repository_admin"
               }
            ],
            "enforcement": "active",
            "protect_creation": true,
            "protect_deletion": true,
            "protect_force_push": true,
            "require_linear_history": true,
            "require_signatures": true
         }
      },
      "dev": {
         "name": "dev/",
         "ruleset": {
            "bypass_actors": [
               {
                  "mode": "always",
                  "role": "organization_admin"
               },
               {
                  "mode": "always",
                  "role": "repository_admin"
               }
            ],
            "enforcement": "active",
            "protect_creation": true,
            "protect_deletion": true,
            "protect_force_push": true,
            "require_linear_history": true,
            "require_signatures": true
         }
      },
      "main": {
         "name": "main",
         "ruleset": {
            "bypass_actors": [
               {
                  "mode": "always",
                  "role": "organization_admin"
               },
               {
                  "mode": "always",
                  "role": "repository_admin"
               }
            ],
            "enforcement": "active",
            "protect_creation": true,
            "protect_deletion": true,
            "protect_force_push": true,
            "require_linear_history": true,
            "require_pull_request": {
               "dismiss_stale_reviews_on_push": true,
               "require_code_owner_review": true,
               "require_last_push_approval": true,
               "require_review_thread_resolution": true,
               "required_approving_review_count": 1
            },
            "require_signatures": true
         }
      },
      "pre": {
         "name": "prerelease/v",
         "ruleset": {
            "bypass_actors": [
               {
                  "mode": "always",
                  "role": "organization_admin"
               },
               {
                  "mode": "always",
                  "role": "repository_admin"
               }
            ],
            "enforcement": "active",
            "protect_creation": true,
            "protect_deletion": true,
            "protect_force_push": true,
            "require_linear_history": true,
            "require_pull_request": {
               "dismiss_stale_reviews_on_push": true,
               "require_code_owner_review": true,
               "require_last_push_approval": true,
               "require_review_thread_resolution": true,
               "required_approving_review_count": 1
            },
            "require_signatures": true
         }
      },
      "release": {
         "name": "release/v",
         "ruleset": {
            "bypass_actors": [
               {
                  "mode": "always",
                  "role": "organization_admin"
               },
               {
                  "mode": "always",
                  "role": "repository_admin"
               }
            ],
            "enforcement": "active",
            "protect_creation": true,
            "protect_deletion": true,
            "protect_force_push": true,
            "require_linear_history": true,
            "require_pull_request": {
               "dismiss_stale_reviews_on_push": true,
               "require_code_owner_review": true,
               "require_last_push_approval": true,
               "require_review_thread_resolution": true,
               "required_approving_review_count": 1
            },
            "require_signatures": true
         }
      }
   },
   "changelog": {
      "meta": {
         "entry": {
            "intro": "- Commit Type: {commit_type}\n- Commit Title: {commit_title}\n- Parent Commit: [{parent_commit_hash}]({parent_commit_url})\n",
            "title": "[{ver_dist}] \u2013 {date}"
         },
         "intro": "This changelog documents the changes to the meta content.",
         "name": "Meta Content",
         "path": ".meta/CHANGELOG.md",
         "sections": [
            {
               "description": "Changes to core/credits.yaml file.",
               "id": "credits",
               "title": "Credits"
            },
            {
               "description": "Changes to core/extensions.yaml file.",
               "id": "extensions",
               "title": "Extensions"
            },
            {
               "description": "Changes to core/intro.yaml file.",
               "id": "intro",
               "title": "Intro"
            },
            {
               "description": "Changes to core/license.yaml file.",
               "id": "license",
               "title": "License"
            },
            {
               "description": "Changes to dev/changelogs.yaml file.",
               "id": "changelog",
               "title": "Changelogs"
            },
            {
               "description": "Changes to dev/commits.yaml file.",
               "id": "commits",
               "title": "Commits"
            },
            {
               "description": "Changes to dev/issues.yaml file.",
               "id": "issues",
               "title": "Issues"
            },
            {
               "description": "Changes to dev/labels.yaml file.",
               "id": "labels",
               "title": "Labels"
            },
            {
               "description": "Changes to dev/maintainers.yaml file.",
               "id": "maintainers",
               "title": "Maintainers"
            },
            {
               "description": "Changes to dev/repo.yaml file.",
               "id": "repo",
               "title": "Repo"
            },
            {
               "description": "Changes to dev/workflows.yaml file.",
               "id": "workflows",
               "title": "Workflows"
            },
            {
               "description": "Changes to package/metadata.yaml file.",
               "id": "package_metadata",
               "title": "Package Metadata"
            },
            {
               "description": "Changes to package/config_build files.",
               "id": "package_build",
               "title": "Package Build System."
            },
            {
               "description": "Changes to package/config_tools files.",
               "id": "package_tools",
               "title": "Package Configurations."
            }
         ],
         "title": "VoteM8 Changelog (Meta)"
      },
      "package_private": {
         "entry": {
            "intro": "- Commit Type: {commit_type}\n- Commit Title: {commit_title}\n- Parent Commit: [{parent_commit_hash}]({parent_commit_url})\n",
            "title": "[{ver_dist}] \u2013 {date}"
         },
         "intro": "This file contains changes to the private API, as well as changes that\ndo not induce a version bump.\n",
         "name": "Private API",
         "path": ".dev/CHANGELOG.md",
         "sections": [
            {
               "description": "Features that have been removed from the private API.",
               "id": "removed",
               "title": "\u26d4 Removed Features"
            },
            {
               "description": "Features that have been changed in the private API.",
               "id": "changed",
               "title": "\ud83d\udeab Changed Features"
            },
            {
               "description": "Features that have been added to the private API.",
               "id": "added",
               "title": "\ud83c\udf31 New Features"
            },
            {
               "description": "Features that have been enhanced in the private API.",
               "id": "enhanced",
               "title": "\u2728 Enhanced Features"
            },
            {
               "description": "Bug fixes that have been applied to the private API.",
               "id": "fixed",
               "title": "\ud83d\udc1e Bug Fixes"
            },
            {
               "description": "Performance improvements that have been applied to the private API.",
               "id": "improved",
               "title": "\ud83d\ude80 Performance Improvements"
            },
            {
               "description": "Docstring fixes that have been applied to the private API.",
               "id": "docs",
               "title": "\ud83d\udcdd Docstring Fixes"
            },
            {
               "description": "Changes to the package build system.",
               "id": "build",
               "title": "\ud83d\udee0\ufe0f Build System Changes"
            },
            {
               "description": "Code refactorings.",
               "id": "refactor",
               "title": "\ud83e\uddf9 Refactorings"
            },
            {
               "description": "Code style changes.",
               "id": "style",
               "title": "\ud83c\udfa8 Style Changes"
            }
         ],
         "title": "VoteM8 Changelog (Private API)"
      },
      "pkg_api": {
         "entry": {
            "intro": "- Commit Type: {commit_type}\n- Commit Title: {commit_title}\n- Parent Commit: [{parent_commit_hash}]({parent_commit_url})\n",
            "title": "[{ver_dist}] \u2013 {date}"
         },
         "intro": "This document records all changes to the public API of VoteM8 in each new final release.\nThe changes documented here are only those that affect the end-users of the software,\nsuch as added, changed, or removed features, bug fixes, and performance improvements.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n",
         "name": "Public API",
         "path": "CHANGELOG.md",
         "sections": [
            {
               "description": "Features that have been removed from the public API.\n",
               "id": "removed",
               "title": "\u26d4\u2002Removed Features"
            },
            {
               "description": "Features that have been changed in the public API.\n",
               "id": "changed",
               "title": "\ud83d\udeab\u2002Changed Features"
            },
            {
               "description": "Features that have been deprecated in the public API.\n",
               "id": "deprecated",
               "title": "\u26a0\ufe0f\u2002Deprecated Features"
            },
            {
               "description": "Features that have been added to the public API.\n",
               "id": "added",
               "title": "\ud83c\udf31\u2002New Features"
            },
            {
               "description": "Features that have been enhanced in the public API.\n",
               "id": "enhanced",
               "title": "\u2728\u2002Enhanced Features"
            },
            {
               "description": "Security fixes that have been applied to the public API.\n",
               "id": "security",
               "title": "\ud83d\udee1\ufe0f\u2002Security Fixes"
            },
            {
               "description": "Bug fixes that have been applied to the public API.\n",
               "id": "fixed",
               "title": "\ud83d\udc1e\u2002Bug Fixes"
            },
            {
               "description": "Performance improvements that have been applied to the public API.\n",
               "id": "improved",
               "title": "\ud83d\ude80\u2002Performance Improvements"
            },
            {
               "description": "Docstring fixes that have been applied to the public API.\n",
               "id": "docs",
               "title": "\ud83d\udcdd\u2002Docstring Fixes"
            },
            {
               "description": "Release-Notes fixes that have been applied to the public API.\n",
               "id": "notes",
               "title": "\ud83d\udcd4\ufe0f\u2002Release-Notes Fixes"
            }
         ],
         "title": "VoteM8 Changelog - Public API"
      },
      "pkg_api_pre": {
         "entry": {
            "intro": "- Commit Type: {commit_type}\n- Commit Title: {commit_title}\n- Parent Commit: [{parent_commit_hash}]({parent_commit_url})\n",
            "title": "[{ver_dist}] \u2013 {date}"
         },
         "intro": "This document records all changes to the public API of VoteM8 during a pre-release period.\nThe changes documented here are only those that affect the end-users of the software,\nsuch as added, changed, or removed features, bug fixes, and performance improvements.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n",
         "name": "Pre-release Public API",
         "path": "CHANGELOG_PRERELEASE.md",
         "sections": [
            {
               "description": "Features that have been removed from the public API.\n",
               "id": "removed",
               "title": "\u26d4\u2002Removed Features"
            },
            {
               "description": "Features that have been changed in the public API.\n",
               "id": "changed",
               "title": "\ud83d\udeab\u2002Changed Features"
            },
            {
               "description": "Features that have been deprecated in the public API.\n",
               "id": "deprecated",
               "title": "\u26a0\ufe0f\u2002Deprecated Features"
            },
            {
               "description": "Features that have been added to the public API.\n",
               "id": "added",
               "title": "\ud83c\udf31\u2002New Features"
            },
            {
               "description": "Features that have been enhanced in the public API.\n",
               "id": "enhanced",
               "title": "\u2728\u2002Enhanced Features"
            },
            {
               "description": "Security fixes that have been applied to the public API.\n",
               "id": "security",
               "title": "\ud83d\udee1\ufe0f\u2002Security Fixes"
            },
            {
               "description": "Bug fixes that have been applied to the public API.\n",
               "id": "fixed",
               "title": "\ud83d\udc1e\u2002Bug Fixes"
            },
            {
               "description": "Performance improvements that have been applied to the public API.\n",
               "id": "improved",
               "title": "\ud83d\ude80\u2002Performance Improvements"
            },
            {
               "description": "Docstring fixes that have been applied to the public API.\n",
               "id": "docs",
               "title": "\ud83d\udcdd\u2002Docstring Fixes"
            },
            {
               "description": "Release-Notes fixes that have been applied to the public API.\n",
               "id": "notes",
               "title": "\ud83d\udcd4\ufe0f\u2002Release-Notes Fixes"
            }
         ],
         "title": "VoteM8 Changelog - Pre-release Public API"
      },
      "tests": {
         "entry": {
            "intro": "- Commit Type: {commit_type}\n- Commit Title: {commit_title}\n- Parent Commit: [{parent_commit_hash}]({parent_commit_url})\n",
            "title": "[{ver_dist}] \u2013 {date}"
         },
         "intro": "This changelog documents the changes to the test suite.\n",
         "name": "Test Suite",
         "path": "tests/CHANGELOG.md",
         "sections": [
            {
               "description": "Features that have been removed from the test suite.",
               "id": "removed",
               "title": "\u26d4 Removed Features"
            },
            {
               "description": "Features that have been changed in the test suite.",
               "id": "changed",
               "title": "\ud83d\udeab Changed Features"
            },
            {
               "description": "Features that have been added to the test suite.",
               "id": "added",
               "title": "\ud83c\udf31 New Features"
            },
            {
               "description": "Features that have been enhanced in the test suite.",
               "id": "enhanced",
               "title": "\u2728 Enhanced Features"
            },
            {
               "description": "Bug fixes that have been applied to the test suite.",
               "id": "fixed",
               "title": "\ud83d\udc1e Bug Fixes"
            },
            {
               "description": "Performance improvements that have been applied to the test suite.",
               "id": "improved",
               "title": "\ud83d\ude80 Performance Improvements"
            },
            {
               "description": "Docstring fixes that have been applied to the test suite.",
               "id": "docs",
               "title": "\ud83d\udcdd Docstring Fixes"
            },
            {
               "description": "Changes to the test-suite build system.",
               "id": "build",
               "title": "\ud83d\udee0\ufe0f Build System Changes"
            },
            {
               "description": "Code refactorings in the test-suite.",
               "id": "refactor",
               "title": "\ud83e\uddf9 Refactorings"
            },
            {
               "description": "Code style changes in the test-suite.",
               "id": "style",
               "title": "\ud83c\udfa8 Style Changes"
            }
         ],
         "title": "VoteM8 Changelog (Test Suite)"
      },
      "website": {
         "entry": {
            "intro": "- Commit Type: {commit_type}\n- Commit Title: {commit_title}\n- Parent Commit: [{parent_commit_hash}]({parent_commit_url})\n",
            "title": "[{ver_dist}] \u2013 {date}"
         },
         "intro": "This changelog documents the changes to the website.\n",
         "name": "Website",
         "path": "docs/website/CHANGELOG.md",
         "sections": [
            {
               "description": "Changes to website content.",
               "id": "content",
               "title": "Content"
            },
            {
               "description": "Changes to website design.",
               "id": "design",
               "title": "Design"
            },
            {
               "description": "Changes to website backend.",
               "id": "backend",
               "title": "Backend"
            }
         ],
         "title": "VoteM8 Changelog (Website)"
      },
      "workflows": {
         "entry": {
            "intro": "- Commit Type: {commit_type}\n- Commit Title: {commit_title}\n- Parent Commit: [{parent_commit_hash}]({parent_commit_url})\n",
            "title": "[{ver_dist}] \u2013 {date}"
         },
         "intro": "This changelog documents the changes to the workflows.",
         "name": "Workflows",
         "path": ".github/CHANGELOG.md",
         "sections": [
            {
               "description": "Changes to workflows.",
               "id": "workflows",
               "title": "Workflows"
            }
         ],
         "title": "VoteM8 Changelog (Workflows)"
      }
   },
   "citation": {
      "abstract": "VoteM8 is a Python library for consensus scoring and ranking of multi-criteria data. It implements multiple scoring methods including ECR, RbR, TOPSIS, VIKOR and others to combine different evaluation metrics into unified rankings. The library supports customizable weights, handles missing values, and provides both normalization and aggregation options. It includes a command-line interface and can process both CSV and SDF file formats, making it particularly useful for processing molecular docking scores and other scientific data requiring consensus analysis.",
      "authors": [
         "owner"
      ],
      "contacts": [
         "owner"
      ],
      "keywords": [
         "consensus",
         "scoring",
         "molecular docking",
         "protein-ligand scoring",
         "virtual screening"
      ],
      "language": "eng",
      "license": "MIT",
      "message": "If you use VoteM8, please cite it using this reference.",
      "repository": {
         "build": "https://pypi.org/project/VoteM8",
         "source": "https://github.com/DrugBud-Suite/VoteM8"
      },
      "title": "VoteM8: VoteM8 - A Python package for consensus scoring",
      "type": "software",
      "url": "https://DrugBud-Suite.github.io/VoteM8"
   },
   "commit": {
      "auto": {
         "maintain": {
            "type": "auto-maintain"
         },
         "sync": {
            "type": "auto-sync"
         }
      },
      "primary": {
         "internal": {
            "description": "Internal project changes.",
            "type": "internal"
         },
         "major": {
            "description": "New major release containing breaking changes.",
            "type": "major"
         },
         "minor": {
            "description": "New minor release containing backward-compatible new features and improvements.",
            "type": "minor"
         },
         "package_private": {
            "description": "Change the private API, the build system, or refactor code,\nwithout affecting the public API,\nand without publishing a new package release.\n",
            "subtypes": {
               "any": [
                  "priv-remove",
                  "priv-change",
                  "priv-feat",
                  "priv-enhance",
                  "priv-fix",
                  "priv-perf",
                  "priv-docs",
                  "build",
                  "refactor",
                  "style"
               ]
            },
            "type": "pkg"
         },
         "patch": {
            "description": "New patch release containing backward-compatible bug fixes.",
            "type": "patch"
         },
         "post": {
            "description": "New post-release containing non-API related changes.",
            "type": "post"
         },
         "tests": {
            "description": "Change the test-suite, without affecting the public API,\nand without publishing a new package release.\n",
            "subtypes": {
               "any": [
                  "test-remove",
                  "test-change",
                  "test-feat",
                  "test-enhance",
                  "test-fix",
                  "test-perf",
                  "test-docs",
                  "test-build",
                  "test-refactor",
                  "test-style"
               ]
            },
            "type": "test"
         },
         "workflows": {
            "description": "Change the GitHub workflows of the repository.\n",
            "subtypes": {
               "any": [
                  "ci"
               ]
            },
            "type": "ci"
         }
      },
      "secondary": {
         "build": {
            "changelog_id": "package_private",
            "changelog_section_id": "build",
            "description": "Change the build system."
         },
         "change": {
            "changelog_id": "pkg_ap",
            "changelog_section_id": "changed",
            "description": "Change a feature/component in the public API."
         },
         "ci": {
            "changelog_id": "workflows",
            "changelog_section_id": "workflows",
            "description": "Change the CI configuration files and scripts."
         },
         "deprecate": {
            "changelog_id": "pkg_ap",
            "changelog_section_id": "deprecated",
            "description": "Deprecate a feature/component from the public API."
         },
         "docs": {
            "changelog_id": "pkg_ap",
            "changelog_section_id": "docs",
            "description": "Fix documentation."
         },
         "enhance": {
            "changelog_id": "pkg_ap",
            "changelog_section_id": "enhanced",
            "description": "Enhance a feature/component in the public API."
         },
         "feat": {
            "changelog_id": "pkg_ap",
            "changelog_section_id": "added",
            "description": "Add a feature/component to the public API."
         },
         "fix": {
            "changelog_id": "pkg_ap",
            "changelog_section_id": "fixed",
            "description": "Fix a bug in the public API."
         },
         "meta-credits": {
            "changelog_id": "meta",
            "changelog_section_id": "credits",
            "description": "Change credits meta content."
         },
         "meta-extensions": {
            "changelog_id": "meta",
            "changelog_section_id": "extensions",
            "description": "Change extensions meta content."
         },
         "notes": {
            "changelog_id": "pkg_ap",
            "changelog_section_id": "notes",
            "description": "Fix release notes."
         },
         "perf": {
            "changelog_id": "pkg_ap",
            "changelog_section_id": "improved",
            "description": "Improve performance in the public API."
         },
         "priv-change": {
            "changelog_id": "package_private",
            "changelog_section_id": "changed",
            "description": "Change a feature/component in the private API."
         },
         "priv-docs": {
            "changelog_id": "package_private",
            "changelog_section_id": "docs",
            "description": "Fix documentation."
         },
         "priv-enhance": {
            "changelog_id": "package_private",
            "changelog_section_id": "enhanced",
            "description": "Enhance a feature/component in the private API."
         },
         "priv-feat": {
            "changelog_id": "package_private",
            "changelog_section_id": "added",
            "description": "Add a feature/component to the private API."
         },
         "priv-fix": {
            "changelog_id": "package_private",
            "changelog_section_id": "fixed",
            "description": "Fix a bug in the private API."
         },
         "priv-perf": {
            "changelog_id": "package_private",
            "changelog_section_id": "improved",
            "description": "Improve performance in the private API."
         },
         "priv-remove": {
            "changelog_id": "package_private",
            "changelog_section_id": "removed",
            "description": "Remove a feature/component from the private API."
         },
         "refactor": {
            "changelog_id": "package_private",
            "changelog_section_id": "refactor",
            "description": "Refactor code."
         },
         "remove": {
            "changelog_id": "pkg_ap",
            "changelog_section_id": "removed",
            "description": "Remove a feature/component from the public API."
         },
         "secure": {
            "changelog_id": "pkg_ap",
            "changelog_section_id": "security",
            "description": "Fix a security issue in the public API."
         },
         "style": {
            "changelog_id": "package_private",
            "changelog_section_id": "style",
            "description": "Change text style and formatting without affecting the meaning."
         },
         "test-build": {
            "changelog_id": "tests",
            "changelog_section_id": "build",
            "description": "Change the test-suite build system."
         },
         "test-change": {
            "changelog_id": "tests",
            "changelog_section_id": "changed",
            "description": "Change a feature/component in the test-suite."
         },
         "test-docs": {
            "changelog_id": "tests",
            "changelog_section_id": "docs",
            "description": "Fix documentation in the test-suite."
         },
         "test-enhance": {
            "changelog_id": "tests",
            "changelog_section_id": "enhanced",
            "description": "Enhance a feature/component in the test-suite."
         },
         "test-feat": {
            "changelog_id": "tests",
            "changelog_section_id": "added",
            "description": "Add a feature/component to the test-suite."
         },
         "test-fix": {
            "changelog_id": "tests",
            "changelog_section_id": "fixed",
            "description": "Fix a bug in the test-suite."
         },
         "test-perf": {
            "changelog_id": "tests",
            "changelog_section_id": "improved",
            "description": "Improve performance in the test-suite."
         },
         "test-refactor": {
            "changelog_id": "tests",
            "changelog_section_id": "refactor",
            "description": "Refactor code in the test-suite."
         },
         "test-remove": {
            "changelog_id": "tests",
            "changelog_section_id": "removed",
            "description": "Remove a feature/component from the test-suite."
         },
         "test-style": {
            "changelog_id": "tests",
            "changelog_section_id": "style",
            "description": "Change text style and formatting in the test-suite without affecting the meaning."
         },
         "web-backend": {
            "changelog_id": "website",
            "changelog_section_id": "backend",
            "description": "Change the website backend."
         },
         "web-content": {
            "changelog_id": "website",
            "changelog_section_id": "content",
            "description": "Change the website content."
         },
         "web-design": {
            "changelog_id": "website",
            "changelog_section_id": "design",
            "description": "Change the website design."
         }
      }
   },
   "control": {
      "cache": {
         "retention_hours": {
            "doi": 1000,
            "extension": 0,
            "orcid": 240,
            "python": 500,
            "repo": 1,
            "user": 24
         }
      },
      "path": ".control",
      "url": "https://raw.githubusercontent.com/DrugBud-Suite/VoteM8/main/.github/.control/.metadata.json"
   },
   "copyright": "\u00a9 2024 DrugM8",
   "custom": {
      "readme_caution_msg_dynamic_dir": "> [!CAUTION]\n> **Do not manually modify the contents of this directory**.\n> All files in this directory are automatically maintained; do not modify them manually.\n> They can be managed through the [`user/discussion.yaml`](.control/user/discussion.yaml)\n> configuration file of the repository's [control center](.control).\n"
   },
   "discussion": {
      "category": {
         "announcements": {
            "id": "DIC_kwDONIKH_c4Cj1my",
            "name": "Announcements"
         },
         "general": {
            "id": "DIC_kwDONIKH_c4Cj1mz",
            "name": "General"
         },
         "ideas": {
            "id": "DIC_kwDONIKH_c4Cj1m1",
            "name": "Ideas"
         },
         "polls": {
            "id": "DIC_kwDONIKH_c4Cj1m3",
            "name": "Polls"
         },
         "q-a": {
            "id": "DIC_kwDONIKH_c4Cj1m0",
            "name": "Q&A"
         },
         "question_issues": {
            "form": {
               "body": [
                  {
                     "attributes": {
                        "value": "This is text that will show up in the template!\n"
                     },
                     "type": "markdown"
                  },
                  {
                     "attributes": {
                        "description": "What are the top 3 improvements we could make to this project?",
                        "label": "Top 3 improvements",
                        "render": "bash",
                        "value": "1.\n2.\n3.\n...\n"
                     },
                     "id": "improvements",
                     "type": "textarea",
                     "validations": {
                        "required": true
                     }
                  },
                  {
                     "attributes": {
                        "value": "## Markdown header\nAnd some more markdown\n"
                     },
                     "type": "markdown"
                  },
                  {
                     "attributes": {
                        "description": "A description about suggestions to help you",
                        "label": "Suggestions"
                     },
                     "id": "has-id",
                     "type": "input",
                     "validations": {
                        "required": true
                     }
                  },
                  {
                     "attributes": {
                        "label": "Which area of this project could be most improved?",
                        "options": [
                           "Documentation",
                           "Pull request review time",
                           "Bug fix time",
                           "Release cadence"
                        ]
                     },
                     "id": "download",
                     "type": "dropdown",
                     "validations": {
                        "required": true
                     }
                  },
                  {
                     "attributes": {
                        "label": "Check that box!",
                        "options": [
                           {
                              "label": "This one!",
                              "required": true
                           },
                           {
                              "label": "I won't stop you if you check this one, too"
                           }
                        ]
                     },
                     "type": "checkboxes"
                  },
                  {
                     "attributes": {
                        "value": "### The thrilling conclusion\n_to our template_\n"
                     },
                     "type": "markdown"
                  }
               ],
               "labels": [
                  "General Introduction"
               ],
               "title": "[General] "
            }
         },
         "show-and-tell": {
            "id": "DIC_kwDONIKH_c4Cj1m2",
            "name": "Show and tell"
         }
      }
   },
   "doc": {
      "prerelease_temp_path": "docs/prerelease_dev_protocols.md",
      "protocol": {
         "as_comment": false,
         "data": {
            "deployment": {
               "value": "\n\n**TBD**\n\n"
            },
            "description": {
               "value": "\n\n**TBD**\n\n"
            },
            "plan": {
               "value": "\n\n**TBD**\n\n"
            },
            "sdd": {
               "value": "\n\n**TBD**\n\n"
            },
            "srs": {
               "value": "\n\n**TBD**\n\n"
            },
            "testing": {
               "value": "\n\n**TBD**\n\n"
            },
            "triage": {
               "value": "\n\n**TBD**\n\n"
            },
            "urd": {
               "value": "\n\n{{ issue_body }}\n\n"
            }
         },
         "marker": {
            "end": "<!-- END: {} -->",
            "start": "<!-- BEGIN: {} -->"
         },
         "pr_list": {
            "template": "{%- macro make_pull(pull) -%}\n  #{{ pull.number }} (branch [{{ pull.head.name }}]({{ pull.head.url }}))\n{%- endmacro -%}\n\n{%- macro describe() -%}\n  {%- if pulls|length == 1 -%}\n    PR {{ make_pull(pulls[0]) }}.\n  {%- else -%}\n    the following PRs:\n    {% for pull in pulls -%}\n      > - {{ make_pull(pull) }}\n    {% endfor -%}\n  {%- endif -%}\n{%- endmacro %}\n\n> [!NOTE]\n> The implementation, testing, and deployment are tracked in {{ describe() -}}\n",
            "value": ""
         },
         "pr_title": {
            "value": "TBD"
         },
         "references": {
            "template": "[^{{ ref.id }}]: [{{ ref.title }}]({{ ref.url }})\n",
            "value": ""
         },
         "status": {
            "template": "{%- if status == \"triage\" -%}\n  Submitted and awaiting triage.\n{%- elif status == \"rejected\" -%}\n  Rejected and closed.\n{%- elif status == \"duplicate\" -%}\n  Marked as duplicate and closed.\n{%- elif status == \"invalid\" -%}\n  Marked as invalid and closed.\n{%- elif status == \"planning\" -%}\n  In the planning phase.\n{%- elif status == \"requirement_analysis\" -%}\n  In the requirement analysis phase.\n{%- elif status == \"design\" -%}\n  In the design phase.\n{%- elif status == \"implementation\" -%}\n  In the implementation phase.\n{%- elif status == \"testing\" -%}\n  In the testing phase.\n{%- elif status == \"deploy_alpha\" -%}\n  Deployed as alpha release.\n{%- elif status == \"deploy_beta\" -%}\n  Deployed as beta release.\n{%- elif status == \"deploy_rc\" -%}\n  Deployed as release candidate.\n{%- elif status == \"deploy_final\" -%}\n  Deployed as final release.\n{%- endif -%}\n",
            "value": ""
         },
         "status_checkbox": {
            "deploy": {
               "value": "\\n  - [ ] Deployment"
            },
            "design": {
               "value": "\\n  - [ ] Design"
            },
            "implementation": {
               "value": "\\n  - [ ] Implementation"
            },
            "planning": {
               "value": "\\n  - [ ] Planning"
            },
            "requirement_analysis": {
               "value": "\\n  - [ ] Requirement Analysis"
            },
            "testing": {
               "value": "\\n  - [ ] Testing"
            },
            "triage": {
               "value": "\\n  - [ ] Triage"
            }
         },
         "tasklist": {
            "value": "\n\n<!-- Tasklist\n - [ ] secondary-commit-type: Summary of task 1.\n   Description of task 1.\n   - [ ] secondary-commit-type: Summary of subtask 1.1.\n     Description of subtask 1.1.\n - [ ] secondary-commit-type: Summary of task 2.\n   Description of task 2.\n -->\n\n"
         },
         "template": "{%- macro make_user(user) -%}\n  {%- if user.name -%}\n    {{ user.name }} (@{{ user.login }})\n  {%- else -%}\n    @{{ user.login }}\n  {%- endif -%}\n{%- endmacro -%}\n\n# Development Protocol #{{ issue.number }}\n\n- **Type**: {{ form.description }}\n- **Client**: {{ make_user(issue.user) }}\n- **Summary**: {{ pr_title }}\n- **Current Status**: {{ status }}\n- **Progress**:\n  {{ status_checkbox.triage }}{{ status_checkbox.planning }}{{ status_checkbox.requirement_analysis }}{{ status_checkbox.design }}{{ status_checkbox.implementation }}{{ status_checkbox.testing }}{{ status_checkbox.deploy }}\n\n{{ pr_list }}\n\n## User Requirements Document (URD)\n\n{{ data.urd }}\n\n## Triage\n\n{{ data.triage }}\n\n## Plan\n\n{{ data.plan }}\n\n## Software Requirements Specification (SRS)\n\n{{ data.srs }}\n\n## Software Design Document (SDD)\n\n{{ data.sdd }}\n\n## Implementation\n\n{{ data.description }}\n\n### Task List\n\n{{ tasklist }}\n\n## Testing\n\n{{ data.testing }}\n\n## Deployment\n\n{{ data.deployment }}\n\n## Timeline\n\n<div align=\"center\">\n\n{{ timeline }}\n\n</div>\n\n{{ references }}\n",
         "timeline": {
            "template": "{%- macro make_entry(actor, description) -%}\n  | {{ now.strftime(\"%Y.%m.%d\") }} | {{ now.strftime(\"%H:%M:%S\") }} | {{ \"{:<32}\".format(actor) }} | {{ \"{:<53}\".format(description) }} |\n{%- endmacro -%}\n\n{%- macro make_user(user) -%}\n  {%- if user.name -%}\n    {{ user.name }} (@{{ user.login }})\n  {%- else -%}\n    @{{ user.login }}\n  {%- endif -%}\n{%- endmacro -%}\n\n{%- macro make_description() -%}\n  {%- if action == \"assigned\" -%}\n    Assigned to {{ make_user(payload.assignee) }}.\n  {%- elif action == \"unassigned\" -%}\n    Unassigned from {{ make_user(payload.assignee) }}.\n  {%- elif action == \"review_requested\" -%}\n    Assigned to {{ make_user(payload.requested_reviewer) }} for review.\n  {%- elif action == \"review_request_removed\" -%}\n    Unassigned from {{ make_user(payload.requested_reviewer) }} for review.\n  {%- elif action == \"synchronize\" -%}\n    New commits pushed to [{{ head.name }}]({{ head.url }}) (CI [{{ context.run_id }}]({{ workflow_url }})).\n  {%- elif action == \"labeled\" -%}\n    {%- set category = label.category -%}\n    {%- if category == \"type\" -%}\n        Type set to `{{ label.suffix }}`.\n    {%- elif category == \"subtype\" -%}\n        Subtype set to `{{ label.suffix }}`.\n    {%- elif category == \"version\" -%}\n          Target version set to `{{ label.suffix }}`.\n    {%- elif category == \"branch\" -%}\n          Target branch set to `{{ label.suffix }}`.\n    {%- elif category == \"status\" -%}\n      {%- set status = label.id -%}\n      {%- if status == \"triage\" -%}\n        Entered the triage phase.\n      {%- elif status == \"rejected\" -%}\n        Rejected and closed.\n      {%- elif status == \"duplicate\" -%}\n        Marked as duplicate and closed.\n      {%- elif status == \"invalid\" -%}\n        Marked as invalid and closed.\n      {%- elif status == \"planning\" -%}\n        Entered the planning phase.\n      {%- elif status == \"requirement_analysis\" -%}\n        Entered the requirement analysis phase.\n      {%- elif status == \"design\" -%}\n        Entered the design phase.\n      {%- elif status == \"implementation\" -%}\n        Entered the implementation phase.\n      {%- elif status == \"testing\" -%}\n        Entered the testing phase.\n      {%- elif status == \"deploy_alpha\" -%}\n        Deployed as alpha release.\n      {%- elif status == \"deploy_beta\" -%}\n        Deployed as beta release.\n      {%- elif status == \"deploy_rc\" -%}\n        Deployed as release candidate.\n      {%- elif status == \"deploy_final\" -%}\n        Deployed as final release.\n      {%- else -%}\n        Status changed to {{ status }}.\n      {%- endif -%}\n    {%- endif -%}\n  {%- elif action == \"opened\" -%}\n    {%- if event == \"issues\" -%}\n      Issue ticket #{{ payload.issue.number }} submitted by {{ make_user(payload.issue.user) }}.\n    {%- elif event == \"pull_request\" -%}\n      Pull request #{{ payload.pull_request.number }} opened by {{ make_user(payload.pull_request.user) }}.\n    {%- endif -%}\n  {%- endif -%}\n{%- endmacro %}\n{{ make_entry(make_user(payload.sender), make_description()) -}}\n",
            "value": "\n|    Date    |   Time   |              Actor               |                      Description                      |\n| ---------- | -------- | -------------------------------- | ----------------------------------------------------- |"
         }
      }
   },
   "file": {
      "duplicate": {
         "pkg_copyright_texts": {
            "destination": "pkg/COPYRIGHTS",
            "sources": []
         },
         "pkg_license_texts": {
            "destination": "pkg/LICENSES",
            "sources": [
               "LICENSE-MIT.md"
            ]
         },
         "test_copyright_texts": {
            "destination": "tests/COPYRIGHTS",
            "sources": []
         },
         "test_license_texts": {
            "destination": "tests/LICENSES",
            "sources": [
               "LICENSE-MIT.md"
            ]
         }
      }
   },
   "health": {
      "code_of_conduct": {
         "content": {
            "class": "covenant_code_of_conduct",
            "contact_name": "DrugM8",
            "contact_url": "mailto:alacournola+drugbud@gmail.com"
         },
         "path": "CODE_OF_CONDUCT.md",
         "url": "https://github.com/DrugBud-Suite/VoteM8/blob/main/CODE_OF_CONDUCT.md"
      },
      "contributing": {
         "content": {
            "body": [
               {
                  "attrs": {
                     "align": "justify"
                  },
                  "class": "paragraph",
                  "content": "Welcome to the <em>VoteM8</em> community!\nWe are excited to have you here,\nand grateful that you are considering contributing.\nVoteM8 is a free and open-source project that evolves with the needs of its users,\nand can only grow through the help of great members like you.\n"
               }
            ],
            "heading": "VoteM8 Contributing Guidelines",
            "section": [
               {
                  "body": [
                     {
                        "attrs": {
                           "align": "justify"
                        },
                        "class": "paragraph",
                        "content": "To keep all our project documentation organized and easy to find, the complete\n<a href=\"https://DrugBud-Suite.github.io/VoteM8/contribute\">contribution guide</a> is hosted on our website.\n"
                     }
                  ],
                  "heading": "How To Contribute"
               }
            ]
         },
         "path": "CONTRIBUTING.md",
         "url": "https://github.com/DrugBud-Suite/VoteM8/blob/main/CONTRIBUTING.md"
      },
      "security": {
         "content": {
            "heading": "Security Policy"
         },
         "path": "SECURITY.md",
         "url": "https://github.com/DrugBud-Suite/VoteM8/blob/main/SECURITY.md"
      }
   },
   "highlights": [
      {
         "description": "Implements 12 different consensus scoring methods including ECR, RbR, TOPSIS, VIKOR, and Pareto rankings. Each method can be used individually or combined for robust consensus analysis of complex datasets.",
         "title": "Multiple Consensus Methods"
      },
      {
         "description": "Handles both CSV and SDF file formats with built-in missing value strategies, customizable weights, and normalization options. Supports aggregation methods and weighted criteria to adapt to different analysis needs.",
         "title": "Flexible Data Processing"
      },
      {
         "description": "Provides an intuitive CLI for rapid analysis without coding. Users can specify methods, columns, weights, and other parameters directly from the command line, making it accessible for both programmers and non-programmers.",
         "title": "Command-Line Interface"
      }
   ],
   "issue": {
      "blank_enabled": false,
      "contact_links": [
         {
            "about": "Not sure where to start? Read our contribution guide to learn more.",
            "name": "\ud83c\udf93\ufe0f\u2002 Learn More",
            "url": "https://DrugBud-Suite.github.io/VoteM8/contribute"
         },
         {
            "about": "Have another inquiry or need help? Contact us directly!",
            "name": "\ud83d\udcac\u2002 Contact Us",
            "url": "https://DrugBud-Suite.github.io/VoteM8/about/contact"
         }
      ],
      "forms": [
         {
            "body": [
               {
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on VoteM8;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for reporting a <b>non-security-related bug in VoteM8's API</b>, i.e. an unexpected behavior or result in VoteM8's Python application programming interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/DrugBud-Suite/VoteM8/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/DrugBud-Suite/VoteM8/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Bug\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://DrugBud-Suite.github.io/VoteM8/contribute\">Bug Report Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">The issue you are experiencing is in fact a bug, and not a documented expected behavior.</p>\n- <p align=\"justify\">The bug is reproducible in the latest version of the release, and has not yet been reported.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following VoteM8's [Contribution Guidelines](https://DrugBud-Suite.github.io/VoteM8/contribute).<!-- ISSUE-ID: pkg_api_fix -->",
                           "required": true
                        },
                        {
                           "label": "I agree to follow VoteM8's [Code of Conduct](https://github.com/DrugBud-Suite/VoteM8/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "Thank you again for filling out this ticket.\nIf you are willing to collaborate on its implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83c\udf9b\u2002Environment Specifications\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "description": "Please select all operating systems on which you have encountered the bug.\n",
                     "label": "Operating System",
                     "multiple": true,
                     "options": [
                        "Linux",
                        "MacOS",
                        "Windows"
                     ]
                  },
                  "id": "os",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all Python versions in which you have encountered the bug.\n",
                     "label": "Python Version",
                     "multiple": true,
                     "options": [
                        "3.13",
                        "3.12",
                        "3.11",
                        "3.10"
                     ]
                  },
                  "id": "python_version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select the package manager used to download and install VoteM8.\n",
                     "label": "Package Manager",
                     "multiple": false,
                     "options": [
                        "pip"
                     ]
                  },
                  "id": "package_manager",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide the details of all installed packages and their exact versions in the environment where you have encountered the bug. Follow the instructions below based on the package manager you have selected:\n1. **`pip`**: Run `pip freeze > requirements.txt` in your terminal within the environment, and copy the contents of the generated `requirements.txt` file here.\n2. **`conda`**: Run `conda env export > environment.yml` in your terminal within the environment (or alternatively `conda env export -n {YOUR_ENVIRONMENT_NAME} > environment.yml`), and copy the contents of the generated `environment.yml` file here.",
                     "label": "Environment",
                     "render": "yaml"
                  },
                  "id": "environment",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udc1e\u2002Bug Report\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant VoteM8 versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select the relevant API entry point.",
                     "label": "API Entry Point",
                     "multiple": false,
                     "options": [
                        "votem8"
                     ]
                  },
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide the fully qualified name (minus the entry point) of the relevant API endpoint. For example, for a method at `votem8.module_name.ClassName.method_name` in the entry point `votem8`, you should write `module_name.ClassName.method_name`.",
                     "label": "Fully Qualified Name",
                     "placeholder": "module_name.ClassName.method_name"
                  },
                  "id": "endpoint",
                  "type": "input",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a [test case](https://docs.pytest.org/en/stable/getting-started.html) that demonstrates the bug:\n- At the top of the code block below, add the minimum number of imports required to reproduce the bug.\n- Replace the ellipsis (`...`) in the `test` function with a [Minimal Reproducible Example](https://stackoverflow.com/help/minimal-reproducible-example) (MRE). Use [`assert` statements](https://docs.pytest.org/en/stable/how-to/assert.html) to specify the expected results.",
                     "label": "Test Case",
                     "render": "python",
                     "value": "import votem8\n\n\ndef test():\n    ...\n"
                  },
                  "id": "test_case",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "description": "Report problems and errors in VoteM8's API.",
            "id": "pkg_api_fix",
            "name": "\u2002\ud83d\udda5\u2002API\u2002\ud83d\udc1e\u2002Bug Report",
            "post_process": {
               "assign_creator": {
                  "if_checkbox": {
                     "id": "collab",
                     "is_checked": true,
                     "number": 1
                  }
               },
               "body": "### Target\n\n- **Version(s)**: {{ input.version }}\n{%- if input.entrypoint %}\n- Entry Point: `{{ input.entrypoint }}`\n{%- endif %}\n{%- if input.endpoint %}\n- End Point: `{{ input.endpoint }}`\n{%- endif %}\n{%- if input.url %}\n- URL: {{ input.url }}\n{%- endif %}\n{%- if input.jsonpath %}\n- JSON Path: `{{ input.jsonpath }}`\n{%- endif %}\n\n### Summary\n\n{{ input.summary }}\n\n{%- if input.proposal %}\n### Proposal\n\n{{ input.proposal }}\n{%- endif %}\n\n{%- if input.test_case %}\n### Test Case\n\n{{ input.test_case }}\n{%- endif %}\n\n{%- if input.mre %}\n### Minimal Reproducible Example\n\n{{ input.mre }}\n{%- endif %}\n\n{%- if input.stderr %}\n### Output Log\n\n{{ input.stderr }}\n{%- endif %}\n\n{%- if input.environment %}\n### Test Environment\n\n- **OS**: {{ input.os }}\n- **Python Version**: {{ input.python_version }}\n- **Package Manager**: {{ input.package_manager }}\n<details><summary><b>Environment</b></summary>\n\n{{ input.environment }}\n\n</details>\n{%- endif %}\n"
            },
            "pre_process": {
               "if_any": [
                  [
                     "votem8"
                  ]
               ]
            },
            "subtype": "api",
            "type": "patch"
         },
         {
            "body": [
               {
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on VoteM8;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for reporting a <b>non-security-related bug in VoteM8's CLI</b>, i.e. an unexpected behavior or result in VoteM8's command-line interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/DrugBud-Suite/VoteM8/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/DrugBud-Suite/VoteM8/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Bug\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://DrugBud-Suite.github.io/VoteM8/contribute\">Bug Report Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">The issue you are experiencing is in fact a bug, and not a documented expected behavior.</p>\n- <p align=\"justify\">The bug is reproducible in the latest version of the release, and has not yet been reported.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following VoteM8's [Contribution Guidelines](https://DrugBud-Suite.github.io/VoteM8/contribute).<!-- ISSUE-ID: pkg_cli_fix -->",
                           "required": true
                        },
                        {
                           "label": "I agree to follow VoteM8's [Code of Conduct](https://github.com/DrugBud-Suite/VoteM8/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "Thank you again for filling out this ticket.\nIf you are willing to collaborate on its implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83c\udf9b\u2002Environment Specifications\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "description": "Please select all operating systems on which you have encountered the bug.\n",
                     "label": "Operating System",
                     "multiple": true,
                     "options": [
                        "Linux",
                        "MacOS",
                        "Windows"
                     ]
                  },
                  "id": "os",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all Python versions in which you have encountered the bug.\n",
                     "label": "Python Version",
                     "multiple": true,
                     "options": [
                        "3.13",
                        "3.12",
                        "3.11",
                        "3.10"
                     ]
                  },
                  "id": "python_version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select the package manager used to download and install VoteM8.\n",
                     "label": "Package Manager",
                     "multiple": false,
                     "options": [
                        "pip"
                     ]
                  },
                  "id": "package_manager",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide the details of all installed packages and their exact versions in the environment where you have encountered the bug. Follow the instructions below based on the package manager you have selected:\n1. **`pip`**: Run `pip freeze > requirements.txt` in your terminal within the environment, and copy the contents of the generated `requirements.txt` file here.\n2. **`conda`**: Run `conda env export > environment.yml` in your terminal within the environment (or alternatively `conda env export -n {YOUR_ENVIRONMENT_NAME} > environment.yml`), and copy the contents of the generated `environment.yml` file here.",
                     "label": "Environment",
                     "render": "yaml"
                  },
                  "id": "environment",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udc1e\u2002Bug Report\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant VoteM8 versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select the relevant CLI entry point.",
                     "label": "CLI Entry Point",
                     "multiple": false,
                     "options": [
                        "VoteM8"
                     ]
                  },
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a [test case](https://docs.pytest.org/en/stable/getting-started.html) that demonstrates the bug:\n- In the `test` function below, replace the value of `command` with the exact command that is causing the problem.\n- Replace the value of `expected_return_code` with the expected return code of the command.\n- Replace the value of `expected_output` with the expected output of the command. Use [`assert` statements](https://docs.pytest.org/en/stable/how-to/assert.html) to specify the expected results.\n- If the command has side effects, add further [`assert` statements](https://docs.pytest.org/en/stable/how-to/assert.html) to specify the expected results.",
                     "label": "Test Case",
                     "render": "python",
                     "value": "import subprocess \n\n\ndef test():\n    command = \"\"\n    expected_return_code = 0\n    expected_output = b\"\"\n\n    result = subprocess.run(command, stdout=subprocess.PIPE, shell=True)\n    assert result.returncode == expected_return_code\n    assert result.stdout == expected_output\n"
                  },
                  "id": "test_case",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "description": "Report problems and errors in VoteM8's CLI.",
            "id": "pkg_cli_fix",
            "name": "\u2002\u2328\ufe0f\u2002CLI\u2002\ud83d\udc1e\u2002Bug Report",
            "post_process": {
               "assign_creator": {
                  "if_checkbox": {
                     "id": "collab",
                     "is_checked": true,
                     "number": 1
                  }
               },
               "body": "### Target\n\n- **Version(s)**: {{ input.version }}\n{%- if input.entrypoint %}\n- Entry Point: `{{ input.entrypoint }}`\n{%- endif %}\n{%- if input.endpoint %}\n- End Point: `{{ input.endpoint }}`\n{%- endif %}\n{%- if input.url %}\n- URL: {{ input.url }}\n{%- endif %}\n{%- if input.jsonpath %}\n- JSON Path: `{{ input.jsonpath }}`\n{%- endif %}\n\n### Summary\n\n{{ input.summary }}\n\n{%- if input.proposal %}\n### Proposal\n\n{{ input.proposal }}\n{%- endif %}\n\n{%- if input.test_case %}\n### Test Case\n\n{{ input.test_case }}\n{%- endif %}\n\n{%- if input.mre %}\n### Minimal Reproducible Example\n\n{{ input.mre }}\n{%- endif %}\n\n{%- if input.stderr %}\n### Output Log\n\n{{ input.stderr }}\n{%- endif %}\n\n{%- if input.environment %}\n### Test Environment\n\n- **OS**: {{ input.os }}\n- **Python Version**: {{ input.python_version }}\n- **Package Manager**: {{ input.package_manager }}\n<details><summary><b>Environment</b></summary>\n\n{{ input.environment }}\n\n</details>\n{%- endif %}\n"
            },
            "pre_process": {
               "if_any": [
                  [
                     "VoteM8"
                  ]
               ]
            },
            "subtype": "cli",
            "type": "patch"
         },
         {
            "body": [
               {
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on VoteM8;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for reporting a <b>non-security-related bug in VoteM8's GUI</b>, i.e. an unexpected behavior or result in VoteM8's graphical user interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/DrugBud-Suite/VoteM8/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/DrugBud-Suite/VoteM8/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Bug\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://DrugBud-Suite.github.io/VoteM8/contribute\">Bug Report Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">The issue you are experiencing is in fact a bug, and not a documented expected behavior.</p>\n- <p align=\"justify\">The bug is reproducible in the latest version of the release, and has not yet been reported.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following VoteM8's [Contribution Guidelines](https://DrugBud-Suite.github.io/VoteM8/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow VoteM8's [Code of Conduct](https://github.com/DrugBud-Suite/VoteM8/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "Thank you again for filling out this ticket.\nIf you are willing to collaborate on its implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83c\udf9b\u2002Environment Specifications\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "description": "Please select all operating systems on which you have encountered the bug.\n",
                     "label": "Operating System",
                     "multiple": true,
                     "options": [
                        "Linux",
                        "MacOS",
                        "Windows"
                     ]
                  },
                  "id": "os",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all Python versions in which you have encountered the bug.\n",
                     "label": "Python Version",
                     "multiple": true,
                     "options": [
                        "3.13",
                        "3.12",
                        "3.11",
                        "3.10"
                     ]
                  },
                  "id": "python_version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select the package manager used to download and install VoteM8.\n",
                     "label": "Package Manager",
                     "multiple": false,
                     "options": [
                        "pip"
                     ]
                  },
                  "id": "package_manager",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide the details of all installed packages and their exact versions in the environment where you have encountered the bug. Follow the instructions below based on the package manager you have selected:\n1. **`pip`**: Run `pip freeze > requirements.txt` in your terminal within the environment, and copy the contents of the generated `requirements.txt` file here.\n2. **`conda`**: Run `conda env export > environment.yml` in your terminal within the environment (or alternatively `conda env export -n {YOUR_ENVIRONMENT_NAME} > environment.yml`), and copy the contents of the generated `environment.yml` file here.",
                     "label": "Environment",
                     "render": "yaml"
                  },
                  "id": "environment",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udc1e\u2002Bug Report\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant VoteM8 versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select the affected GUI entry point.",
                     "label": "GUI Entry Point",
                     "multiple": false,
                     "options": []
                  },
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide an exact step-by-step instruction to reproduce the problem. You can also include screenshots/recordings by dragging and dropping them here.",
                     "label": "Minimal Reproducible Example (MRE)",
                     "placeholder": "1. ...\n2. ...\n3. ...\n"
                  },
                  "id": "mre",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "If applicable, provide the full traceback of the error message.",
                     "label": "Error Message",
                     "render": "shell"
                  },
                  "id": "stderr",
                  "type": "textarea",
                  "validations": {
                     "required": false
                  }
               }
            ],
            "description": "Report problems and errors in VoteM8's GUI.",
            "id": "pkg_gui_fix",
            "name": "\u2002\ud83d\uddb1\u2002GUI\u2002\ud83d\udc1e\u2002Bug Report",
            "post_process": {
               "assign_creator": {
                  "if_checkbox": {
                     "id": "collab",
                     "is_checked": true,
                     "number": 1
                  }
               },
               "body": "### Target\n\n- **Version(s)**: {{ input.version }}\n{%- if input.entrypoint %}\n- Entry Point: `{{ input.entrypoint }}`\n{%- endif %}\n{%- if input.endpoint %}\n- End Point: `{{ input.endpoint }}`\n{%- endif %}\n{%- if input.url %}\n- URL: {{ input.url }}\n{%- endif %}\n{%- if input.jsonpath %}\n- JSON Path: `{{ input.jsonpath }}`\n{%- endif %}\n\n### Summary\n\n{{ input.summary }}\n\n{%- if input.proposal %}\n### Proposal\n\n{{ input.proposal }}\n{%- endif %}\n\n{%- if input.test_case %}\n### Test Case\n\n{{ input.test_case }}\n{%- endif %}\n\n{%- if input.mre %}\n### Minimal Reproducible Example\n\n{{ input.mre }}\n{%- endif %}\n\n{%- if input.stderr %}\n### Output Log\n\n{{ input.stderr }}\n{%- endif %}\n\n{%- if input.environment %}\n### Test Environment\n\n- **OS**: {{ input.os }}\n- **Python Version**: {{ input.python_version }}\n- **Package Manager**: {{ input.package_manager }}\n<details><summary><b>Environment</b></summary>\n\n{{ input.environment }}\n\n</details>\n{%- endif %}\n"
            },
            "pre_process": {
               "if_any": [
                  []
               ]
            },
            "subtype": "gui",
            "type": "patch"
         },
         {
            "body": [
               {
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on VoteM8;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for reporting a <b>non-security-related bug in VoteM8's setup process</b>, i.e. an unexpected behavior that occurs during the download, installation, or initialization of the application.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/DrugBud-Suite/VoteM8/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/DrugBud-Suite/VoteM8/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Bug\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://DrugBud-Suite.github.io/VoteM8/contribute\">Bug Report Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">The issue you are experiencing is in fact a bug, and not a documented expected behavior.</p>\n- <p align=\"justify\">The bug is reproducible in the latest version of the release, and has not yet been reported.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following VoteM8's [Contribution Guidelines](https://DrugBud-Suite.github.io/VoteM8/contribute).<!-- ISSUE-ID: pkg_setup_fix -->",
                           "required": true
                        },
                        {
                           "label": "I agree to follow VoteM8's [Code of Conduct](https://github.com/DrugBud-Suite/VoteM8/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "Thank you again for filling out this ticket.\nIf you are willing to collaborate on its implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83c\udf9b\u2002Environment Specifications\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "description": "Please select all operating systems on which you have encountered the bug.\n",
                     "label": "Operating System",
                     "multiple": true,
                     "options": [
                        "Linux",
                        "MacOS",
                        "Windows"
                     ]
                  },
                  "id": "os",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all Python versions in which you have encountered the bug.\n",
                     "label": "Python Version",
                     "multiple": true,
                     "options": [
                        "3.13",
                        "3.12",
                        "3.11",
                        "3.10"
                     ]
                  },
                  "id": "python_version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select the package manager used to download and install VoteM8.\n",
                     "label": "Package Manager",
                     "multiple": false,
                     "options": [
                        "pip"
                     ]
                  },
                  "id": "package_manager",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide the details of all installed packages and their exact versions in the environment where you have encountered the bug. Follow the instructions below based on the package manager you have selected:\n1. **`pip`**: Run `pip freeze > requirements.txt` in your terminal within the environment, and copy the contents of the generated `requirements.txt` file here.\n2. **`conda`**: Run `conda env export > environment.yml` in your terminal within the environment (or alternatively `conda env export -n {YOUR_ENVIRONMENT_NAME} > environment.yml`), and copy the contents of the generated `environment.yml` file here.",
                     "label": "Environment",
                     "render": "yaml"
                  },
                  "id": "environment",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udc1e\u2002Bug Report\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant VoteM8 versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide an exact step-by-step instruction to reproduce the problem. You can also include screenshots/recordings by dragging and dropping them here.",
                     "label": "Minimal Reproducible Example (MRE)",
                     "placeholder": "1. ...\n2. ...\n3. ...\n"
                  },
                  "id": "mre",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "If applicable, provide the full traceback of the error message.",
                     "label": "Error Message",
                     "render": "shell"
                  },
                  "id": "stderr",
                  "type": "textarea",
                  "validations": {
                     "required": false
                  }
               }
            ],
            "description": "Report problems in downloading, installation, or initialization of VoteM8.",
            "id": "pkg_setup_fix",
            "name": "\u2002\u2699\ufe0f\u2002Setup\u2002\ud83d\udc1e\u2002Bug Report",
            "post_process": {
               "assign_creator": {
                  "if_checkbox": {
                     "id": "collab",
                     "is_checked": true,
                     "number": 1
                  }
               },
               "body": "### Target\n\n- **Version(s)**: {{ input.version }}\n{%- if input.entrypoint %}\n- Entry Point: `{{ input.entrypoint }}`\n{%- endif %}\n{%- if input.endpoint %}\n- End Point: `{{ input.endpoint }}`\n{%- endif %}\n{%- if input.url %}\n- URL: {{ input.url }}\n{%- endif %}\n{%- if input.jsonpath %}\n- JSON Path: `{{ input.jsonpath }}`\n{%- endif %}\n\n### Summary\n\n{{ input.summary }}\n\n{%- if input.proposal %}\n### Proposal\n\n{{ input.proposal }}\n{%- endif %}\n\n{%- if input.test_case %}\n### Test Case\n\n{{ input.test_case }}\n{%- endif %}\n\n{%- if input.mre %}\n### Minimal Reproducible Example\n\n{{ input.mre }}\n{%- endif %}\n\n{%- if input.stderr %}\n### Output Log\n\n{{ input.stderr }}\n{%- endif %}\n\n{%- if input.environment %}\n### Test Environment\n\n- **OS**: {{ input.os }}\n- **Python Version**: {{ input.python_version }}\n- **Package Manager**: {{ input.package_manager }}\n<details><summary><b>Environment</b></summary>\n\n{{ input.environment }}\n\n</details>\n{%- endif %}\n"
            },
            "subtype": "setup",
            "type": "patch"
         },
         {
            "body": [
               {
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on VoteM8;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>backward-compatible improvement</b> or <b>new functionality</b> in VoteM8's API, i.e. a non-breaking change (that is not a bug fix) in VoteM8's Python application programming interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/DrugBud-Suite/VoteM8/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/DrugBud-Suite/VoteM8/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://DrugBud-Suite.github.io/VoteM8/contribute\">Feature Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-compatible change, and not a breaking change or a bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following VoteM8's [Contribution Guidelines](https://DrugBud-Suite.github.io/VoteM8/contribute).<!-- ISSUE-ID: pkg_api_feat -->",
                           "required": true
                        },
                        {
                           "label": "I agree to follow VoteM8's [Code of Conduct](https://github.com/DrugBud-Suite/VoteM8/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "Thank you again for filling out this ticket.\nIf you are willing to collaborate on its implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \u2728\u2002Feature Request\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant VoteM8 versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select the relevant API entry point.",
                     "label": "API Entry Point",
                     "multiple": false,
                     "options": [
                        "votem8"
                     ]
                  },
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide the fully qualified name (minus the entry point) of the relevant API endpoint. For example, for a method at `votem8.module_name.ClassName.method_name` in the entry point `votem8`, you should write `module_name.ClassName.method_name`.",
                     "label": "Fully Qualified Name",
                     "placeholder": "module_name.ClassName.method_name"
                  },
                  "id": "endpoint",
                  "type": "input",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "description": "Request backward-compatible improvements and new functionalities in VoteM8's API.",
            "id": "pkg_api_feat",
            "name": "\u2002\ud83d\udda5\u2002API\u2002\u2728\u2002Feature Request",
            "post_process": {
               "assign_creator": {
                  "if_checkbox": {
                     "id": "collab",
                     "is_checked": true,
                     "number": 1
                  }
               },
               "body": "### Target\n\n- **Version(s)**: {{ input.version }}\n{%- if input.entrypoint %}\n- Entry Point: `{{ input.entrypoint }}`\n{%- endif %}\n{%- if input.endpoint %}\n- End Point: `{{ input.endpoint }}`\n{%- endif %}\n{%- if input.url %}\n- URL: {{ input.url }}\n{%- endif %}\n{%- if input.jsonpath %}\n- JSON Path: `{{ input.jsonpath }}`\n{%- endif %}\n\n### Summary\n\n{{ input.summary }}\n\n{%- if input.proposal %}\n### Proposal\n\n{{ input.proposal }}\n{%- endif %}\n\n{%- if input.test_case %}\n### Test Case\n\n{{ input.test_case }}\n{%- endif %}\n\n{%- if input.mre %}\n### Minimal Reproducible Example\n\n{{ input.mre }}\n{%- endif %}\n\n{%- if input.stderr %}\n### Output Log\n\n{{ input.stderr }}\n{%- endif %}\n\n{%- if input.environment %}\n### Test Environment\n\n- **OS**: {{ input.os }}\n- **Python Version**: {{ input.python_version }}\n- **Package Manager**: {{ input.package_manager }}\n<details><summary><b>Environment</b></summary>\n\n{{ input.environment }}\n\n</details>\n{%- endif %}\n"
            },
            "pre_process": {
               "if_any": [
                  [
                     "votem8"
                  ]
               ]
            },
            "subtype": "api",
            "type": "minor"
         },
         {
            "body": [
               {
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on VoteM8;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>backward-compatible improvement</b> or <b>new functionality</b> in VoteM8's CLI, i.e. a non-breaking change (that is not a bug fix) in VoteM8's command-line interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/DrugBud-Suite/VoteM8/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/DrugBud-Suite/VoteM8/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://DrugBud-Suite.github.io/VoteM8/contribute\">Feature Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-compatible change, and not a breaking change or a bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following VoteM8's [Contribution Guidelines](https://DrugBud-Suite.github.io/VoteM8/contribute).<!-- ISSUE-ID: pkg_cli_feat -->",
                           "required": true
                        },
                        {
                           "label": "I agree to follow VoteM8's [Code of Conduct](https://github.com/DrugBud-Suite/VoteM8/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "Thank you again for filling out this ticket.\nIf you are willing to collaborate on its implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \u2728\u2002Feature Request\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant VoteM8 versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select the relevant CLI entry point.",
                     "label": "CLI Entry Point",
                     "multiple": false,
                     "options": [
                        "VoteM8"
                     ]
                  },
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "description": "Request backward-compatible improvements and new functionalities in VoteM8's CLI.",
            "id": "pkg_cli_feat",
            "name": "\u2002\u2328\ufe0f\u2002CLI\u2002\u2728\u2002Feature Request",
            "post_process": {
               "assign_creator": {
                  "if_checkbox": {
                     "id": "collab",
                     "is_checked": true,
                     "number": 1
                  }
               },
               "body": "### Target\n\n- **Version(s)**: {{ input.version }}\n{%- if input.entrypoint %}\n- Entry Point: `{{ input.entrypoint }}`\n{%- endif %}\n{%- if input.endpoint %}\n- End Point: `{{ input.endpoint }}`\n{%- endif %}\n{%- if input.url %}\n- URL: {{ input.url }}\n{%- endif %}\n{%- if input.jsonpath %}\n- JSON Path: `{{ input.jsonpath }}`\n{%- endif %}\n\n### Summary\n\n{{ input.summary }}\n\n{%- if input.proposal %}\n### Proposal\n\n{{ input.proposal }}\n{%- endif %}\n\n{%- if input.test_case %}\n### Test Case\n\n{{ input.test_case }}\n{%- endif %}\n\n{%- if input.mre %}\n### Minimal Reproducible Example\n\n{{ input.mre }}\n{%- endif %}\n\n{%- if input.stderr %}\n### Output Log\n\n{{ input.stderr }}\n{%- endif %}\n\n{%- if input.environment %}\n### Test Environment\n\n- **OS**: {{ input.os }}\n- **Python Version**: {{ input.python_version }}\n- **Package Manager**: {{ input.package_manager }}\n<details><summary><b>Environment</b></summary>\n\n{{ input.environment }}\n\n</details>\n{%- endif %}\n"
            },
            "pre_process": {
               "if_any": [
                  [
                     "VoteM8"
                  ]
               ]
            },
            "subtype": "cli",
            "type": "minor"
         },
         {
            "body": [
               {
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on VoteM8;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>backward-compatible improvement</b> or <b>new functionality</b> in VoteM8's GUI, i.e. a non-breaking change (that is not a bug fix) in VoteM8's graphical user interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/DrugBud-Suite/VoteM8/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/DrugBud-Suite/VoteM8/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://DrugBud-Suite.github.io/VoteM8/contribute\">Feature Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-compatible change, and not a breaking change or a bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following VoteM8's [Contribution Guidelines](https://DrugBud-Suite.github.io/VoteM8/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow VoteM8's [Code of Conduct](https://github.com/DrugBud-Suite/VoteM8/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "Thank you again for filling out this ticket.\nIf you are willing to collaborate on its implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \u2728\u2002Feature Request\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant VoteM8 versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select the affected GUI entry point.",
                     "label": "GUI Entry Point",
                     "multiple": false,
                     "options": []
                  },
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "description": "Request backward-compatible improvements and new functionalities in VoteM8's GUI.",
            "id": "pkg_gui_feat",
            "name": "\u2002\ud83d\uddb1\u2002GUI\u2002\u2728\u2002Feature Request",
            "post_process": {
               "assign_creator": {
                  "if_checkbox": {
                     "id": "collab",
                     "is_checked": true,
                     "number": 1
                  }
               },
               "body": "### Target\n\n- **Version(s)**: {{ input.version }}\n{%- if input.entrypoint %}\n- Entry Point: `{{ input.entrypoint }}`\n{%- endif %}\n{%- if input.endpoint %}\n- End Point: `{{ input.endpoint }}`\n{%- endif %}\n{%- if input.url %}\n- URL: {{ input.url }}\n{%- endif %}\n{%- if input.jsonpath %}\n- JSON Path: `{{ input.jsonpath }}`\n{%- endif %}\n\n### Summary\n\n{{ input.summary }}\n\n{%- if input.proposal %}\n### Proposal\n\n{{ input.proposal }}\n{%- endif %}\n\n{%- if input.test_case %}\n### Test Case\n\n{{ input.test_case }}\n{%- endif %}\n\n{%- if input.mre %}\n### Minimal Reproducible Example\n\n{{ input.mre }}\n{%- endif %}\n\n{%- if input.stderr %}\n### Output Log\n\n{{ input.stderr }}\n{%- endif %}\n\n{%- if input.environment %}\n### Test Environment\n\n- **OS**: {{ input.os }}\n- **Python Version**: {{ input.python_version }}\n- **Package Manager**: {{ input.package_manager }}\n<details><summary><b>Environment</b></summary>\n\n{{ input.environment }}\n\n</details>\n{%- endif %}\n"
            },
            "pre_process": {
               "if_any": [
                  []
               ]
            },
            "subtype": "gui",
            "type": "minor"
         },
         {
            "body": [
               {
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on VoteM8;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>backward-incompatible change</b> in VoteM8's API, i.e. a breaking change in behaviour or functionalities of VoteM8's Python application programming interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/DrugBud-Suite/VoteM8/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/DrugBud-Suite/VoteM8/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://DrugBud-Suite.github.io/VoteM8/contribute\">Change Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-incompatible change, and not a new feature, improvement, or bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following VoteM8's [Contribution Guidelines](https://DrugBud-Suite.github.io/VoteM8/contribute).<!-- ISSUE-ID: pkg_api_change -->",
                           "required": true
                        },
                        {
                           "label": "I agree to follow VoteM8's [Code of Conduct](https://github.com/DrugBud-Suite/VoteM8/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "Thank you again for filling out this ticket.\nIf you are willing to collaborate on its implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udca5\u2002Change Request\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant VoteM8 versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select the relevant API entry point.",
                     "label": "API Entry Point",
                     "multiple": false,
                     "options": [
                        "votem8"
                     ]
                  },
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide the fully qualified name (minus the entry point) of the relevant API endpoint. For example, for a method at `votem8.module_name.ClassName.method_name` in the entry point `votem8`, you should write `module_name.ClassName.method_name`.",
                     "label": "Fully Qualified Name",
                     "placeholder": "module_name.ClassName.method_name"
                  },
                  "id": "endpoint",
                  "type": "input",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "description": "Request backward-incompatible changes to VoteM8's API.",
            "id": "pkg_api_change",
            "name": "\u2002\ud83d\udda5\u2002API\u2002\ud83d\udca5\u2002Change Request",
            "post_process": {
               "assign_creator": {
                  "if_checkbox": {
                     "id": "collab",
                     "is_checked": true,
                     "number": 1
                  }
               },
               "body": "### Target\n\n- **Version(s)**: {{ input.version }}\n{%- if input.entrypoint %}\n- Entry Point: `{{ input.entrypoint }}`\n{%- endif %}\n{%- if input.endpoint %}\n- End Point: `{{ input.endpoint }}`\n{%- endif %}\n{%- if input.url %}\n- URL: {{ input.url }}\n{%- endif %}\n{%- if input.jsonpath %}\n- JSON Path: `{{ input.jsonpath }}`\n{%- endif %}\n\n### Summary\n\n{{ input.summary }}\n\n{%- if input.proposal %}\n### Proposal\n\n{{ input.proposal }}\n{%- endif %}\n\n{%- if input.test_case %}\n### Test Case\n\n{{ input.test_case }}\n{%- endif %}\n\n{%- if input.mre %}\n### Minimal Reproducible Example\n\n{{ input.mre }}\n{%- endif %}\n\n{%- if input.stderr %}\n### Output Log\n\n{{ input.stderr }}\n{%- endif %}\n\n{%- if input.environment %}\n### Test Environment\n\n- **OS**: {{ input.os }}\n- **Python Version**: {{ input.python_version }}\n- **Package Manager**: {{ input.package_manager }}\n<details><summary><b>Environment</b></summary>\n\n{{ input.environment }}\n\n</details>\n{%- endif %}\n"
            },
            "pre_process": {
               "if_any": [
                  [
                     "votem8"
                  ]
               ]
            },
            "subtype": "api",
            "type": "major"
         },
         {
            "body": [
               {
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on VoteM8;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>backward-incompatible change</b> in VoteM8's CLI, i.e. a breaking change in behaviour or functionalities of VoteM8's command-line interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/DrugBud-Suite/VoteM8/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/DrugBud-Suite/VoteM8/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://DrugBud-Suite.github.io/VoteM8/contribute\">Change Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-incompatible change, and not a new feature, improvement, or bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following VoteM8's [Contribution Guidelines](https://DrugBud-Suite.github.io/VoteM8/contribute).<!-- ISSUE-ID: pkg_cli_change -->",
                           "required": true
                        },
                        {
                           "label": "I agree to follow VoteM8's [Code of Conduct](https://github.com/DrugBud-Suite/VoteM8/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "Thank you again for filling out this ticket.\nIf you are willing to collaborate on its implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udca5\u2002Change Request\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant VoteM8 versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select the relevant CLI entry point.",
                     "label": "CLI Entry Point",
                     "multiple": false,
                     "options": [
                        "VoteM8"
                     ]
                  },
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "description": "Request backward-incompatible changes to VoteM8's CLI.",
            "id": "pkg_cli_change",
            "name": "\u2002\u2328\ufe0f\u2002CLI\u2002\ud83d\udca5\u2002Change Request",
            "post_process": {
               "assign_creator": {
                  "if_checkbox": {
                     "id": "collab",
                     "is_checked": true,
                     "number": 1
                  }
               },
               "body": "### Target\n\n- **Version(s)**: {{ input.version }}\n{%- if input.entrypoint %}\n- Entry Point: `{{ input.entrypoint }}`\n{%- endif %}\n{%- if input.endpoint %}\n- End Point: `{{ input.endpoint }}`\n{%- endif %}\n{%- if input.url %}\n- URL: {{ input.url }}\n{%- endif %}\n{%- if input.jsonpath %}\n- JSON Path: `{{ input.jsonpath }}`\n{%- endif %}\n\n### Summary\n\n{{ input.summary }}\n\n{%- if input.proposal %}\n### Proposal\n\n{{ input.proposal }}\n{%- endif %}\n\n{%- if input.test_case %}\n### Test Case\n\n{{ input.test_case }}\n{%- endif %}\n\n{%- if input.mre %}\n### Minimal Reproducible Example\n\n{{ input.mre }}\n{%- endif %}\n\n{%- if input.stderr %}\n### Output Log\n\n{{ input.stderr }}\n{%- endif %}\n\n{%- if input.environment %}\n### Test Environment\n\n- **OS**: {{ input.os }}\n- **Python Version**: {{ input.python_version }}\n- **Package Manager**: {{ input.package_manager }}\n<details><summary><b>Environment</b></summary>\n\n{{ input.environment }}\n\n</details>\n{%- endif %}\n"
            },
            "pre_process": {
               "if_any": [
                  [
                     "VoteM8"
                  ]
               ]
            },
            "subtype": "cli",
            "type": "major"
         },
         {
            "body": [
               {
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on VoteM8;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>backward-incompatible change</b> in VoteM8's GUI, i.e. a breaking change in behaviour or functionalities of VoteM8's graphical user interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/DrugBud-Suite/VoteM8/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/DrugBud-Suite/VoteM8/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://DrugBud-Suite.github.io/VoteM8/contribute\">Change Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-incompatible change, and not a new feature, improvement, or bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following VoteM8's [Contribution Guidelines](https://DrugBud-Suite.github.io/VoteM8/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow VoteM8's [Code of Conduct](https://github.com/DrugBud-Suite/VoteM8/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "Thank you again for filling out this ticket.\nIf you are willing to collaborate on its implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udca5\u2002Change Request\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant VoteM8 versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select the affected GUI entry point.",
                     "label": "GUI Entry Point",
                     "multiple": false,
                     "options": []
                  },
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "description": "Request backward-incompatible changes to VoteM8's GUI.",
            "id": "pkg_gui_change",
            "name": "\u2002\ud83d\uddb1\u2002GUI\u2002\ud83d\udca5\u2002Change Request",
            "post_process": {
               "assign_creator": {
                  "if_checkbox": {
                     "id": "collab",
                     "is_checked": true,
                     "number": 1
                  }
               },
               "body": "### Target\n\n- **Version(s)**: {{ input.version }}\n{%- if input.entrypoint %}\n- Entry Point: `{{ input.entrypoint }}`\n{%- endif %}\n{%- if input.endpoint %}\n- End Point: `{{ input.endpoint }}`\n{%- endif %}\n{%- if input.url %}\n- URL: {{ input.url }}\n{%- endif %}\n{%- if input.jsonpath %}\n- JSON Path: `{{ input.jsonpath }}`\n{%- endif %}\n\n### Summary\n\n{{ input.summary }}\n\n{%- if input.proposal %}\n### Proposal\n\n{{ input.proposal }}\n{%- endif %}\n\n{%- if input.test_case %}\n### Test Case\n\n{{ input.test_case }}\n{%- endif %}\n\n{%- if input.mre %}\n### Minimal Reproducible Example\n\n{{ input.mre }}\n{%- endif %}\n\n{%- if input.stderr %}\n### Output Log\n\n{{ input.stderr }}\n{%- endif %}\n\n{%- if input.environment %}\n### Test Environment\n\n- **OS**: {{ input.os }}\n- **Python Version**: {{ input.python_version }}\n- **Package Manager**: {{ input.package_manager }}\n<details><summary><b>Environment</b></summary>\n\n{{ input.environment }}\n\n</details>\n{%- endif %}\n"
            },
            "pre_process": {
               "if_any": [
                  []
               ]
            },
            "subtype": "gui",
            "type": "major"
         },
         {
            "body": [
               {
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on VoteM8;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for reporting a <b>non-security-related bug in VoteM8's website and documentation materials</b>, e.g. misspellings and other mechanical errors, broken links and images, layout issues, etc.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/DrugBud-Suite/VoteM8/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/DrugBud-Suite/VoteM8/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Bug\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://DrugBud-Suite.github.io/VoteM8/contribute\">Bug Report Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">The issue you are experiencing is in fact a bug, and not a documented expected behavior.</p>\n- <p align=\"justify\">The bug is reproducible in the latest version of the release, and has not yet been reported.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following VoteM8's [Contribution Guidelines](https://DrugBud-Suite.github.io/VoteM8/contribute).<!-- ISSUE-ID: doc_fix -->",
                           "required": true
                        },
                        {
                           "label": "I agree to follow VoteM8's [Code of Conduct](https://github.com/DrugBud-Suite/VoteM8/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "Thank you again for filling out this ticket.\nIf you are willing to collaborate on its implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udc1e\u2002Bug Report\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant VoteM8 versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide the URL of the relevant web page or repository file.",
                     "label": "URL",
                     "placeholder": "https://DrugBud-Suite.github.io/VoteM8"
                  },
                  "id": "url",
                  "type": "input",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide an exact step-by-step instruction to reproduce the problem. You can also include screenshots/recordings by dragging and dropping them here.",
                     "label": "Minimal Reproducible Example (MRE)",
                     "placeholder": "1. ...\n2. ...\n3. ...\n"
                  },
                  "id": "mre",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "description": "Report problems and errors  in VoteM8's website and documentation materials.",
            "id": "doc_fix",
            "name": "\u2002\ud83d\udcda\u2002Docs\u2002\ud83d\udc1e\u2002Bug Report",
            "post_process": {
               "assign_creator": {
                  "if_checkbox": {
                     "id": "collab",
                     "is_checked": true,
                     "number": 1
                  }
               },
               "body": "### Target\n\n- **Version(s)**: {{ input.version }}\n{%- if input.entrypoint %}\n- Entry Point: `{{ input.entrypoint }}`\n{%- endif %}\n{%- if input.endpoint %}\n- End Point: `{{ input.endpoint }}`\n{%- endif %}\n{%- if input.url %}\n- URL: {{ input.url }}\n{%- endif %}\n{%- if input.jsonpath %}\n- JSON Path: `{{ input.jsonpath }}`\n{%- endif %}\n\n### Summary\n\n{{ input.summary }}\n\n{%- if input.proposal %}\n### Proposal\n\n{{ input.proposal }}\n{%- endif %}\n\n{%- if input.test_case %}\n### Test Case\n\n{{ input.test_case }}\n{%- endif %}\n\n{%- if input.mre %}\n### Minimal Reproducible Example\n\n{{ input.mre }}\n{%- endif %}\n\n{%- if input.stderr %}\n### Output Log\n\n{{ input.stderr }}\n{%- endif %}\n\n{%- if input.environment %}\n### Test Environment\n\n- **OS**: {{ input.os }}\n- **Python Version**: {{ input.python_version }}\n- **Package Manager**: {{ input.package_manager }}\n<details><summary><b>Environment</b></summary>\n\n{{ input.environment }}\n\n</details>\n{%- endif %}\n"
            },
            "subtype": "doc_fix",
            "type": "post"
         },
         {
            "body": [
               {
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on VoteM8;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>backward-compatible improvement</b> or <b>new content</b> in VoteM8's website and documentation materials</b>, i.e. a change that is not a bug fix and does not break existing references or functionalities.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/DrugBud-Suite/VoteM8/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/DrugBud-Suite/VoteM8/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://DrugBud-Suite.github.io/VoteM8/contribute\">Feature Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-compatible change, and not a breaking change or a bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following VoteM8's [Contribution Guidelines](https://DrugBud-Suite.github.io/VoteM8/contribute).<!-- ISSUE-ID: doc_feat -->",
                           "required": true
                        },
                        {
                           "label": "I agree to follow VoteM8's [Code of Conduct](https://github.com/DrugBud-Suite/VoteM8/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "Thank you again for filling out this ticket.\nIf you are willing to collaborate on its implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \u2728\u2002Feature Request\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant VoteM8 versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide the URL of the relevant web page or repository file.",
                     "label": "URL",
                     "placeholder": "https://DrugBud-Suite.github.io/VoteM8"
                  },
                  "id": "url",
                  "type": "input",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "description": "Request backward-compatible improvements and new content in VoteM8's website and documentation materials.",
            "id": "doc_feat",
            "name": "\u2002\ud83d\udcda\u2002Docs\u2002\u2728\u2002Feature Request",
            "post_process": {
               "assign_creator": {
                  "if_checkbox": {
                     "id": "collab",
                     "is_checked": true,
                     "number": 1
                  }
               },
               "body": "### Target\n\n- **Version(s)**: {{ input.version }}\n{%- if input.entrypoint %}\n- Entry Point: `{{ input.entrypoint }}`\n{%- endif %}\n{%- if input.endpoint %}\n- End Point: `{{ input.endpoint }}`\n{%- endif %}\n{%- if input.url %}\n- URL: {{ input.url }}\n{%- endif %}\n{%- if input.jsonpath %}\n- JSON Path: `{{ input.jsonpath }}`\n{%- endif %}\n\n### Summary\n\n{{ input.summary }}\n\n{%- if input.proposal %}\n### Proposal\n\n{{ input.proposal }}\n{%- endif %}\n\n{%- if input.test_case %}\n### Test Case\n\n{{ input.test_case }}\n{%- endif %}\n\n{%- if input.mre %}\n### Minimal Reproducible Example\n\n{{ input.mre }}\n{%- endif %}\n\n{%- if input.stderr %}\n### Output Log\n\n{{ input.stderr }}\n{%- endif %}\n\n{%- if input.environment %}\n### Test Environment\n\n- **OS**: {{ input.os }}\n- **Python Version**: {{ input.python_version }}\n- **Package Manager**: {{ input.package_manager }}\n<details><summary><b>Environment</b></summary>\n\n{{ input.environment }}\n\n</details>\n{%- endif %}\n"
            },
            "subtype": "doc_feat",
            "type": "post"
         },
         {
            "body": [
               {
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on VoteM8;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>backward-incompatible change</b> in VoteM8's website and documentation materials</b>, i.e. a change that breaks existing references or functionalities.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/DrugBud-Suite/VoteM8/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/DrugBud-Suite/VoteM8/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://DrugBud-Suite.github.io/VoteM8/contribute\">Change Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-incompatible change, and not a new feature, improvement, or bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following VoteM8's [Contribution Guidelines](https://DrugBud-Suite.github.io/VoteM8/contribute).<!-- ISSUE-ID: doc_change -->",
                           "required": true
                        },
                        {
                           "label": "I agree to follow VoteM8's [Code of Conduct](https://github.com/DrugBud-Suite/VoteM8/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "Thank you again for filling out this ticket.\nIf you are willing to collaborate on its implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udca5\u2002Change Request\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant VoteM8 versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide the URL of the relevant web page or repository file.",
                     "label": "URL",
                     "placeholder": "https://DrugBud-Suite.github.io/VoteM8"
                  },
                  "id": "url",
                  "type": "input",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "description": "Request backward-incompatible changes to VoteM8's website and documentation materials.",
            "id": "doc_change",
            "name": "\u2002\ud83d\udcda\u2002Docs\u2002\ud83d\udca5\u2002Change Request",
            "post_process": {
               "assign_creator": {
                  "if_checkbox": {
                     "id": "collab",
                     "is_checked": true,
                     "number": 1
                  }
               },
               "body": "### Target\n\n- **Version(s)**: {{ input.version }}\n{%- if input.entrypoint %}\n- Entry Point: `{{ input.entrypoint }}`\n{%- endif %}\n{%- if input.endpoint %}\n- End Point: `{{ input.endpoint }}`\n{%- endif %}\n{%- if input.url %}\n- URL: {{ input.url }}\n{%- endif %}\n{%- if input.jsonpath %}\n- JSON Path: `{{ input.jsonpath }}`\n{%- endif %}\n\n### Summary\n\n{{ input.summary }}\n\n{%- if input.proposal %}\n### Proposal\n\n{{ input.proposal }}\n{%- endif %}\n\n{%- if input.test_case %}\n### Test Case\n\n{{ input.test_case }}\n{%- endif %}\n\n{%- if input.mre %}\n### Minimal Reproducible Example\n\n{{ input.mre }}\n{%- endif %}\n\n{%- if input.stderr %}\n### Output Log\n\n{{ input.stderr }}\n{%- endif %}\n\n{%- if input.environment %}\n### Test Environment\n\n- **OS**: {{ input.os }}\n- **Python Version**: {{ input.python_version }}\n- **Package Manager**: {{ input.package_manager }}\n<details><summary><b>Environment</b></summary>\n\n{{ input.environment }}\n\n</details>\n{%- endif %}\n"
            },
            "subtype": "doc_change",
            "type": "post"
         },
         {
            "body": [
               {
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on VoteM8;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for reporting a <b>non-security-related bug in VoteM8-TestSuite's API</b>, i.e. an unexpected behavior or result in VoteM8-TestSuite's Python application programming interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/DrugBud-Suite/VoteM8/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/DrugBud-Suite/VoteM8/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Bug\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://DrugBud-Suite.github.io/VoteM8/contribute\">Bug Report Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">The issue you are experiencing is in fact a bug, and not a documented expected behavior.</p>\n- <p align=\"justify\">The bug is reproducible in the latest version of the release, and has not yet been reported.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following VoteM8's [Contribution Guidelines](https://DrugBud-Suite.github.io/VoteM8/contribute).<!-- ISSUE-ID: test_api_fix -->",
                           "required": true
                        },
                        {
                           "label": "I agree to follow VoteM8's [Code of Conduct](https://github.com/DrugBud-Suite/VoteM8/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "Thank you again for filling out this ticket.\nIf you are willing to collaborate on its implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83c\udf9b\u2002Environment Specifications\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "description": "Please select all operating systems on which you have encountered the bug.\n",
                     "label": "Operating System",
                     "multiple": true,
                     "options": [
                        "Linux",
                        "MacOS",
                        "Windows"
                     ]
                  },
                  "id": "os",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all Python versions in which you have encountered the bug.\n",
                     "label": "Python Version",
                     "multiple": true,
                     "options": [
                        "3.13",
                        "3.12",
                        "3.11",
                        "3.10"
                     ]
                  },
                  "id": "python_version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select the package manager used to download and install VoteM8.\n",
                     "label": "Package Manager",
                     "multiple": false,
                     "options": [
                        "pip"
                     ]
                  },
                  "id": "package_manager",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide the details of all installed packages and their exact versions in the environment where you have encountered the bug. Follow the instructions below based on the package manager you have selected:\n1. **`pip`**: Run `pip freeze > requirements.txt` in your terminal within the environment, and copy the contents of the generated `requirements.txt` file here.\n2. **`conda`**: Run `conda env export > environment.yml` in your terminal within the environment (or alternatively `conda env export -n {YOUR_ENVIRONMENT_NAME} > environment.yml`), and copy the contents of the generated `environment.yml` file here.",
                     "label": "Environment",
                     "render": "yaml"
                  },
                  "id": "environment",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udc1e\u2002Bug Report\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant VoteM8 versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select the relevant API entry point.",
                     "label": "API Entry Point",
                     "multiple": false,
                     "options": [
                        "votem8_testsuite"
                     ]
                  },
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide the fully qualified name (minus the entry point) of the relevant API endpoint. For example, for a method at `votem8_testsuite.module_name.ClassName.method_name` in the entry point `votem8_testsuite`, you should write `module_name.ClassName.method_name`.",
                     "label": "Fully Qualified Name",
                     "placeholder": "module_name.ClassName.method_name"
                  },
                  "id": "endpoint",
                  "type": "input",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a [test case](https://docs.pytest.org/en/stable/getting-started.html) that demonstrates the bug:\n- At the top of the code block below, add the minimum number of imports required to reproduce the bug.\n- Replace the ellipsis (`...`) in the `test` function with a [Minimal Reproducible Example](https://stackoverflow.com/help/minimal-reproducible-example) (MRE). Use [`assert` statements](https://docs.pytest.org/en/stable/how-to/assert.html) to specify the expected results.",
                     "label": "Test Case",
                     "render": "python",
                     "value": "import votem8_testsuite\n\n\ndef test():\n    ...\n"
                  },
                  "id": "test_case",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "description": "Report problems and errors in VoteM8-TestSuite's API.",
            "id": "test_api_fix",
            "name": "\u2002\ud83e\uddea\u2002Test\u2002\ud83d\udda5\u2002API\u2002\ud83d\udc1e\u2002Bug Report",
            "post_process": {
               "assign_creator": {
                  "if_checkbox": {
                     "id": "collab",
                     "is_checked": true,
                     "number": 1
                  }
               },
               "body": "### Target\n\n- **Version(s)**: {{ input.version }}\n{%- if input.entrypoint %}\n- Entry Point: `{{ input.entrypoint }}`\n{%- endif %}\n{%- if input.endpoint %}\n- End Point: `{{ input.endpoint }}`\n{%- endif %}\n{%- if input.url %}\n- URL: {{ input.url }}\n{%- endif %}\n{%- if input.jsonpath %}\n- JSON Path: `{{ input.jsonpath }}`\n{%- endif %}\n\n### Summary\n\n{{ input.summary }}\n\n{%- if input.proposal %}\n### Proposal\n\n{{ input.proposal }}\n{%- endif %}\n\n{%- if input.test_case %}\n### Test Case\n\n{{ input.test_case }}\n{%- endif %}\n\n{%- if input.mre %}\n### Minimal Reproducible Example\n\n{{ input.mre }}\n{%- endif %}\n\n{%- if input.stderr %}\n### Output Log\n\n{{ input.stderr }}\n{%- endif %}\n\n{%- if input.environment %}\n### Test Environment\n\n- **OS**: {{ input.os }}\n- **Python Version**: {{ input.python_version }}\n- **Package Manager**: {{ input.package_manager }}\n<details><summary><b>Environment</b></summary>\n\n{{ input.environment }}\n\n</details>\n{%- endif %}\n"
            },
            "pre_process": {
               "if_any": [
                  [
                     "votem8_testsuite"
                  ]
               ]
            },
            "subtype": "test_api_fix",
            "type": "post"
         },
         {
            "body": [
               {
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on VoteM8;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for reporting a <b>non-security-related bug in VoteM8-TestSuite's CLI</b>, i.e. an unexpected behavior or result in VoteM8-TestSuite's command-line interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/DrugBud-Suite/VoteM8/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/DrugBud-Suite/VoteM8/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Bug\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://DrugBud-Suite.github.io/VoteM8/contribute\">Bug Report Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">The issue you are experiencing is in fact a bug, and not a documented expected behavior.</p>\n- <p align=\"justify\">The bug is reproducible in the latest version of the release, and has not yet been reported.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following VoteM8's [Contribution Guidelines](https://DrugBud-Suite.github.io/VoteM8/contribute).<!-- ISSUE-ID: test_cli_fix -->",
                           "required": true
                        },
                        {
                           "label": "I agree to follow VoteM8's [Code of Conduct](https://github.com/DrugBud-Suite/VoteM8/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "Thank you again for filling out this ticket.\nIf you are willing to collaborate on its implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83c\udf9b\u2002Environment Specifications\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "description": "Please select all operating systems on which you have encountered the bug.\n",
                     "label": "Operating System",
                     "multiple": true,
                     "options": [
                        "Linux",
                        "MacOS",
                        "Windows"
                     ]
                  },
                  "id": "os",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all Python versions in which you have encountered the bug.\n",
                     "label": "Python Version",
                     "multiple": true,
                     "options": [
                        "3.13",
                        "3.12",
                        "3.11",
                        "3.10"
                     ]
                  },
                  "id": "python_version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select the package manager used to download and install VoteM8.\n",
                     "label": "Package Manager",
                     "multiple": false,
                     "options": [
                        "pip"
                     ]
                  },
                  "id": "package_manager",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide the details of all installed packages and their exact versions in the environment where you have encountered the bug. Follow the instructions below based on the package manager you have selected:\n1. **`pip`**: Run `pip freeze > requirements.txt` in your terminal within the environment, and copy the contents of the generated `requirements.txt` file here.\n2. **`conda`**: Run `conda env export > environment.yml` in your terminal within the environment (or alternatively `conda env export -n {YOUR_ENVIRONMENT_NAME} > environment.yml`), and copy the contents of the generated `environment.yml` file here.",
                     "label": "Environment",
                     "render": "yaml"
                  },
                  "id": "environment",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udc1e\u2002Bug Report\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant VoteM8 versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select the relevant CLI entry point.",
                     "label": "CLI Entry Point",
                     "multiple": false,
                     "options": [
                        "VoteM8-TestSuite"
                     ]
                  },
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a [test case](https://docs.pytest.org/en/stable/getting-started.html) that demonstrates the bug:\n- In the `test` function below, replace the value of `command` with the exact command that is causing the problem.\n- Replace the value of `expected_return_code` with the expected return code of the command.\n- Replace the value of `expected_output` with the expected output of the command. Use [`assert` statements](https://docs.pytest.org/en/stable/how-to/assert.html) to specify the expected results.\n- If the command has side effects, add further [`assert` statements](https://docs.pytest.org/en/stable/how-to/assert.html) to specify the expected results.",
                     "label": "Test Case",
                     "render": "python",
                     "value": "import subprocess \n\n\ndef test():\n    command = \"\"\n    expected_return_code = 0\n    expected_output = b\"\"\n\n    result = subprocess.run(command, stdout=subprocess.PIPE, shell=True)\n    assert result.returncode == expected_return_code\n    assert result.stdout == expected_output\n"
                  },
                  "id": "test_case",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "description": "Report problems and errors in VoteM8-TestSuite's CLI.",
            "id": "test_cli_fix",
            "name": "\u2002\ud83e\uddea\u2002Test\u2002\u2328\ufe0f\u2002CLI\u2002\ud83d\udc1e\u2002Bug Report",
            "post_process": {
               "assign_creator": {
                  "if_checkbox": {
                     "id": "collab",
                     "is_checked": true,
                     "number": 1
                  }
               },
               "body": "### Target\n\n- **Version(s)**: {{ input.version }}\n{%- if input.entrypoint %}\n- Entry Point: `{{ input.entrypoint }}`\n{%- endif %}\n{%- if input.endpoint %}\n- End Point: `{{ input.endpoint }}`\n{%- endif %}\n{%- if input.url %}\n- URL: {{ input.url }}\n{%- endif %}\n{%- if input.jsonpath %}\n- JSON Path: `{{ input.jsonpath }}`\n{%- endif %}\n\n### Summary\n\n{{ input.summary }}\n\n{%- if input.proposal %}\n### Proposal\n\n{{ input.proposal }}\n{%- endif %}\n\n{%- if input.test_case %}\n### Test Case\n\n{{ input.test_case }}\n{%- endif %}\n\n{%- if input.mre %}\n### Minimal Reproducible Example\n\n{{ input.mre }}\n{%- endif %}\n\n{%- if input.stderr %}\n### Output Log\n\n{{ input.stderr }}\n{%- endif %}\n\n{%- if input.environment %}\n### Test Environment\n\n- **OS**: {{ input.os }}\n- **Python Version**: {{ input.python_version }}\n- **Package Manager**: {{ input.package_manager }}\n<details><summary><b>Environment</b></summary>\n\n{{ input.environment }}\n\n</details>\n{%- endif %}\n"
            },
            "pre_process": {
               "if_any": [
                  [
                     "VoteM8-TestSuite"
                  ]
               ]
            },
            "subtype": "test_cli_fix",
            "type": "post"
         },
         {
            "body": [
               {
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on VoteM8;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for reporting a <b>non-security-related bug in VoteM8-TestSuite's GUI</b>, i.e. an unexpected behavior or result in VoteM8-TestSuite's graphical user interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/DrugBud-Suite/VoteM8/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/DrugBud-Suite/VoteM8/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Bug\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://DrugBud-Suite.github.io/VoteM8/contribute\">Bug Report Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">The issue you are experiencing is in fact a bug, and not a documented expected behavior.</p>\n- <p align=\"justify\">The bug is reproducible in the latest version of the release, and has not yet been reported.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following VoteM8's [Contribution Guidelines](https://DrugBud-Suite.github.io/VoteM8/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow VoteM8's [Code of Conduct](https://github.com/DrugBud-Suite/VoteM8/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "Thank you again for filling out this ticket.\nIf you are willing to collaborate on its implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83c\udf9b\u2002Environment Specifications\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "description": "Please select all operating systems on which you have encountered the bug.\n",
                     "label": "Operating System",
                     "multiple": true,
                     "options": [
                        "Linux",
                        "MacOS",
                        "Windows"
                     ]
                  },
                  "id": "os",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all Python versions in which you have encountered the bug.\n",
                     "label": "Python Version",
                     "multiple": true,
                     "options": [
                        "3.13",
                        "3.12",
                        "3.11",
                        "3.10"
                     ]
                  },
                  "id": "python_version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select the package manager used to download and install VoteM8.\n",
                     "label": "Package Manager",
                     "multiple": false,
                     "options": [
                        "pip"
                     ]
                  },
                  "id": "package_manager",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide the details of all installed packages and their exact versions in the environment where you have encountered the bug. Follow the instructions below based on the package manager you have selected:\n1. **`pip`**: Run `pip freeze > requirements.txt` in your terminal within the environment, and copy the contents of the generated `requirements.txt` file here.\n2. **`conda`**: Run `conda env export > environment.yml` in your terminal within the environment (or alternatively `conda env export -n {YOUR_ENVIRONMENT_NAME} > environment.yml`), and copy the contents of the generated `environment.yml` file here.",
                     "label": "Environment",
                     "render": "yaml"
                  },
                  "id": "environment",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udc1e\u2002Bug Report\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant VoteM8 versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select the affected GUI entry point.",
                     "label": "GUI Entry Point",
                     "multiple": false,
                     "options": []
                  },
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide an exact step-by-step instruction to reproduce the problem. You can also include screenshots/recordings by dragging and dropping them here.",
                     "label": "Minimal Reproducible Example (MRE)",
                     "placeholder": "1. ...\n2. ...\n3. ...\n"
                  },
                  "id": "mre",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "If applicable, provide the full traceback of the error message.",
                     "label": "Error Message",
                     "render": "shell"
                  },
                  "id": "stderr",
                  "type": "textarea",
                  "validations": {
                     "required": false
                  }
               }
            ],
            "description": "Report problems and errors in VoteM8-TestSuite's GUI.",
            "id": "test_gui_fix",
            "name": "\u2002\ud83e\uddea\u2002Test\u2002\ud83d\uddb1\u2002GUI\u2002\ud83d\udc1e\u2002Bug Report",
            "post_process": {
               "assign_creator": {
                  "if_checkbox": {
                     "id": "collab",
                     "is_checked": true,
                     "number": 1
                  }
               },
               "body": "### Target\n\n- **Version(s)**: {{ input.version }}\n{%- if input.entrypoint %}\n- Entry Point: `{{ input.entrypoint }}`\n{%- endif %}\n{%- if input.endpoint %}\n- End Point: `{{ input.endpoint }}`\n{%- endif %}\n{%- if input.url %}\n- URL: {{ input.url }}\n{%- endif %}\n{%- if input.jsonpath %}\n- JSON Path: `{{ input.jsonpath }}`\n{%- endif %}\n\n### Summary\n\n{{ input.summary }}\n\n{%- if input.proposal %}\n### Proposal\n\n{{ input.proposal }}\n{%- endif %}\n\n{%- if input.test_case %}\n### Test Case\n\n{{ input.test_case }}\n{%- endif %}\n\n{%- if input.mre %}\n### Minimal Reproducible Example\n\n{{ input.mre }}\n{%- endif %}\n\n{%- if input.stderr %}\n### Output Log\n\n{{ input.stderr }}\n{%- endif %}\n\n{%- if input.environment %}\n### Test Environment\n\n- **OS**: {{ input.os }}\n- **Python Version**: {{ input.python_version }}\n- **Package Manager**: {{ input.package_manager }}\n<details><summary><b>Environment</b></summary>\n\n{{ input.environment }}\n\n</details>\n{%- endif %}\n"
            },
            "pre_process": {
               "if_any": [
                  []
               ]
            },
            "subtype": "test_gui_fix",
            "type": "post"
         },
         {
            "body": [
               {
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on VoteM8;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for reporting a <b>non-security-related bug in VoteM8's setup process</b>, i.e. an unexpected behavior that occurs during the download, installation, or initialization of the application.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/DrugBud-Suite/VoteM8/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/DrugBud-Suite/VoteM8/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Bug\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://DrugBud-Suite.github.io/VoteM8/contribute\">Bug Report Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">The issue you are experiencing is in fact a bug, and not a documented expected behavior.</p>\n- <p align=\"justify\">The bug is reproducible in the latest version of the release, and has not yet been reported.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following VoteM8's [Contribution Guidelines](https://DrugBud-Suite.github.io/VoteM8/contribute).<!-- ISSUE-ID: test_setup_fix -->",
                           "required": true
                        },
                        {
                           "label": "I agree to follow VoteM8's [Code of Conduct](https://github.com/DrugBud-Suite/VoteM8/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "Thank you again for filling out this ticket.\nIf you are willing to collaborate on its implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83c\udf9b\u2002Environment Specifications\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "description": "Please select all operating systems on which you have encountered the bug.\n",
                     "label": "Operating System",
                     "multiple": true,
                     "options": [
                        "Linux",
                        "MacOS",
                        "Windows"
                     ]
                  },
                  "id": "os",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all Python versions in which you have encountered the bug.\n",
                     "label": "Python Version",
                     "multiple": true,
                     "options": [
                        "3.13",
                        "3.12",
                        "3.11",
                        "3.10"
                     ]
                  },
                  "id": "python_version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select the package manager used to download and install VoteM8.\n",
                     "label": "Package Manager",
                     "multiple": false,
                     "options": [
                        "pip"
                     ]
                  },
                  "id": "package_manager",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide the details of all installed packages and their exact versions in the environment where you have encountered the bug. Follow the instructions below based on the package manager you have selected:\n1. **`pip`**: Run `pip freeze > requirements.txt` in your terminal within the environment, and copy the contents of the generated `requirements.txt` file here.\n2. **`conda`**: Run `conda env export > environment.yml` in your terminal within the environment (or alternatively `conda env export -n {YOUR_ENVIRONMENT_NAME} > environment.yml`), and copy the contents of the generated `environment.yml` file here.",
                     "label": "Environment",
                     "render": "yaml"
                  },
                  "id": "environment",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udc1e\u2002Bug Report\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant VoteM8 versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide an exact step-by-step instruction to reproduce the problem. You can also include screenshots/recordings by dragging and dropping them here.",
                     "label": "Minimal Reproducible Example (MRE)",
                     "placeholder": "1. ...\n2. ...\n3. ...\n"
                  },
                  "id": "mre",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "If applicable, provide the full traceback of the error message.",
                     "label": "Error Message",
                     "render": "shell"
                  },
                  "id": "stderr",
                  "type": "textarea",
                  "validations": {
                     "required": false
                  }
               }
            ],
            "description": "Report problems in downloading, installation, or initialization of VoteM8.",
            "id": "test_setup_fix",
            "name": "\u2002\ud83e\uddea\u2002Test\u2002\u2699\ufe0f\u2002Setup\u2002\ud83d\udc1e\u2002Bug Report",
            "post_process": {
               "assign_creator": {
                  "if_checkbox": {
                     "id": "collab",
                     "is_checked": true,
                     "number": 1
                  }
               },
               "body": "### Target\n\n- **Version(s)**: {{ input.version }}\n{%- if input.entrypoint %}\n- Entry Point: `{{ input.entrypoint }}`\n{%- endif %}\n{%- if input.endpoint %}\n- End Point: `{{ input.endpoint }}`\n{%- endif %}\n{%- if input.url %}\n- URL: {{ input.url }}\n{%- endif %}\n{%- if input.jsonpath %}\n- JSON Path: `{{ input.jsonpath }}`\n{%- endif %}\n\n### Summary\n\n{{ input.summary }}\n\n{%- if input.proposal %}\n### Proposal\n\n{{ input.proposal }}\n{%- endif %}\n\n{%- if input.test_case %}\n### Test Case\n\n{{ input.test_case }}\n{%- endif %}\n\n{%- if input.mre %}\n### Minimal Reproducible Example\n\n{{ input.mre }}\n{%- endif %}\n\n{%- if input.stderr %}\n### Output Log\n\n{{ input.stderr }}\n{%- endif %}\n\n{%- if input.environment %}\n### Test Environment\n\n- **OS**: {{ input.os }}\n- **Python Version**: {{ input.python_version }}\n- **Package Manager**: {{ input.package_manager }}\n<details><summary><b>Environment</b></summary>\n\n{{ input.environment }}\n\n</details>\n{%- endif %}\n"
            },
            "subtype": "test_setup_fix",
            "type": "post"
         },
         {
            "body": [
               {
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on VoteM8;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>backward-compatible improvement</b> or <b>new functionality</b> in VoteM8-TestSuite's API, i.e. a non-breaking change (that is not a bug fix) in VoteM8-TestSuite's Python application programming interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/DrugBud-Suite/VoteM8/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/DrugBud-Suite/VoteM8/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://DrugBud-Suite.github.io/VoteM8/contribute\">Feature Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-compatible change, and not a breaking change or a bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following VoteM8's [Contribution Guidelines](https://DrugBud-Suite.github.io/VoteM8/contribute).<!-- ISSUE-ID: test_api_feat -->",
                           "required": true
                        },
                        {
                           "label": "I agree to follow VoteM8's [Code of Conduct](https://github.com/DrugBud-Suite/VoteM8/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "Thank you again for filling out this ticket.\nIf you are willing to collaborate on its implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \u2728\u2002Feature Request\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant VoteM8 versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select the relevant API entry point.",
                     "label": "API Entry Point",
                     "multiple": false,
                     "options": [
                        "votem8_testsuite"
                     ]
                  },
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide the fully qualified name (minus the entry point) of the relevant API endpoint. For example, for a method at `votem8_testsuite.module_name.ClassName.method_name` in the entry point `votem8_testsuite`, you should write `module_name.ClassName.method_name`.",
                     "label": "Fully Qualified Name",
                     "placeholder": "module_name.ClassName.method_name"
                  },
                  "id": "endpoint",
                  "type": "input",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "description": "Request backward-compatible improvements and new functionalities in VoteM8-TestSuite's API.",
            "id": "test_api_feat",
            "name": "\u2002\ud83e\uddea\u2002Test\u2002\ud83d\udda5\u2002API\u2002\u2728\u2002Feature Request",
            "post_process": {
               "assign_creator": {
                  "if_checkbox": {
                     "id": "collab",
                     "is_checked": true,
                     "number": 1
                  }
               },
               "body": "### Target\n\n- **Version(s)**: {{ input.version }}\n{%- if input.entrypoint %}\n- Entry Point: `{{ input.entrypoint }}`\n{%- endif %}\n{%- if input.endpoint %}\n- End Point: `{{ input.endpoint }}`\n{%- endif %}\n{%- if input.url %}\n- URL: {{ input.url }}\n{%- endif %}\n{%- if input.jsonpath %}\n- JSON Path: `{{ input.jsonpath }}`\n{%- endif %}\n\n### Summary\n\n{{ input.summary }}\n\n{%- if input.proposal %}\n### Proposal\n\n{{ input.proposal }}\n{%- endif %}\n\n{%- if input.test_case %}\n### Test Case\n\n{{ input.test_case }}\n{%- endif %}\n\n{%- if input.mre %}\n### Minimal Reproducible Example\n\n{{ input.mre }}\n{%- endif %}\n\n{%- if input.stderr %}\n### Output Log\n\n{{ input.stderr }}\n{%- endif %}\n\n{%- if input.environment %}\n### Test Environment\n\n- **OS**: {{ input.os }}\n- **Python Version**: {{ input.python_version }}\n- **Package Manager**: {{ input.package_manager }}\n<details><summary><b>Environment</b></summary>\n\n{{ input.environment }}\n\n</details>\n{%- endif %}\n"
            },
            "pre_process": {
               "if_any": [
                  [
                     "votem8_testsuite"
                  ]
               ]
            },
            "subtype": "test_api_feat",
            "type": "post"
         },
         {
            "body": [
               {
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on VoteM8;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>backward-compatible improvement</b> or <b>new functionality</b> in VoteM8-TestSuite's CLI, i.e. a non-breaking change (that is not a bug fix) in VoteM8-TestSuite's command-line interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/DrugBud-Suite/VoteM8/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/DrugBud-Suite/VoteM8/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://DrugBud-Suite.github.io/VoteM8/contribute\">Feature Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-compatible change, and not a breaking change or a bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following VoteM8's [Contribution Guidelines](https://DrugBud-Suite.github.io/VoteM8/contribute).<!-- ISSUE-ID: test_cli_feat -->",
                           "required": true
                        },
                        {
                           "label": "I agree to follow VoteM8's [Code of Conduct](https://github.com/DrugBud-Suite/VoteM8/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "Thank you again for filling out this ticket.\nIf you are willing to collaborate on its implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \u2728\u2002Feature Request\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant VoteM8 versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select the relevant CLI entry point.",
                     "label": "CLI Entry Point",
                     "multiple": false,
                     "options": [
                        "VoteM8-TestSuite"
                     ]
                  },
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "description": "Request backward-compatible improvements and new functionalities in VoteM8-TestSuite's CLI.",
            "id": "test_cli_feat",
            "name": "\u2002\ud83e\uddea\u2002Test\u2002\u2328\ufe0f\u2002CLI\u2002\u2728\u2002Feature Request",
            "post_process": {
               "assign_creator": {
                  "if_checkbox": {
                     "id": "collab",
                     "is_checked": true,
                     "number": 1
                  }
               },
               "body": "### Target\n\n- **Version(s)**: {{ input.version }}\n{%- if input.entrypoint %}\n- Entry Point: `{{ input.entrypoint }}`\n{%- endif %}\n{%- if input.endpoint %}\n- End Point: `{{ input.endpoint }}`\n{%- endif %}\n{%- if input.url %}\n- URL: {{ input.url }}\n{%- endif %}\n{%- if input.jsonpath %}\n- JSON Path: `{{ input.jsonpath }}`\n{%- endif %}\n\n### Summary\n\n{{ input.summary }}\n\n{%- if input.proposal %}\n### Proposal\n\n{{ input.proposal }}\n{%- endif %}\n\n{%- if input.test_case %}\n### Test Case\n\n{{ input.test_case }}\n{%- endif %}\n\n{%- if input.mre %}\n### Minimal Reproducible Example\n\n{{ input.mre }}\n{%- endif %}\n\n{%- if input.stderr %}\n### Output Log\n\n{{ input.stderr }}\n{%- endif %}\n\n{%- if input.environment %}\n### Test Environment\n\n- **OS**: {{ input.os }}\n- **Python Version**: {{ input.python_version }}\n- **Package Manager**: {{ input.package_manager }}\n<details><summary><b>Environment</b></summary>\n\n{{ input.environment }}\n\n</details>\n{%- endif %}\n"
            },
            "pre_process": {
               "if_any": [
                  [
                     "VoteM8-TestSuite"
                  ]
               ]
            },
            "subtype": "test_cli_feat",
            "type": "post"
         },
         {
            "body": [
               {
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on VoteM8;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>backward-compatible improvement</b> or <b>new functionality</b> in VoteM8-TestSuite's GUI, i.e. a non-breaking change (that is not a bug fix) in VoteM8-TestSuite's graphical user interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/DrugBud-Suite/VoteM8/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/DrugBud-Suite/VoteM8/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://DrugBud-Suite.github.io/VoteM8/contribute\">Feature Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-compatible change, and not a breaking change or a bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following VoteM8's [Contribution Guidelines](https://DrugBud-Suite.github.io/VoteM8/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow VoteM8's [Code of Conduct](https://github.com/DrugBud-Suite/VoteM8/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "Thank you again for filling out this ticket.\nIf you are willing to collaborate on its implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \u2728\u2002Feature Request\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant VoteM8 versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select the affected GUI entry point.",
                     "label": "GUI Entry Point",
                     "multiple": false,
                     "options": []
                  },
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "description": "Request backward-compatible improvements and new functionalities in VoteM8-TestSuite's GUI.",
            "id": "test_gui_feat",
            "name": "\u2002\ud83e\uddea\u2002Test\u2002\ud83d\uddb1\u2002GUI\u2002\u2728\u2002Feature Request",
            "post_process": {
               "assign_creator": {
                  "if_checkbox": {
                     "id": "collab",
                     "is_checked": true,
                     "number": 1
                  }
               },
               "body": "### Target\n\n- **Version(s)**: {{ input.version }}\n{%- if input.entrypoint %}\n- Entry Point: `{{ input.entrypoint }}`\n{%- endif %}\n{%- if input.endpoint %}\n- End Point: `{{ input.endpoint }}`\n{%- endif %}\n{%- if input.url %}\n- URL: {{ input.url }}\n{%- endif %}\n{%- if input.jsonpath %}\n- JSON Path: `{{ input.jsonpath }}`\n{%- endif %}\n\n### Summary\n\n{{ input.summary }}\n\n{%- if input.proposal %}\n### Proposal\n\n{{ input.proposal }}\n{%- endif %}\n\n{%- if input.test_case %}\n### Test Case\n\n{{ input.test_case }}\n{%- endif %}\n\n{%- if input.mre %}\n### Minimal Reproducible Example\n\n{{ input.mre }}\n{%- endif %}\n\n{%- if input.stderr %}\n### Output Log\n\n{{ input.stderr }}\n{%- endif %}\n\n{%- if input.environment %}\n### Test Environment\n\n- **OS**: {{ input.os }}\n- **Python Version**: {{ input.python_version }}\n- **Package Manager**: {{ input.package_manager }}\n<details><summary><b>Environment</b></summary>\n\n{{ input.environment }}\n\n</details>\n{%- endif %}\n"
            },
            "pre_process": {
               "if_any": [
                  []
               ]
            },
            "subtype": "test_gui_feat",
            "type": "post"
         },
         {
            "body": [
               {
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on VoteM8;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>backward-incompatible change</b> in VoteM8-TestSuite's API, i.e. a breaking change in behaviour or functionalities of VoteM8-TestSuite's Python application programming interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/DrugBud-Suite/VoteM8/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/DrugBud-Suite/VoteM8/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://DrugBud-Suite.github.io/VoteM8/contribute\">Change Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-incompatible change, and not a new feature, improvement, or bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following VoteM8's [Contribution Guidelines](https://DrugBud-Suite.github.io/VoteM8/contribute).<!-- ISSUE-ID: test_api_change -->",
                           "required": true
                        },
                        {
                           "label": "I agree to follow VoteM8's [Code of Conduct](https://github.com/DrugBud-Suite/VoteM8/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "Thank you again for filling out this ticket.\nIf you are willing to collaborate on its implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udca5\u2002Change Request\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant VoteM8 versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select the relevant API entry point.",
                     "label": "API Entry Point",
                     "multiple": false,
                     "options": [
                        "votem8_testsuite"
                     ]
                  },
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide the fully qualified name (minus the entry point) of the relevant API endpoint. For example, for a method at `votem8_testsuite.module_name.ClassName.method_name` in the entry point `votem8_testsuite`, you should write `module_name.ClassName.method_name`.",
                     "label": "Fully Qualified Name",
                     "placeholder": "module_name.ClassName.method_name"
                  },
                  "id": "endpoint",
                  "type": "input",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "description": "Request backward-incompatible changes to VoteM8-TestSuite's API.",
            "id": "test_api_change",
            "name": "\u2002\ud83e\uddea\u2002Test\u2002\ud83d\udda5\u2002API\u2002\ud83d\udca5\u2002Change Request",
            "post_process": {
               "assign_creator": {
                  "if_checkbox": {
                     "id": "collab",
                     "is_checked": true,
                     "number": 1
                  }
               },
               "body": "### Target\n\n- **Version(s)**: {{ input.version }}\n{%- if input.entrypoint %}\n- Entry Point: `{{ input.entrypoint }}`\n{%- endif %}\n{%- if input.endpoint %}\n- End Point: `{{ input.endpoint }}`\n{%- endif %}\n{%- if input.url %}\n- URL: {{ input.url }}\n{%- endif %}\n{%- if input.jsonpath %}\n- JSON Path: `{{ input.jsonpath }}`\n{%- endif %}\n\n### Summary\n\n{{ input.summary }}\n\n{%- if input.proposal %}\n### Proposal\n\n{{ input.proposal }}\n{%- endif %}\n\n{%- if input.test_case %}\n### Test Case\n\n{{ input.test_case }}\n{%- endif %}\n\n{%- if input.mre %}\n### Minimal Reproducible Example\n\n{{ input.mre }}\n{%- endif %}\n\n{%- if input.stderr %}\n### Output Log\n\n{{ input.stderr }}\n{%- endif %}\n\n{%- if input.environment %}\n### Test Environment\n\n- **OS**: {{ input.os }}\n- **Python Version**: {{ input.python_version }}\n- **Package Manager**: {{ input.package_manager }}\n<details><summary><b>Environment</b></summary>\n\n{{ input.environment }}\n\n</details>\n{%- endif %}\n"
            },
            "pre_process": {
               "if_any": [
                  [
                     "votem8_testsuite"
                  ]
               ]
            },
            "subtype": "test_api_change",
            "type": "post"
         },
         {
            "body": [
               {
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on VoteM8;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>backward-incompatible change</b> in VoteM8-TestSuite's CLI, i.e. a breaking change in behaviour or functionalities of VoteM8-TestSuite's command-line interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/DrugBud-Suite/VoteM8/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/DrugBud-Suite/VoteM8/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://DrugBud-Suite.github.io/VoteM8/contribute\">Change Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-incompatible change, and not a new feature, improvement, or bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following VoteM8's [Contribution Guidelines](https://DrugBud-Suite.github.io/VoteM8/contribute).<!-- ISSUE-ID: test_cli_change -->",
                           "required": true
                        },
                        {
                           "label": "I agree to follow VoteM8's [Code of Conduct](https://github.com/DrugBud-Suite/VoteM8/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "Thank you again for filling out this ticket.\nIf you are willing to collaborate on its implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udca5\u2002Change Request\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant VoteM8 versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select the relevant CLI entry point.",
                     "label": "CLI Entry Point",
                     "multiple": false,
                     "options": [
                        "VoteM8-TestSuite"
                     ]
                  },
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "description": "Request backward-incompatible changes to VoteM8-TestSuite's CLI.",
            "id": "test_cli_change",
            "name": "\u2002\ud83e\uddea\u2002Test\u2002\u2328\ufe0f\u2002CLI\u2002\ud83d\udca5\u2002Change Request",
            "post_process": {
               "assign_creator": {
                  "if_checkbox": {
                     "id": "collab",
                     "is_checked": true,
                     "number": 1
                  }
               },
               "body": "### Target\n\n- **Version(s)**: {{ input.version }}\n{%- if input.entrypoint %}\n- Entry Point: `{{ input.entrypoint }}`\n{%- endif %}\n{%- if input.endpoint %}\n- End Point: `{{ input.endpoint }}`\n{%- endif %}\n{%- if input.url %}\n- URL: {{ input.url }}\n{%- endif %}\n{%- if input.jsonpath %}\n- JSON Path: `{{ input.jsonpath }}`\n{%- endif %}\n\n### Summary\n\n{{ input.summary }}\n\n{%- if input.proposal %}\n### Proposal\n\n{{ input.proposal }}\n{%- endif %}\n\n{%- if input.test_case %}\n### Test Case\n\n{{ input.test_case }}\n{%- endif %}\n\n{%- if input.mre %}\n### Minimal Reproducible Example\n\n{{ input.mre }}\n{%- endif %}\n\n{%- if input.stderr %}\n### Output Log\n\n{{ input.stderr }}\n{%- endif %}\n\n{%- if input.environment %}\n### Test Environment\n\n- **OS**: {{ input.os }}\n- **Python Version**: {{ input.python_version }}\n- **Package Manager**: {{ input.package_manager }}\n<details><summary><b>Environment</b></summary>\n\n{{ input.environment }}\n\n</details>\n{%- endif %}\n"
            },
            "pre_process": {
               "if_any": [
                  [
                     "VoteM8-TestSuite"
                  ]
               ]
            },
            "subtype": "test_cli_change",
            "type": "post"
         },
         {
            "body": [
               {
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on VoteM8;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>backward-incompatible change</b> in VoteM8-TestSuite's GUI, i.e. a breaking change in behaviour or functionalities of VoteM8-TestSuite's graphical user interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/DrugBud-Suite/VoteM8/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/DrugBud-Suite/VoteM8/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://DrugBud-Suite.github.io/VoteM8/contribute\">Change Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-incompatible change, and not a new feature, improvement, or bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following VoteM8's [Contribution Guidelines](https://DrugBud-Suite.github.io/VoteM8/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow VoteM8's [Code of Conduct](https://github.com/DrugBud-Suite/VoteM8/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "Thank you again for filling out this ticket.\nIf you are willing to collaborate on its implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udca5\u2002Change Request\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant VoteM8 versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select the affected GUI entry point.",
                     "label": "GUI Entry Point",
                     "multiple": false,
                     "options": []
                  },
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "description": "Request backward-incompatible changes to VoteM8-TestSuite's GUI.",
            "id": "test_gui_change",
            "name": "\u2002\ud83e\uddea\u2002Test\u2002\ud83d\uddb1\u2002GUI\u2002\ud83d\udca5\u2002Change Request",
            "post_process": {
               "assign_creator": {
                  "if_checkbox": {
                     "id": "collab",
                     "is_checked": true,
                     "number": 1
                  }
               },
               "body": "### Target\n\n- **Version(s)**: {{ input.version }}\n{%- if input.entrypoint %}\n- Entry Point: `{{ input.entrypoint }}`\n{%- endif %}\n{%- if input.endpoint %}\n- End Point: `{{ input.endpoint }}`\n{%- endif %}\n{%- if input.url %}\n- URL: {{ input.url }}\n{%- endif %}\n{%- if input.jsonpath %}\n- JSON Path: `{{ input.jsonpath }}`\n{%- endif %}\n\n### Summary\n\n{{ input.summary }}\n\n{%- if input.proposal %}\n### Proposal\n\n{{ input.proposal }}\n{%- endif %}\n\n{%- if input.test_case %}\n### Test Case\n\n{{ input.test_case }}\n{%- endif %}\n\n{%- if input.mre %}\n### Minimal Reproducible Example\n\n{{ input.mre }}\n{%- endif %}\n\n{%- if input.stderr %}\n### Output Log\n\n{{ input.stderr }}\n{%- endif %}\n\n{%- if input.environment %}\n### Test Environment\n\n- **OS**: {{ input.os }}\n- **Python Version**: {{ input.python_version }}\n- **Package Manager**: {{ input.package_manager }}\n<details><summary><b>Environment</b></summary>\n\n{{ input.environment }}\n\n</details>\n{%- endif %}\n"
            },
            "pre_process": {
               "if_any": [
                  []
               ]
            },
            "subtype": "test_gui_change",
            "type": "post"
         },
         {
            "body": [
               {
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on VoteM8;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>code formatting and refactoring</b> in VoteM8's source files, i.e. a change that improves the code quality, readability, and maintainability, without affecting the code's runtime behavior.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/DrugBud-Suite/VoteM8/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/DrugBud-Suite/VoteM8/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following VoteM8's [Contribution Guidelines](https://DrugBud-Suite.github.io/VoteM8/contribute).<!-- ISSUE-ID: refactor -->",
                           "required": true
                        },
                        {
                           "label": "I agree to follow VoteM8's [Code of Conduct](https://github.com/DrugBud-Suite/VoteM8/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "Thank you again for filling out this ticket.\nIf you are willing to collaborate on its implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udca5\u2002Change Request\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant VoteM8 versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "description": "Request code formatting and refactoring in VoteM8's source files.",
            "id": "refactor",
            "name": "\u2002\ud83e\uddf9\ufe0f\u2002Refactoring Request",
            "post_process": {
               "assign_creator": {
                  "if_checkbox": {
                     "id": "collab",
                     "is_checked": true,
                     "number": 1
                  }
               },
               "body": "### Target\n\n- **Version(s)**: {{ input.version }}\n{%- if input.entrypoint %}\n- Entry Point: `{{ input.entrypoint }}`\n{%- endif %}\n{%- if input.endpoint %}\n- End Point: `{{ input.endpoint }}`\n{%- endif %}\n{%- if input.url %}\n- URL: {{ input.url }}\n{%- endif %}\n{%- if input.jsonpath %}\n- JSON Path: `{{ input.jsonpath }}`\n{%- endif %}\n\n### Summary\n\n{{ input.summary }}\n\n{%- if input.proposal %}\n### Proposal\n\n{{ input.proposal }}\n{%- endif %}\n\n{%- if input.test_case %}\n### Test Case\n\n{{ input.test_case }}\n{%- endif %}\n\n{%- if input.mre %}\n### Minimal Reproducible Example\n\n{{ input.mre }}\n{%- endif %}\n\n{%- if input.stderr %}\n### Output Log\n\n{{ input.stderr }}\n{%- endif %}\n\n{%- if input.environment %}\n### Test Environment\n\n- **OS**: {{ input.os }}\n- **Python Version**: {{ input.python_version }}\n- **Package Manager**: {{ input.package_manager }}\n<details><summary><b>Environment</b></summary>\n\n{{ input.environment }}\n\n</details>\n{%- endif %}\n"
            },
            "subtype": "refactor",
            "type": "post"
         },
         {
            "body": [
               {
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on VoteM8;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>reconfiguration</b> in VoteM8's metadata and settings, such as project information and other options that do not fall under other issue categories.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/DrugBud-Suite/VoteM8/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/DrugBud-Suite/VoteM8/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following VoteM8's [Contribution Guidelines](https://DrugBud-Suite.github.io/VoteM8/contribute).<!-- ISSUE-ID: config -->",
                           "required": true
                        },
                        {
                           "label": "I agree to follow VoteM8's [Code of Conduct](https://github.com/DrugBud-Suite/VoteM8/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "Thank you again for filling out this ticket.\nIf you are willing to collaborate on its implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udca5\u2002Change Request\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant VoteM8 versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide the URL of the relevant configuration file in the repository.",
                     "label": "URL",
                     "placeholder": "https://github.com/DrugBud-Suite/VoteM8/blob/main/.control/proj.yaml"
                  },
                  "id": "url",
                  "type": "input",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide the JSONPath expression to the relevant configuration field.",
                     "label": "Path",
                     "placeholder": "$.license.expression"
                  },
                  "id": "jsonpath",
                  "type": "input",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "description": "Request a change in VoteM8's metadata and settings.",
            "id": "config",
            "name": "\u2002\ud83d\udee0\ufe0f\u2002Configuration Request",
            "post_process": {
               "assign_creator": {
                  "if_checkbox": {
                     "id": "collab",
                     "is_checked": true,
                     "number": 1
                  }
               },
               "body": "### Target\n\n- **Version(s)**: {{ input.version }}\n{%- if input.entrypoint %}\n- Entry Point: `{{ input.entrypoint }}`\n{%- endif %}\n{%- if input.endpoint %}\n- End Point: `{{ input.endpoint }}`\n{%- endif %}\n{%- if input.url %}\n- URL: {{ input.url }}\n{%- endif %}\n{%- if input.jsonpath %}\n- JSON Path: `{{ input.jsonpath }}`\n{%- endif %}\n\n### Summary\n\n{{ input.summary }}\n\n{%- if input.proposal %}\n### Proposal\n\n{{ input.proposal }}\n{%- endif %}\n\n{%- if input.test_case %}\n### Test Case\n\n{{ input.test_case }}\n{%- endif %}\n\n{%- if input.mre %}\n### Minimal Reproducible Example\n\n{{ input.mre }}\n{%- endif %}\n\n{%- if input.stderr %}\n### Output Log\n\n{{ input.stderr }}\n{%- endif %}\n\n{%- if input.environment %}\n### Test Environment\n\n- **OS**: {{ input.os }}\n- **Python Version**: {{ input.python_version }}\n- **Package Manager**: {{ input.package_manager }}\n<details><summary><b>Environment</b></summary>\n\n{{ input.environment }}\n\n</details>\n{%- endif %}\n"
            },
            "subtype": "config",
            "type": "internal"
         },
         {
            "body": [
               {
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on VoteM8;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>change in VoteM8's automated workflows and development environment</b>, such as CI/CD pipelines, testing, and deployment configurations.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/DrugBud-Suite/VoteM8/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/DrugBud-Suite/VoteM8/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following VoteM8's [Contribution Guidelines](https://DrugBud-Suite.github.io/VoteM8/contribute).<!-- ISSUE-ID: devops -->",
                           "required": true
                        },
                        {
                           "label": "I agree to follow VoteM8's [Code of Conduct](https://github.com/DrugBud-Suite/VoteM8/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "Thank you again for filling out this ticket.\nIf you are willing to collaborate on its implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udca5\u2002Change Request\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant VoteM8 versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide the URL of the relevant configuration file in the repository.",
                     "label": "URL",
                     "placeholder": "https://github.com/DrugBud-Suite/VoteM8/blob/main/.control/proj.yaml"
                  },
                  "id": "url",
                  "type": "input",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide the JSONPath expression to the relevant configuration field.",
                     "label": "Path",
                     "placeholder": "$.license.expression"
                  },
                  "id": "jsonpath",
                  "type": "input",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "description": "Request a change in VoteM8's automated workflows and development environment.",
            "id": "devops",
            "name": "\u2002\ud83e\udd16\ufe0f\u2002DevOps Request",
            "post_process": {
               "assign_creator": {
                  "if_checkbox": {
                     "id": "collab",
                     "is_checked": true,
                     "number": 1
                  }
               },
               "body": "### Target\n\n- **Version(s)**: {{ input.version }}\n{%- if input.entrypoint %}\n- Entry Point: `{{ input.entrypoint }}`\n{%- endif %}\n{%- if input.endpoint %}\n- End Point: `{{ input.endpoint }}`\n{%- endif %}\n{%- if input.url %}\n- URL: {{ input.url }}\n{%- endif %}\n{%- if input.jsonpath %}\n- JSON Path: `{{ input.jsonpath }}`\n{%- endif %}\n\n### Summary\n\n{{ input.summary }}\n\n{%- if input.proposal %}\n### Proposal\n\n{{ input.proposal }}\n{%- endif %}\n\n{%- if input.test_case %}\n### Test Case\n\n{{ input.test_case }}\n{%- endif %}\n\n{%- if input.mre %}\n### Minimal Reproducible Example\n\n{{ input.mre }}\n{%- endif %}\n\n{%- if input.stderr %}\n### Output Log\n\n{{ input.stderr }}\n{%- endif %}\n\n{%- if input.environment %}\n### Test Environment\n\n- **OS**: {{ input.os }}\n- **Python Version**: {{ input.python_version }}\n- **Package Manager**: {{ input.package_manager }}\n<details><summary><b>Environment</b></summary>\n\n{{ input.environment }}\n\n</details>\n{%- endif %}\n"
            },
            "subtype": "devops",
            "type": "internal"
         },
         {
            "body": [
               {
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on VoteM8;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>maintenance job</b> in VoteM8, such as file cleanup and other tasks that do not fall under other issue categories.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/DrugBud-Suite/VoteM8/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/DrugBud-Suite/VoteM8/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following VoteM8's [Contribution Guidelines](https://DrugBud-Suite.github.io/VoteM8/contribute).<!-- ISSUE-ID: maintenance -->",
                           "required": true
                        },
                        {
                           "label": "I agree to follow VoteM8's [Code of Conduct](https://github.com/DrugBud-Suite/VoteM8/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "label": "Thank you again for filling out this ticket.\nIf you are willing to collaborate on its implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udca5\u2002Change Request\n"
                  },
                  "type": "markdown"
               },
               {
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant VoteM8 versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "description": "Request a maintenance job in VoteM8.",
            "id": "maintenance",
            "name": "\u2002\ud83e\uddf9\ufe0f\u2002Maintenance Request",
            "post_process": {
               "assign_creator": {
                  "if_checkbox": {
                     "id": "collab",
                     "is_checked": true,
                     "number": 1
                  }
               },
               "body": "### Target\n\n- **Version(s)**: {{ input.version }}\n{%- if input.entrypoint %}\n- Entry Point: `{{ input.entrypoint }}`\n{%- endif %}\n{%- if input.endpoint %}\n- End Point: `{{ input.endpoint }}`\n{%- endif %}\n{%- if input.url %}\n- URL: {{ input.url }}\n{%- endif %}\n{%- if input.jsonpath %}\n- JSON Path: `{{ input.jsonpath }}`\n{%- endif %}\n\n### Summary\n\n{{ input.summary }}\n\n{%- if input.proposal %}\n### Proposal\n\n{{ input.proposal }}\n{%- endif %}\n\n{%- if input.test_case %}\n### Test Case\n\n{{ input.test_case }}\n{%- endif %}\n\n{%- if input.mre %}\n### Minimal Reproducible Example\n\n{{ input.mre }}\n{%- endif %}\n\n{%- if input.stderr %}\n### Output Log\n\n{{ input.stderr }}\n{%- endif %}\n\n{%- if input.environment %}\n### Test Environment\n\n- **OS**: {{ input.os }}\n- **Python Version**: {{ input.python_version }}\n- **Package Manager**: {{ input.package_manager }}\n<details><summary><b>Environment</b></summary>\n\n{{ input.environment }}\n\n</details>\n{%- endif %}\n"
            },
            "subtype": "maintenance",
            "type": "internal"
         }
      ]
   },
   "keywords": [
      "consensus",
      "scoring",
      "molecular docking",
      "protein-ligand scoring",
      "virtual screening"
   ],
   "label": {
      "all": [
         {
            "color": "#A00000",
            "description": "Internal project changes.",
            "group_name": "type",
            "id": "internal",
            "name": "type: Internal",
            "prefix": "type: ",
            "type": "defined"
         },
         {
            "color": "#A00000",
            "description": "New major release containing breaking changes.",
            "group_name": "type",
            "id": "major",
            "name": "type: Major Release",
            "prefix": "type: ",
            "type": "defined"
         },
         {
            "color": "#A00000",
            "description": "New minor release containing backward-compatible new features and improvements.",
            "group_name": "type",
            "id": "minor",
            "name": "type: Minor Release",
            "prefix": "type: ",
            "type": "defined"
         },
         {
            "color": "#A00000",
            "description": "New patch release containing backward-compatible bug fixes.",
            "group_name": "type",
            "id": "patch",
            "name": "type: Patch Release",
            "prefix": "type: ",
            "type": "defined"
         },
         {
            "color": "#A00000",
            "description": "New post-release containing non-API related changes.",
            "group_name": "type",
            "id": "post",
            "name": "type: Post Release",
            "prefix": "type: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "Related to VoteM8's Python API.",
            "group_name": "subtype",
            "id": "api",
            "name": "subtype: API",
            "prefix": "subtype: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "Related to VoteM8's command-line interface.",
            "group_name": "subtype",
            "id": "cli",
            "name": "subtype: CLI",
            "prefix": "subtype: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "Related to VoteM8's graphical user interface.",
            "group_name": "subtype",
            "id": "gui",
            "name": "subtype: GUI",
            "prefix": "subtype: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "Related to VoteM8's installation.",
            "group_name": "subtype",
            "id": "setup",
            "name": "subtype: Setup",
            "prefix": "subtype: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "Related to documentation fixes.",
            "group_name": "subtype",
            "id": "doc_fix",
            "name": "subtype: Doc Fix",
            "prefix": "subtype: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "Related to documentation features.",
            "group_name": "subtype",
            "id": "doc_feat",
            "name": "subtype: Doc Feat",
            "prefix": "subtype: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "Related to documentation changes.",
            "group_name": "subtype",
            "id": "doc_change",
            "name": "subtype: Doc Change",
            "prefix": "subtype: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "Related to fixes in VoteM8-TestSuite's Python API.",
            "group_name": "subtype",
            "id": "test_api_fix",
            "name": "subtype: Test API Fix",
            "prefix": "subtype: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "Related to fixes in VoteM8-TestSuite's command-line interface.",
            "group_name": "subtype",
            "id": "test_cli_fix",
            "name": "subtype: Test CLI Fix",
            "prefix": "subtype: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "Related to fixes in VoteM8-TestSuite's graphical user interface.",
            "group_name": "subtype",
            "id": "test_gui_fix",
            "name": "subtype: Test GUI Fix",
            "prefix": "subtype: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "Related to fixes in VoteM8-TestSuite's installation.",
            "group_name": "subtype",
            "id": "test_setup_fix",
            "name": "subtype: Test Setup Fix",
            "prefix": "subtype: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "Related to features in VoteM8-TestSuite's Python API.",
            "group_name": "subtype",
            "id": "test_api_feat",
            "name": "subtype: Test API Feat",
            "prefix": "subtype: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "Related to features in VoteM8-TestSuite's command-line interface.",
            "group_name": "subtype",
            "id": "test_cli_feat",
            "name": "subtype: Test CLI Feat",
            "prefix": "subtype: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "Related to features in VoteM8-TestSuite's graphical user interface.",
            "group_name": "subtype",
            "id": "test_gui_feat",
            "name": "subtype: Test GUI Feat",
            "prefix": "subtype: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "Related to changes in VoteM8-TestSuite's Python API.",
            "group_name": "subtype",
            "id": "test_api_change",
            "name": "subtype: Test API Change",
            "prefix": "subtype: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "Related to changes in VoteM8-TestSuite's command-line interface.",
            "group_name": "subtype",
            "id": "test_cli_change",
            "name": "subtype: Test CLI Change",
            "prefix": "subtype: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "Related to changes in VoteM8-TestSuite's graphical user interface.",
            "group_name": "subtype",
            "id": "test_gui_change",
            "name": "subtype: Test GUI Change",
            "prefix": "subtype: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "Related to refactoring changes without affecting the API.",
            "group_name": "subtype",
            "id": "refactor",
            "name": "subtype: Refactor",
            "prefix": "subtype: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "Related to VoteM8 metadata and settings.",
            "group_name": "subtype",
            "id": "config",
            "name": "subtype: Config",
            "prefix": "subtype: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "Related to DevOps and CI/CD changes.",
            "group_name": "subtype",
            "id": "devops",
            "name": "subtype: DevOps",
            "prefix": "subtype: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "Related to project maintenance tasks.",
            "group_name": "subtype",
            "id": "maintenance",
            "name": "subtype: Maintenance",
            "prefix": "subtype: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "The issue is being triaged.",
            "group_name": "status",
            "id": "triage",
            "name": "status: Triage",
            "prefix": "status: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "The issue/PR has been rejected.",
            "group_name": "status",
            "id": "rejected",
            "name": "status: Rejected",
            "prefix": "status: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "The issue/PR is a duplicate.",
            "group_name": "status",
            "id": "duplicate",
            "name": "status: Duplicate",
            "prefix": "status: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "The issue/PR is invalid.",
            "group_name": "status",
            "id": "invalid",
            "name": "status: Invalid",
            "prefix": "status: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "The issue is in the planning phase.",
            "group_name": "status",
            "id": "planning",
            "name": "status: Planning",
            "prefix": "status: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "The issue is in the requirement analysis phase.",
            "group_name": "status",
            "id": "requirement_analysis",
            "name": "status: Requirement Analysis",
            "prefix": "status: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "The issue is in the design phase.",
            "group_name": "status",
            "id": "design",
            "name": "status: Design",
            "prefix": "status: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "The issue is in the implementation phase.",
            "group_name": "status",
            "id": "implementation",
            "name": "status: Implementation",
            "prefix": "status: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "The issue is in the testing phase.",
            "group_name": "status",
            "id": "testing",
            "name": "status: Testing",
            "prefix": "status: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "The issue/PR is in alpha release.",
            "group_name": "status",
            "id": "deploy_alpha",
            "name": "status: Alpha Release",
            "prefix": "status: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "The issue/PR is in beta release.",
            "group_name": "status",
            "id": "deploy_beta",
            "name": "status: Beta Release",
            "prefix": "status: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "The issue/PR is published as a release candidate.",
            "group_name": "status",
            "id": "deploy_rc",
            "name": "status: Release Candidate",
            "prefix": "status: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "The issue/PR is published as a final release.",
            "group_name": "status",
            "id": "deploy_final",
            "name": "status: Final Release",
            "prefix": "status: ",
            "type": "defined"
         },
         {
            "color": "#0366d6",
            "description": "The issue/pull-request is queued for processing.",
            "group_name": "remark",
            "id": "queued",
            "name": "remark: Queued",
            "prefix": "remark: ",
            "type": "custom_group"
         },
         {
            "color": "#0366d6",
            "description": "The issue/pull-request requires more discussion.",
            "group_name": "remark",
            "id": "discuss",
            "name": "remark: Discuss",
            "prefix": "remark: ",
            "type": "custom_group"
         },
         {
            "color": "#0366d6",
            "description": "The issue/pull-request requires a volunteer.",
            "group_name": "remark",
            "id": "need_volunteer",
            "name": "remark: Need Volunteer",
            "prefix": "remark: ",
            "type": "custom_group"
         },
         {
            "color": "#0366d6",
            "description": "Related to this specific version of the package.",
            "group_name": "version",
            "id": "0.0.0",
            "name": "Version: 0.0.0",
            "prefix": "Version: ",
            "type": "auto"
         },
         {
            "color": "#0366d6",
            "description": "Related to this specific branch of the repository.",
            "group_name": "branch",
            "id": "main",
            "name": "branch: main",
            "prefix": "branch: ",
            "type": "auto"
         }
      ],
      "branch": {
         "color": "#0366d6",
         "description": "Related to this specific branch of the repository.",
         "prefix": "branch: "
      },
      "custom": {
         "group": {
            "remark": {
               "color": "#0366d6",
               "label": {
                  "discuss": {
                     "description": "The issue/pull-request requires more discussion.",
                     "suffix": "Discuss"
                  },
                  "need_volunteer": {
                     "description": "The issue/pull-request requires a volunteer.",
                     "suffix": "Need Volunteer"
                  },
                  "queued": {
                     "description": "The issue/pull-request is queued for processing.",
                     "suffix": "Queued"
                  }
               },
               "prefix": "remark: "
            }
         }
      },
      "status": {
         "color": "#0366d6",
         "label": {
            "deploy_alpha": {
               "description": "The issue/PR is in alpha release.",
               "suffix": "Alpha Release"
            },
            "deploy_beta": {
               "description": "The issue/PR is in beta release.",
               "suffix": "Beta Release"
            },
            "deploy_final": {
               "description": "The issue/PR is published as a final release.",
               "suffix": "Final Release"
            },
            "deploy_rc": {
               "description": "The issue/PR is published as a release candidate.",
               "suffix": "Release Candidate"
            },
            "design": {
               "description": "The issue is in the design phase.",
               "suffix": "Design"
            },
            "duplicate": {
               "description": "The issue/PR is a duplicate.",
               "suffix": "Duplicate"
            },
            "implementation": {
               "description": "The issue is in the implementation phase.",
               "suffix": "Implementation"
            },
            "invalid": {
               "description": "The issue/PR is invalid.",
               "suffix": "Invalid"
            },
            "planning": {
               "description": "The issue is in the planning phase.",
               "suffix": "Planning"
            },
            "rejected": {
               "description": "The issue/PR has been rejected.",
               "suffix": "Rejected"
            },
            "requirement_analysis": {
               "description": "The issue is in the requirement analysis phase.",
               "suffix": "Requirement Analysis"
            },
            "testing": {
               "description": "The issue is in the testing phase.",
               "suffix": "Testing"
            },
            "triage": {
               "description": "The issue is being triaged.",
               "suffix": "Triage"
            }
         },
         "prefix": "status: "
      },
      "subtype": {
         "color": "#0366d6",
         "label": {
            "api": {
               "description": "Related to VoteM8's Python API.",
               "suffix": "API"
            },
            "cli": {
               "description": "Related to VoteM8's command-line interface.",
               "suffix": "CLI"
            },
            "config": {
               "description": "Related to VoteM8 metadata and settings.",
               "suffix": "Config"
            },
            "devops": {
               "description": "Related to DevOps and CI/CD changes.",
               "suffix": "DevOps"
            },
            "doc_change": {
               "description": "Related to documentation changes.",
               "suffix": "Doc Change"
            },
            "doc_feat": {
               "description": "Related to documentation features.",
               "suffix": "Doc Feat"
            },
            "doc_fix": {
               "description": "Related to documentation fixes.",
               "suffix": "Doc Fix"
            },
            "gui": {
               "description": "Related to VoteM8's graphical user interface.",
               "suffix": "GUI"
            },
            "maintenance": {
               "description": "Related to project maintenance tasks.",
               "suffix": "Maintenance"
            },
            "refactor": {
               "description": "Related to refactoring changes without affecting the API.",
               "suffix": "Refactor"
            },
            "setup": {
               "description": "Related to VoteM8's installation.",
               "suffix": "Setup"
            },
            "test_api_change": {
               "description": "Related to changes in VoteM8-TestSuite's Python API.",
               "suffix": "Test API Change"
            },
            "test_api_feat": {
               "description": "Related to features in VoteM8-TestSuite's Python API.",
               "suffix": "Test API Feat"
            },
            "test_api_fix": {
               "description": "Related to fixes in VoteM8-TestSuite's Python API.",
               "suffix": "Test API Fix"
            },
            "test_cli_change": {
               "description": "Related to changes in VoteM8-TestSuite's command-line interface.",
               "suffix": "Test CLI Change"
            },
            "test_cli_feat": {
               "description": "Related to features in VoteM8-TestSuite's command-line interface.",
               "suffix": "Test CLI Feat"
            },
            "test_cli_fix": {
               "description": "Related to fixes in VoteM8-TestSuite's command-line interface.",
               "suffix": "Test CLI Fix"
            },
            "test_gui_change": {
               "description": "Related to changes in VoteM8-TestSuite's graphical user interface.",
               "suffix": "Test GUI Change"
            },
            "test_gui_feat": {
               "description": "Related to features in VoteM8-TestSuite's graphical user interface.",
               "suffix": "Test GUI Feat"
            },
            "test_gui_fix": {
               "description": "Related to fixes in VoteM8-TestSuite's graphical user interface.",
               "suffix": "Test GUI Fix"
            },
            "test_setup_fix": {
               "description": "Related to fixes in VoteM8-TestSuite's installation.",
               "suffix": "Test Setup Fix"
            }
         },
         "prefix": "subtype: "
      },
      "type": {
         "color": "#A00000",
         "label": {
            "internal": {
               "description": "Internal project changes.",
               "suffix": "Internal"
            },
            "major": {
               "description": "New major release containing breaking changes.",
               "suffix": "Major Release"
            },
            "minor": {
               "description": "New minor release containing backward-compatible new features and improvements.",
               "suffix": "Minor Release"
            },
            "patch": {
               "description": "New patch release containing backward-compatible bug fixes.",
               "suffix": "Patch Release"
            },
            "post": {
               "description": "New post-release containing non-API related changes.",
               "suffix": "Post Release"
            }
         },
         "prefix": "type: "
      },
      "version": {
         "color": "#0366d6",
         "description": "Related to this specific version of the package.",
         "prefix": "Version: "
      }
   },
   "license": {
      "component": {
         "MIT": {
            "alts": {
               "copyrightHolder": {
                  "match": ".+",
                  "text": "THE AUTHORS OR COPYRIGHT HOLDERS"
               },
               "software": {
                  "match": "this\\s+software\\s+and\\s+associated\\s+documentation\\s+files|this\\s+source\\s+file",
                  "text": "this software and\n         associated documentation files"
               }
            },
            "comments": "",
            "custom": false,
            "deprecated": false,
            "fsf_libre": true,
            "header_xml": "",
            "id": "MIT",
            "name": "MIT License",
            "obsoleted_by": [],
            "optionals": [
               "<?xml version='1.0' encoding='utf-8'?>\n<ns0:optional xmlns:ns0=\"http://www.spdx.org/license\">(including the next paragraph)</ns0:optional>"
            ],
            "osi_approved": true,
            "path": {
               "header_plain": "",
               "text_plain": "LICENSE-MIT.md"
            },
            "reference_num": 601,
            "text_xml": "<?xml version='1.0' encoding='utf-8'?>\n<ns0:text xmlns:ns0=\"http://www.spdx.org/license\">\n      <ns0:titleText>\n         <ns0:p>MIT License</ns0:p>\n      </ns0:titleText>\n      <ns0:copyrightText>\n         <ns0:p>Copyright (c) &lt;year&gt; &lt;copyright holders&gt;\n         </ns0:p>\n      </ns0:copyrightText>\n\n      <ns0:p>Permission is hereby granted, free of charge, to any person obtaining a copy of <ns0:alt match=\"this\\s+software\\s+and\\s+associated\\s+documentation\\s+files|this\\s+source\\s+file\" name=\"software\">this software and\n         associated documentation files</ns0:alt> (the \"Software\"), to deal in the Software without restriction,\n         including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,\n         and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,\n         subject to the following conditions:</ns0:p>\n      <ns0:p>The above copyright notice and this permission notice\n         <ns0:optional>(including the next paragraph)</ns0:optional>\n         shall be included in all copies or substantial\n         portions of the Software.</ns0:p>\n      <ns0:p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT\n         LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n         NO EVENT SHALL <ns0:alt match=\".+\" name=\"copyrightHolder\">THE AUTHORS OR COPYRIGHT HOLDERS</ns0:alt> BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n         WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n         SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</ns0:p>\n    </ns0:text>",
            "trove_classifier": "License :: OSI Approved :: MIT License",
            "type": "license",
            "url": {
               "cross_refs": [
                  "https://opensource.org/license/mit/"
               ],
               "json": "https://spdx.org/licenses/MIT.json",
               "reference": "https://spdx.org/licenses/MIT.html",
               "repo_header_plain": "",
               "repo_text_plain": "https://github.com/DrugBud-Suite/VoteM8/blob/main/LICENSE-MIT.md"
            },
            "version_added": "",
            "version_deprecated": ""
         }
      },
      "config": {
         "header": {
            "plain": {
               "alts": {
                  "author": "DrugM8",
                  "contributor": "DrugM8",
                  "copyright": "\u00a9 2024 DrugM8",
                  "copyrightHolder0": "DrugM8",
                  "copyrightHolder1": "DrugM8",
                  "copyrightHolder2": "DrugM8",
                  "copyrightHolder3": "DrugM8",
                  "copyrightHolderAsIs": "DrugM8",
                  "copyrightHolderLiability": "DrugM8",
                  "creator": "DrugM8",
                  "description": "VoteM8",
                  "email": "mailto:alacournola+drugbud@gmail.com",
                  "initialDeveloper": "DrugM8",
                  "maintainer": "DrugM8",
                  "organization": "DrugM8",
                  "owner": "DrugM8",
                  "softwareName": "VoteM8",
                  "softwareVersion": "0.0.0",
                  "version": "0.0.0"
               },
               "bullet": 1,
               "copyright_notice": "\u00a9 2024 DrugM8",
               "item_indent": 1,
               "item_spacing": 1,
               "line_breaks": 2,
               "line_length": 88,
               "list_indent": 0,
               "subtitle_underline": "-",
               "title": true,
               "title_centered": false,
               "title_underline": "=",
               "title_underline_full": false
            }
         },
         "text": {
            "plain": {
               "alts": {
                  "author": "DrugM8",
                  "contributor": "DrugM8",
                  "copyright": "\u00a9 2024 DrugM8",
                  "copyrightHolder0": "DrugM8",
                  "copyrightHolder1": "DrugM8",
                  "copyrightHolder2": "DrugM8",
                  "copyrightHolder3": "DrugM8",
                  "copyrightHolderAsIs": "DrugM8",
                  "copyrightHolderLiability": "DrugM8",
                  "creator": "DrugM8",
                  "description": "VoteM8",
                  "email": "mailto:alacournola+drugbud@gmail.com",
                  "initialDeveloper": "DrugM8",
                  "maintainer": "DrugM8",
                  "organization": "DrugM8",
                  "owner": "DrugM8",
                  "softwareName": "VoteM8",
                  "softwareVersion": "0.0.0",
                  "version": "0.0.0"
               },
               "bullet": 1,
               "copyright_notice": "\u00a9 2024 DrugM8",
               "item_indent": 1,
               "item_spacing": 1,
               "line_breaks": 2,
               "line_length": 88,
               "list_indent": 0,
               "subtitle_underline": "-",
               "title": true,
               "title_centered": false,
               "title_underline": "=",
               "title_underline_full": false
            }
         }
      },
      "expression": "MIT",
      "header": "\u00a9 2024 DrugM8\nSPDX-License-Identifier: MIT\n",
      "path": {
         "headers_plain": [],
         "texts_plain": [
            "LICENSE-MIT.md"
         ]
      }
   },
   "local": {
      "cache": {
         "path": ".local/cache"
      },
      "report": {
         "path": ".local/report"
      }
   },
   "maintainer": {
      "code_of_conduct": "owner",
      "code_owners": {
         "entries": [
            {
               "glob": "*",
               "owners": [
                  "owner"
               ]
            }
         ],
         "path": ".github/CODEOWNERS",
         "url": "https://github.com/DrugBud-Suite/VoteM8/blob/main/.github/CODEOWNERS"
      },
      "discussion": {
         "announcements": [
            "owner"
         ],
         "general": [
            "owner"
         ],
         "ideas": [
            "owner"
         ],
         "polls": [
            "owner"
         ],
         "q-a": [
            "owner"
         ],
         "question_issues": [
            "owner"
         ],
         "show-and-tell": [
            "owner"
         ]
      },
      "issue": {
         "config": {
            "pull": [
               "owner"
            ],
            "ticket": [
               "owner"
            ]
         },
         "devops": {
            "pull": [
               "owner"
            ],
            "ticket": [
               "owner"
            ]
         },
         "doc_change": {
            "pull": [
               "owner"
            ],
            "ticket": [
               "owner"
            ]
         },
         "doc_feat": {
            "pull": [
               "owner"
            ],
            "ticket": [
               "owner"
            ]
         },
         "doc_fix": {
            "pull": [
               "owner"
            ],
            "ticket": [
               "owner"
            ]
         },
         "maintenance": {
            "pull": [
               "owner"
            ],
            "ticket": [
               "owner"
            ]
         },
         "pkg_api_change": {
            "pull": [
               "owner"
            ],
            "ticket": [
               "owner"
            ]
         },
         "pkg_api_feat": {
            "pull": [
               "owner"
            ],
            "ticket": [
               "owner"
            ]
         },
         "pkg_api_fix": {
            "pull": [
               "owner"
            ],
            "ticket": [
               "owner"
            ]
         },
         "pkg_cli_change": {
            "pull": [
               "owner"
            ],
            "ticket": [
               "owner"
            ]
         },
         "pkg_cli_feat": {
            "pull": [
               "owner"
            ],
            "ticket": [
               "owner"
            ]
         },
         "pkg_cli_fix": {
            "pull": [
               "owner"
            ],
            "ticket": [
               "owner"
            ]
         },
         "pkg_gui_change": {
            "pull": [
               "owner"
            ],
            "ticket": [
               "owner"
            ]
         },
         "pkg_gui_feat": {
            "pull": [
               "owner"
            ],
            "ticket": [
               "owner"
            ]
         },
         "pkg_gui_fix": {
            "pull": [
               "owner"
            ],
            "ticket": [
               "owner"
            ]
         },
         "pkg_setup_fix": {
            "pull": [
               "owner"
            ],
            "ticket": [
               "owner"
            ]
         },
         "refactor": {
            "pull": [
               "owner"
            ],
            "ticket": [
               "owner"
            ]
         },
         "test_api_change": {
            "pull": [
               "owner"
            ],
            "ticket": [
               "owner"
            ]
         },
         "test_api_feat": {
            "pull": [
               "owner"
            ],
            "ticket": [
               "owner"
            ]
         },
         "test_api_fix": {
            "pull": [
               "owner"
            ],
            "ticket": [
               "owner"
            ]
         },
         "test_cli_change": {
            "pull": [
               "owner"
            ],
            "ticket": [
               "owner"
            ]
         },
         "test_cli_feat": {
            "pull": [
               "owner"
            ],
            "ticket": [
               "owner"
            ]
         },
         "test_cli_fix": {
            "pull": [
               "owner"
            ],
            "ticket": [
               "owner"
            ]
         },
         "test_gui_change": {
            "pull": [
               "owner"
            ],
            "ticket": [
               "owner"
            ]
         },
         "test_gui_feat": {
            "pull": [
               "owner"
            ],
            "ticket": [
               "owner"
            ]
         },
         "test_gui_fix": {
            "pull": [
               "owner"
            ],
            "ticket": [
               "owner"
            ]
         },
         "test_setup_fix": {
            "pull": [
               "owner"
            ],
            "ticket": [
               "owner"
            ]
         }
      },
      "security": "owner",
      "support": "owner"
   },
   "name": "VoteM8",
   "pkg": {
      "authors": [
         "owner"
      ],
      "build": {
         "backend": "setuptools.build_meta",
         "requires": [
            "setuptools >= 72.1.0",
            "versioningit >= 3.1.2"
         ],
         "tool": {
            "setuptools": {
               "cmdclass": {
                  "build_py": "versioningit.cmdclass.build_py",
                  "sdist": "versioningit.cmdclass.sdist"
               },
               "include-package-data": true,
               "license-files": [
                  "LICENSES/*",
                  "COPYRIGHTS/*"
               ],
               "packages": {
                  "find": {
                     "namespaces": true,
                     "where": [
                        "src"
                     ]
                  }
               }
            },
            "versioningit": {
               "format": {
                  "dirty": "{base_version}+0.{committer_date:%Y.%m.%d}.{rev}.dirty",
                  "distance": "{base_version}+{distance}.{committer_date:%Y.%m.%d}.{rev}",
                  "distance-dirty": "{base_version}+{distance}.{committer_date:%Y.%m.%d}.{rev}.dirty"
               },
               "onbuild": {
                  "build-file": "votem8/__init__.py",
                  "method": "replace-version",
                  "regex": "^__version_details__: dict\\[str, str\\] = (?P<version>.*)",
                  "replacement": "{{\n    \"version\": \"{version}\",\n    \"build_date\": \"{build_date:%Y.%m.%d}\",\n    \"committer_date\": \"{committer_date:%Y.%m.%d}\",\n    \"author_date\": \"{author_date:%Y.%m.%d}\",\n    \"branch\": \"{branch}\",\n    \"distance\": \"{distance}\",\n    \"commit_hash\": \"{revision}\",\n}}\n",
                  "require-match": true,
                  "source-file": "src/votem8/__init__.py"
               },
               "tag2version": {
                  "rmprefix": "ver/"
               },
               "vcs": {
                  "default-tag": "ver/0.0.0",
                  "match": [
                     "ver/[0-9]*.[0-9]*.[0-9]*"
                  ],
                  "method": "git"
               }
            }
         }
      },
      "classifiers": [
         "Operating System :: OS Independent",
         "Programming Language :: Python :: 3 :: Only",
         "Programming Language :: Python :: 3.10",
         "Programming Language :: Python :: 3.11",
         "Programming Language :: Python :: 3.12",
         "Programming Language :: Python :: 3.13",
         "Typing :: Typed",
         "Development Status :: 1 - Planning"
      ],
      "dependency": {
         "core": {
            "pkg_resources": {
               "description": "Handling package resources, such as accessing data files that are\ndistributed with the package.\n",
               "import_name": "pkgdata",
               "name": "PkgData",
               "pip": {
                  "spec": "pkgdata"
               },
               "url": {
                  "docs": "https://pkgdata.repodynamics.com/",
                  "source": "https://github.com/repodynamics/pkgdata"
               }
            }
         },
         "env": {
            "conda": {
               "name": "votem8",
               "path": "pkg/conda_env.yaml"
            },
            "pip": {
               "path": "pkg/requirements.txt"
            }
         }
      },
      "description": "VoteM8 - A Python package for consensus scoring",
      "entry": {
         "cli": {
            "main": {
               "description": "Main CLI entry of the package.",
               "name": "VoteM8",
               "ref": "votem8:__main__"
            }
         },
         "python": {
            "main": {
               "description": "Main Python API entry of the package.",
               "name": "votem8",
               "ref": "votem8:__init__"
            }
         }
      },
      "file": {
         "__init__.py": {
            "docstring": "VoteM8: VoteM8 - A Python package for consensus scoring.\n\nVoteM8 is a Python library for consensus scoring and ranking of multi-criteria data. It implements multiple scoring methods including ECR, RbR, TOPSIS, VIKOR and others to combine different evaluation metrics into unified rankings. The library supports customizable weights, handles missing values, and provides both normalization and aggregation options. It includes a command-line interface and can process both CSV and SDF file formats, making it particularly useful for processing molecular docking scores and other scientific data requiring consensus analysis.\n\n\u00a9 2024 DrugM8\nSPDX-License-Identifier: MIT\n\n"
         }
      },
      "import_name": "votem8",
      "keywords": [
         "consensus",
         "scoring",
         "molecular docking",
         "protein-ligand scoring",
         "virtual screening"
      ],
      "license": "MIT",
      "manifest": [
         "graft src/votem8/data",
         "include src/votem8/py.typed",
         "global-exclude *.py[cod] __pycache__ *.so"
      ],
      "name": "VoteM8",
      "os": {
         "linux": {
            "name": "Linux",
            "runner": "ubuntu-latest"
         },
         "macos": {
            "name": "MacOS",
            "runner": "macos-latest"
         },
         "windows": {
            "name": "Windows",
            "runner": "windows-latest"
         }
      },
      "os_independent": true,
      "path": {
         "import": "pkg/src/votem8",
         "root": "pkg",
         "source": "pkg/src",
         "source_rel": "src"
      },
      "pypi": {
         "url": {
            "home": "https://pypi.org/project/VoteM8"
         }
      },
      "python": {
         "implementation": "cpython",
         "pure": true,
         "version": {
            "micros": [
               "3.10.0",
               "3.10.1",
               "3.10.2",
               "3.10.3",
               "3.10.4",
               "3.10.5",
               "3.10.6",
               "3.10.7",
               "3.10.8",
               "3.10.9",
               "3.10.10",
               "3.10.11",
               "3.10.12",
               "3.10.13",
               "3.10.14",
               "3.10.15",
               "3.11.0",
               "3.11.1",
               "3.11.2",
               "3.11.3",
               "3.11.4",
               "3.11.5",
               "3.11.6",
               "3.11.7",
               "3.11.8",
               "3.11.9",
               "3.11.10",
               "3.12.0",
               "3.12.1",
               "3.12.2",
               "3.12.3",
               "3.12.4",
               "3.12.5",
               "3.12.6",
               "3.12.7",
               "3.13.0"
            ],
            "minors": [
               "3.10",
               "3.11",
               "3.12",
               "3.13"
            ],
            "pyxy": [
               "py310",
               "py311",
               "py312",
               "py313"
            ],
            "spec": ">= 3.10"
         }
      },
      "readme": {
         "content": {
            "body": [
               {
                  "align": "center",
                  "alt": "VoteM8: VoteM8 - A Python package for consensus scoring",
                  "class": "block_image",
                  "link": "https://DrugBud-Suite.github.io/VoteM8",
                  "src": "https://raw.githubusercontent.com/DrugBud-Suite/VoteM8/main/docs/website/source/_media/logo/full_light.svg",
                  "src_dark": "https://raw.githubusercontent.com/DrugBud-Suite/VoteM8/main/docs/website/source/_media/logo/full_dark.svg",
                  "title": "Welcome to VoteM8! Click to visit our website and learn more.",
                  "width": "80%"
               },
               {
                  "attrs_container": {
                     "align": "center"
                  },
                  "class": "menu",
                  "color": "#992D72",
                  "color_dark": "#9D41A1",
                  "height": "33px",
                  "items": [
                     {
                        "link": "https://DrugBud-Suite.github.io/VoteM8/intro",
                        "text": "Intro",
                        "title": "Introduction and Background"
                     },
                     {
                        "link": "https://DrugBud-Suite.github.io/VoteM8/manual",
                        "text": "Manual",
                        "title": "User Manual"
                     },
                     {
                        "link": "https://DrugBud-Suite.github.io/VoteM8/news",
                        "text": "News",
                        "title": "Latest News and Releases"
                     },
                     {
                        "link": "https://DrugBud-Suite.github.io/VoteM8/contribute",
                        "text": "Contribute",
                        "title": "How to Contribute"
                     },
                     {
                        "link": "https://DrugBud-Suite.github.io/VoteM8/about",
                        "text": "About",
                        "title": "About the Project"
                     },
                     {
                        "link": "https://DrugBud-Suite.github.io/VoteM8/help",
                        "text": "Help",
                        "title": "Get Help and Support"
                     }
                  ],
                  "line_bottom_width": "100%",
                  "line_top_width": "80%",
                  "style": "for-the-badge"
               },
               {
                  "attrs": {
                     "align": "justify"
                  },
                  "class": "paragraph",
                  "content": "VoteM8 is a Python library for consensus scoring and ranking of multi-criteria data. It implements multiple scoring methods including ECR, RbR, TOPSIS, VIKOR and others to combine different evaluation metrics into unified rankings. The library supports customizable weights, handles missing values, and provides both normalization and aggregation options. It includes a command-line interface and can process both CSV and SDF file formats, making it particularly useful for processing molecular docking scores and other scientific data requiring consensus analysis."
               },
               [
                  {
                     "class": "button",
                     "color": "#992D72",
                     "color_dark": "#9D41A1",
                     "height": "15px",
                     "style": "plastic",
                     "text": "Keywords: "
                  },
                  "&nbsp;&nbsp;",
                  {
                     "class": "buttons",
                     "color": [
                        "#992D72",
                        "#2F2F2F"
                     ],
                     "color_dark": [
                        "#9D41A1",
                        "#2F2F2F"
                     ],
                     "height": "15px",
                     "items": [
                        "consensus",
                        "scoring",
                        "molecular docking",
                        "protein-ligand scoring",
                        "virtual screening"
                     ]
                  }
               ],
               {
                  "attrs_container": {
                     "align": "center"
                  },
                  "class": "menu",
                  "color": "#2F2F2F",
                  "color_dark": "#2F2F2F",
                  "height": "33px",
                  "items": [
                     {
                        "link": "https://DrugBud-Suite.github.io/VoteM8/intro/overview",
                        "text": "Overview",
                        "title": "Project Overview"
                     },
                     {
                        "link": "https://DrugBud-Suite.github.io/VoteM8/manual/install",
                        "text": "Install",
                        "title": "Installation Instructions"
                     },
                     {
                        "link": "https://DrugBud-Suite.github.io/VoteM8/news/list/category/release",
                        "text": "Releases",
                        "title": "Release Notes and Changelogs"
                     },
                     {
                        "link": "https://DrugBud-Suite.github.io/VoteM8/about/contact",
                        "text": "Contact",
                        "title": "Contact Information"
                     }
                  ],
                  "line_bottom_width": "80%",
                  "line_top_width": "100%",
                  "style": "for-the-badge"
               },
               "<br>"
            ],
            "section": [
               {
                  "body": [
                     {
                        "attrs_p": {
                           "align": "justify"
                        },
                        "button": {
                           "align": "left",
                           "color": [
                              "#992D72",
                              "#2F2F2F"
                           ],
                           "color_dark": [
                              "#9D41A1",
                              "#2F2F2F"
                           ],
                           "height": "30px",
                           "style": "for-the-badge"
                        },
                        "class": "highlights",
                        "items": [
                           {
                              "description": "Implements 12 different consensus scoring methods including ECR, RbR, TOPSIS, VIKOR, and Pareto rankings. Each method can be used individually or combined for robust consensus analysis of complex datasets.",
                              "title": "Multiple Consensus Methods"
                           },
                           {
                              "description": "Handles both CSV and SDF file formats with built-in missing value strategies, customizable weights, and normalization options. Supports aggregation methods and weighted criteria to adapt to different analysis needs.",
                              "title": "Flexible Data Processing"
                           },
                           {
                              "description": "Provides an intuitive CLI for rapid analysis without coding. Users can specify methods, columns, weights, and other parameters directly from the command line, making it accessible for both programmers and non-programmers.",
                              "title": "Command-Line Interface"
                           }
                        ]
                     }
                  ],
                  "heading": "Highlights"
               }
            ]
         },
         "path": "pkg/README.md",
         "url": "https://github.com/DrugBud-Suite/VoteM8/blob/main/pkg/README.md"
      },
      "typed": true,
      "urls": {
         "Documentation": "https://DrugBud-Suite.github.io/VoteM8/manual",
         "Download": "https://github.com/DrugBud-Suite/VoteM8/releases",
         "Homepage": "https://DrugBud-Suite.github.io/VoteM8",
         "Issue-Tracker": "https://github.com/DrugBud-Suite/VoteM8/issues",
         "News": "https://DrugBud-Suite.github.io/VoteM8/news",
         "Source": "https://github.com/DrugBud-Suite/VoteM8"
      }
   },
   "project": {
      "api_names": [],
      "branches": [
         "main"
      ],
      "cli_names": [
         "VoteM8"
      ],
      "file": {
         "config": {
            "citation": "CITATION.cff",
            "codeowners": ".github/CODEOWNERS",
            "gitattributes": ".gitattributes",
            "gitignore": ".gitignore",
            "issue_chooser": ".github/ISSUE_TEMPLATE/config.yml",
            "license_MIT_plain_text": "LICENSE-MIT.md",
            "meta": ".github/.control/.metadata.json"
         },
         "discussion_form": {
            "question_issues": ".github/DISCUSSION_TEMPLATE/question_issues.yaml"
         },
         "health": {
            "code_of_conduct": "CODE_OF_CONDUCT.md",
            "contributing": "CONTRIBUTING.md",
            "security": "SECURITY.md"
         },
         "issue_form": {
            "01_pkg_api_fix": ".github/ISSUE_TEMPLATE/01_pkg_api_fix.yaml",
            "02_pkg_cli_fix": ".github/ISSUE_TEMPLATE/02_pkg_cli_fix.yaml",
            "04_pkg_setup_fix": ".github/ISSUE_TEMPLATE/04_pkg_setup_fix.yaml",
            "05_pkg_api_feat": ".github/ISSUE_TEMPLATE/05_pkg_api_feat.yaml",
            "06_pkg_cli_feat": ".github/ISSUE_TEMPLATE/06_pkg_cli_feat.yaml",
            "08_pkg_api_change": ".github/ISSUE_TEMPLATE/08_pkg_api_change.yaml",
            "09_pkg_cli_change": ".github/ISSUE_TEMPLATE/09_pkg_cli_change.yaml",
            "11_doc_fix": ".github/ISSUE_TEMPLATE/11_doc_fix.yaml",
            "12_doc_feat": ".github/ISSUE_TEMPLATE/12_doc_feat.yaml",
            "13_doc_change": ".github/ISSUE_TEMPLATE/13_doc_change.yaml",
            "14_test_api_fix": ".github/ISSUE_TEMPLATE/14_test_api_fix.yaml",
            "15_test_cli_fix": ".github/ISSUE_TEMPLATE/15_test_cli_fix.yaml",
            "17_test_setup_fix": ".github/ISSUE_TEMPLATE/17_test_setup_fix.yaml",
            "18_test_api_feat": ".github/ISSUE_TEMPLATE/18_test_api_feat.yaml",
            "19_test_cli_feat": ".github/ISSUE_TEMPLATE/19_test_cli_feat.yaml",
            "21_test_api_change": ".github/ISSUE_TEMPLATE/21_test_api_change.yaml",
            "22_test_cli_change": ".github/ISSUE_TEMPLATE/22_test_cli_change.yaml",
            "24_refactor": ".github/ISSUE_TEMPLATE/24_refactor.yaml",
            "25_config": ".github/ISSUE_TEMPLATE/25_config.yaml",
            "26_devops": ".github/ISSUE_TEMPLATE/26_devops.yaml",
            "27_maintenance": ".github/ISSUE_TEMPLATE/27_maintenance.yaml"
         },
         "pkg_config": {
            "env_conda": "pkg/conda_env.yaml",
            "env_pip": "pkg/requirements.txt",
            "manifest": "pkg/MANIFEST.in",
            "pyproject": "pkg/pyproject.toml",
            "readme_pypi": "pkg/README.md",
            "typed": "pkg/src/votem8/py.typed"
         },
         "pkg_source": {
            "votem8/__init__.py": "pkg/src/votem8/__init__.py",
            "votem8/__main__.py": "pkg/src/votem8/__main__.py",
            "votem8/data/__init__.py": "pkg/src/votem8/data/__init__.py",
            "votem8/exception/__init__.py": "pkg/src/votem8/exception/__init__.py",
            "votem8/exception/data.py": "pkg/src/votem8/exception/data.py",
            "votem8/methods/__init__.py": "pkg/src/votem8/methods/__init__.py",
            "votem8/methods/aras.py": "pkg/src/votem8/methods/aras.py",
            "votem8/methods/binary_pareto.py": "pkg/src/votem8/methods/binary_pareto.py",
            "votem8/methods/comet.py": "pkg/src/votem8/methods/comet.py",
            "votem8/methods/ecr.py": "pkg/src/votem8/methods/ecr.py",
            "votem8/methods/pareto.py": "pkg/src/votem8/methods/pareto.py",
            "votem8/methods/promethee.py": "pkg/src/votem8/methods/promethee.py",
            "votem8/methods/rbr.py": "pkg/src/votem8/methods/rbr.py",
            "votem8/methods/rbv.py": "pkg/src/votem8/methods/rbv.py",
            "votem8/methods/topsis.py": "pkg/src/votem8/methods/topsis.py",
            "votem8/methods/vikor.py": "pkg/src/votem8/methods/vikor.py",
            "votem8/methods/waspas.py": "pkg/src/votem8/methods/waspas.py",
            "votem8/methods/wpm.py": "pkg/src/votem8/methods/wpm.py",
            "votem8/methods/wsm.py": "pkg/src/votem8/methods/wsm.py",
            "votem8/methods/zscore.py": "pkg/src/votem8/methods/zscore.py",
            "votem8/utils/__init__.py": "pkg/src/votem8/utils/__init__.py",
            "votem8/utils/utils.py": "pkg/src/votem8/utils/utils.py",
            "votem8/votem8.py": "pkg/src/votem8/votem8.py"
         },
         "pull_template": {
            "default": ".github/pull_request_template.md"
         },
         "readme": {
            "main": "README.md"
         },
         "test_config": {
            "env_conda": "tests/conda_env.yaml",
            "env_pip": "tests/requirements.txt",
            "manifest": "tests/MANIFEST.in",
            "pyproject": "tests/pyproject.toml",
            "typed": "tests/src/votem8_testsuite/py.typed"
         },
         "test_source": {
            "votem8_testsuite/__init__.py": "tests/src/votem8_testsuite/__init__.py",
            "votem8_testsuite/__main__.py": "tests/src/votem8_testsuite/__main__.py",
            "votem8_testsuite/data_tests.py": "tests/src/votem8_testsuite/data_tests.py"
         },
         "tool_config": {
            "codecov": ".github/.codecov.yml",
            "coverage": "tests/src/votem8_testsuite/data/config/coverage.toml",
            "mypy": ".github/.mypy.toml",
            "pre-commit": ".github/.pre-commit-config.yaml",
            "pytest": "tests/src/votem8_testsuite/data/config/pytest.toml",
            "readthedocs": ".readthedocs.yaml",
            "ruff": ".github/.ruff.toml"
         },
         "tool_env_conda": {
            "pre-commit_pylint_mypy": ".github/dev_environment.yaml"
         },
         "tool_env_pip": {
            "mypy": ".github/workflow_requirements/mypy.txt",
            "pylint": ".github/workflow_requirements/pylint.txt"
         },
         "web_config": {
            "env_conda": "docs/website/environment.yaml",
            "toc": "docs/website/source/.toc.yaml"
         }
      },
      "gui_names": [],
      "has_scripts": true,
      "interfaces": [
         "PYTHON_API",
         "API",
         "GUI",
         "CLI"
      ],
      "os_names": [
         "Linux",
         "MacOS",
         "Windows"
      ],
      "package_managers": [
         "pip"
      ],
      "python_api_names": [
         "votem8"
      ],
      "python_versions": [
         "3.13",
         "3.12",
         "3.11",
         "3.10"
      ],
      "test_cli_names": [
         "VoteM8-TestSuite"
      ],
      "test_gui_names": [],
      "test_python_api_names": [
         "votem8_testsuite"
      ],
      "version": {
         "0.0.0": {
            "api_names": [],
            "branch": "main",
            "cli_names": [
               "VoteM8"
            ],
            "gui_names": [],
            "os_names": [
               "Linux",
               "MacOS",
               "Windows"
            ],
            "package_managers": [
               "pip"
            ],
            "python_api_names": [
               "votem8"
            ],
            "python_versions": [
               "3.10",
               "3.11",
               "3.12",
               "3.13"
            ],
            "test_cli_names": [
               "VoteM8-TestSuite"
            ],
            "test_gui_names": [],
            "test_python_api_names": [
               "votem8_testsuite"
            ]
         }
      },
      "versions": [
         "0.0.0"
      ]
   },
   "pull": {
      "template": {
         "default": "## Description\nProvide a brief description of the PR's purpose here.\n\n## Content\nNotable points that this PR has either accomplished or will accomplish.\n- [ ] TODO 1\n\n## Questions\n- [ ] Question1\n\n## Status\n - [ ] Tests\n - [ ] Docs\n - [ ] CHANGELOG updated\n - [ ] Issue raised/referenced\n - [ ] Ready to merge\n"
      }
   },
   "readme": {
      "main": {
         "content": {
            "body": [
               {
                  "align": "center",
                  "alt": "VoteM8: VoteM8 - A Python package for consensus scoring",
                  "class": "block_image",
                  "link": "https://DrugBud-Suite.github.io/VoteM8",
                  "src": "https://raw.githubusercontent.com/DrugBud-Suite/VoteM8/main/docs/website/source/_media/logo/full_light.svg",
                  "src_dark": "https://raw.githubusercontent.com/DrugBud-Suite/VoteM8/main/docs/website/source/_media/logo/full_dark.svg",
                  "title": "Welcome to VoteM8! Click to visit our website and learn more.",
                  "width": "80%"
               },
               {
                  "attrs_container": {
                     "align": "center"
                  },
                  "class": "menu",
                  "color": "#992D72",
                  "color_dark": "#9D41A1",
                  "height": "33px",
                  "items": [
                     {
                        "link": "https://DrugBud-Suite.github.io/VoteM8/intro",
                        "text": "Intro",
                        "title": "Introduction and Background"
                     },
                     {
                        "link": "https://DrugBud-Suite.github.io/VoteM8/manual",
                        "text": "Manual",
                        "title": "User Manual"
                     },
                     {
                        "link": "https://DrugBud-Suite.github.io/VoteM8/news",
                        "text": "News",
                        "title": "Latest News and Releases"
                     },
                     {
                        "link": "https://DrugBud-Suite.github.io/VoteM8/contribute",
                        "text": "Contribute",
                        "title": "How to Contribute"
                     },
                     {
                        "link": "https://DrugBud-Suite.github.io/VoteM8/about",
                        "text": "About",
                        "title": "About the Project"
                     },
                     {
                        "link": "https://DrugBud-Suite.github.io/VoteM8/help",
                        "text": "Help",
                        "title": "Get Help and Support"
                     }
                  ],
                  "line_bottom_width": "100%",
                  "line_top_width": "80%",
                  "style": "for-the-badge"
               },
               {
                  "attrs": {
                     "align": "justify"
                  },
                  "class": "paragraph",
                  "content": "VoteM8 is a Python library for consensus scoring and ranking of multi-criteria data. It implements multiple scoring methods including ECR, RbR, TOPSIS, VIKOR and others to combine different evaluation metrics into unified rankings. The library supports customizable weights, handles missing values, and provides both normalization and aggregation options. It includes a command-line interface and can process both CSV and SDF file formats, making it particularly useful for processing molecular docking scores and other scientific data requiring consensus analysis."
               },
               [
                  {
                     "class": "button",
                     "color": "#992D72",
                     "color_dark": "#9D41A1",
                     "height": "15px",
                     "style": "plastic",
                     "text": "Keywords: "
                  },
                  "&nbsp;&nbsp;",
                  {
                     "class": "buttons",
                     "color": [
                        "#992D72",
                        "#2F2F2F"
                     ],
                     "color_dark": [
                        "#9D41A1",
                        "#2F2F2F"
                     ],
                     "height": "15px",
                     "items": [
                        "consensus",
                        "scoring",
                        "molecular docking",
                        "protein-ligand scoring",
                        "virtual screening"
                     ]
                  }
               ],
               {
                  "attrs_container": {
                     "align": "center"
                  },
                  "class": "menu",
                  "color": "#2F2F2F",
                  "color_dark": "#2F2F2F",
                  "height": "33px",
                  "items": [
                     {
                        "link": "https://DrugBud-Suite.github.io/VoteM8/intro/overview",
                        "text": "Overview",
                        "title": "Project Overview"
                     },
                     {
                        "link": "https://DrugBud-Suite.github.io/VoteM8/manual/install",
                        "text": "Install",
                        "title": "Installation Instructions"
                     },
                     {
                        "link": "https://DrugBud-Suite.github.io/VoteM8/news/list/category/release",
                        "text": "Releases",
                        "title": "Release Notes and Changelogs"
                     },
                     {
                        "link": "https://DrugBud-Suite.github.io/VoteM8/about/contact",
                        "text": "Contact",
                        "title": "Contact Information"
                     }
                  ],
                  "line_bottom_width": "80%",
                  "line_top_width": "100%",
                  "style": "for-the-badge"
               },
               "<br>"
            ],
            "section": [
               {
                  "body": [
                     {
                        "attrs_p": {
                           "align": "justify"
                        },
                        "button": {
                           "align": "left",
                           "color": [
                              "#992D72",
                              "#2F2F2F"
                           ],
                           "color_dark": [
                              "#9D41A1",
                              "#2F2F2F"
                           ],
                           "height": "30px",
                           "style": "for-the-badge"
                        },
                        "class": "highlights",
                        "items": [
                           {
                              "description": "Implements 12 different consensus scoring methods including ECR, RbR, TOPSIS, VIKOR, and Pareto rankings. Each method can be used individually or combined for robust consensus analysis of complex datasets.",
                              "title": "Multiple Consensus Methods"
                           },
                           {
                              "description": "Handles both CSV and SDF file formats with built-in missing value strategies, customizable weights, and normalization options. Supports aggregation methods and weighted criteria to adapt to different analysis needs.",
                              "title": "Flexible Data Processing"
                           },
                           {
                              "description": "Provides an intuitive CLI for rapid analysis without coding. Users can specify methods, columns, weights, and other parameters directly from the command line, making it accessible for both programmers and non-programmers.",
                              "title": "Command-Line Interface"
                           }
                        ]
                     }
                  ],
                  "heading": "Highlights"
               }
            ]
         },
         "path": "README.md",
         "url": "https://github.com/DrugBud-Suite/VoteM8/blob/main/README.md"
      }
   },
   "repo": {
      "allow_auto_merge": false,
      "allow_merge_commit": true,
      "allow_rebase_merge": true,
      "allow_squash_merge": true,
      "allow_update_branch": true,
      "archived": false,
      "automated_security_fixes": true,
      "created_at": "2024-10-30",
      "default_branch": "main",
      "delete_branch_on_merge": true,
      "description": "VoteM8 - A Python package for consensus scoring",
      "full_name": "DrugBud-Suite/VoteM8",
      "gitattributes": [
         {
            "*": [
               "text=auto"
            ]
         },
         {
            ".gitattributes": [
               "text",
               "export-ignore"
            ]
         },
         {
            ".gitignore": [
               "text",
               "export-ignore"
            ]
         },
         {
            "AUTHORS": [
               "text"
            ]
         },
         {
            "CHANGELOG": [
               "text"
            ]
         },
         {
            "CHANGES": [
               "text"
            ]
         },
         {
            "CODEOWNERS": [
               "text"
            ]
         },
         {
            "CONTRIBUTING": [
               "text"
            ]
         },
         {
            "COPYING": [
               "text"
            ]
         },
         {
            "copyright": [
               "text"
            ]
         },
         {
            "*COPYRIGHT*": [
               "text"
            ]
         },
         {
            "INSTALL": [
               "text"
            ]
         },
         {
            "license": [
               "text"
            ]
         },
         {
            "LICENSE": [
               "text"
            ]
         },
         {
            "Makefile": [
               "text"
            ]
         },
         {
            "NEWS": [
               "text"
            ]
         },
         {
            "readme": [
               "text"
            ]
         },
         {
            "*README*": [
               "text"
            ]
         },
         {
            "TODO": [
               "text"
            ]
         },
         {
            "MANIFEST.in": [
               "text"
            ]
         },
         {
            "*.typed": [
               "text"
            ]
         },
         {
            "*.bibtex": [
               "text",
               "diff=bibtex"
            ]
         },
         {
            "*.doc": [
               "diff=astextplain"
            ]
         },
         {
            "*.DOC": [
               "diff=astextplain"
            ]
         },
         {
            "*.docx": [
               "diff=astextplain"
            ]
         },
         {
            "*.DOCX": [
               "diff=astextplain"
            ]
         },
         {
            "*.dot": [
               "diff=astextplain"
            ]
         },
         {
            "*.DOT": [
               "diff=astextplain"
            ]
         },
         {
            "*.pdf": [
               "diff=astextplain"
            ]
         },
         {
            "*.PDF": [
               "diff=astextplain"
            ]
         },
         {
            "*.rtf": [
               "diff=astextplain"
            ]
         },
         {
            "*.RTF": [
               "diff=astextplain"
            ]
         },
         {
            "*.md": [
               "text",
               "diff=markdown"
            ]
         },
         {
            "*.mdx": [
               "text",
               "diff=markdown"
            ]
         },
         {
            "*.rst": [
               "text"
            ]
         },
         {
            "*.tex": [
               "text",
               "diff=tex"
            ]
         },
         {
            "*.adoc": [
               "text"
            ]
         },
         {
            "*.textile": [
               "text"
            ]
         },
         {
            "*.mustache": [
               "text"
            ]
         },
         {
            "*.csv": [
               "text",
               "eol=crlf"
            ]
         },
         {
            "*.tab": [
               "text"
            ]
         },
         {
            "*.tsv": [
               "text"
            ]
         },
         {
            "*.txt": [
               "text"
            ]
         },
         {
            "*.sql": [
               "text"
            ]
         },
         {
            "*.epub": [
               "diff=astextplain"
            ]
         },
         {
            "*.css": [
               "text",
               "diff=css"
            ]
         },
         {
            "*.htm": [
               "text",
               "diff=html"
            ]
         },
         {
            "*.html": [
               "text",
               "diff=html"
            ]
         },
         {
            "*.svg": [
               "text"
            ]
         },
         {
            "*.png": [
               "binary"
            ]
         },
         {
            "*.jpg": [
               "binary"
            ]
         },
         {
            "*.jpeg": [
               "binary"
            ]
         },
         {
            "*.gif": [
               "binary"
            ]
         },
         {
            "*.tif": [
               "binary"
            ]
         },
         {
            "*.tiff": [
               "binary"
            ]
         },
         {
            "*.ico": [
               "binary"
            ]
         },
         {
            "*.eps": [
               "binary"
            ]
         },
         {
            "*.bash": [
               "text",
               "eol=lf"
            ]
         },
         {
            "*.fish": [
               "text",
               "eol=lf"
            ]
         },
         {
            "*.sh": [
               "text",
               "eol=lf"
            ]
         },
         {
            "*.zsh": [
               "text",
               "eol=lf"
            ]
         },
         {
            "*.bat": [
               "text",
               "eol=crlf"
            ]
         },
         {
            "*.cmd": [
               "text",
               "eol=crlf"
            ]
         },
         {
            "*.ps1": [
               "text",
               "eol=crlf"
            ]
         },
         {
            "*.json": [
               "text"
            ]
         },
         {
            "*.toml": [
               "text"
            ]
         },
         {
            "*.xml": [
               "text"
            ]
         },
         {
            "*.yaml": [
               "text"
            ]
         },
         {
            "*.yml": [
               "text"
            ]
         },
         {
            "*.7z": [
               "binary"
            ]
         },
         {
            "*.gz": [
               "binary"
            ]
         },
         {
            "*.jar": [
               "binary"
            ]
         },
         {
            "*.rar": [
               "binary"
            ]
         },
         {
            "*.tar": [
               "binary"
            ]
         },
         {
            "*.tgz": [
               "binary"
            ]
         },
         {
            "*.zip": [
               "binary"
            ]
         },
         {
            "*.patch": [
               "-text"
            ]
         },
         {
            "*.pxd": [
               "text",
               "diff=python"
            ]
         },
         {
            "*.py": [
               "text",
               "diff=python"
            ]
         },
         {
            "*.py3": [
               "text",
               "diff=python"
            ]
         },
         {
            "*.pyw": [
               "text",
               "diff=python"
            ]
         },
         {
            "*.pyx": [
               "text",
               "diff=python"
            ]
         },
         {
            "*.pyz": [
               "text",
               "diff=python"
            ]
         },
         {
            "*.pyi": [
               "text",
               "diff=python"
            ]
         },
         {
            "*.db": [
               "binary"
            ]
         },
         {
            "*.p": [
               "binary"
            ]
         },
         {
            "*.pkl": [
               "binary"
            ]
         },
         {
            "*.pickle": [
               "binary"
            ]
         },
         {
            "*.pyc": [
               "binary",
               "export-ignore"
            ]
         },
         {
            "*.pyo": [
               "binary",
               "export-ignore"
            ]
         },
         {
            "*.pyd": [
               "binary"
            ]
         },
         {
            "*.ipynb": [
               "text",
               "eol=lf"
            ]
         }
      ],
      "gitignore": [
         "docs/website/.build/",
         "docs/website/source/api/**/*",
         ".local/cache/**",
         "!.local/cache/**/",
         "!.local/cache/**/README.md",
         ".local/report/**",
         "!.local/report/**/",
         "!.local/report/**/README.md",
         "__pycache__/",
         "*.py[cod]",
         "*$py.class",
         "*.so",
         ".Python",
         "./build/",
         "develop-eggs/",
         "dist/",
         "downloads/",
         "eggs/",
         ".eggs/",
         "lib/",
         "lib64/",
         "parts/",
         "sdist/",
         "var/",
         "wheels/",
         "share/python-wheels/",
         "*.egg-info/",
         ".installed.cfg",
         "*.egg",
         "*.manifest",
         "*.spec",
         "pip-log.txt",
         "pip-delete-this-directory.txt",
         "htmlcov/",
         ".tox/",
         ".nox/",
         ".coverage",
         ".coverage.*",
         ".cache",
         "nosetests.xml",
         "coverage.xml",
         "*.cover",
         ".hypothesis/",
         ".pytest_cache",
         "cover/",
         "*.mo",
         "*.pot",
         "*.log",
         "local_settings.py",
         "db.sqlite3",
         "db.sqlite3-journal",
         "instance/",
         ".webassets-cache",
         ".scrapy",
         "docs/website/_build/",
         "docs/website/source/api/_autosummary",
         ".pybuilder/",
         "target/",
         ".ipynb_checkpoints",
         "profile_default/",
         "ipython_config.py",
         ".python-version",
         "celerybeat-schedule",
         "celerybeat.pid",
         "*.sage.py",
         ".env",
         ".venv",
         "env/",
         "venv/",
         "ENV/",
         "env.bak/",
         "venv.bak/",
         ".spyderproject",
         ".spyproject",
         ".ropeproject",
         "/site",
         ".mypy_cache/",
         ".dmypy.json",
         "dmypy.json",
         ".pyre/",
         ".pytype/",
         "cython_debug/",
         "*profraw",
         "*/_version.py",
         ".vscode/",
         ".idea/",
         ".DS_Store",
         ".github/.control/local_config.yaml"
      ],
      "has_discussions": true,
      "has_issues": true,
      "has_projects": false,
      "has_wiki": false,
      "homepage": "https://DrugBud-Suite.github.io/VoteM8",
      "id": 880969725,
      "merge_commit_message": "PR_BODY",
      "merge_commit_title": "PR_TITLE",
      "name": "VoteM8",
      "node_id": "R_kgDONIKH_Q",
      "private_vulnerability_reporting": true,
      "secret_scanning": true,
      "secret_scanning_push_protection": true,
      "squash_merge_commit_message": "PR_BODY",
      "squash_merge_commit_title": "PR_TITLE",
      "topics": [
         "consensus",
         "scoring",
         "molecular-docking",
         "protein-ligand-scoring",
         "virtual-screening"
      ],
      "url": {
         "actions": {
            "home": "https://github.com/DrugBud-Suite/VoteM8/actions"
         },
         "blob": "https://github.com/DrugBud-Suite/VoteM8/blob/main",
         "discussions": {
            "home": "https://github.com/DrugBud-Suite/VoteM8/discussions",
            "new": {
               "announcements": "https://github.com/DrugBud-Suite/VoteM8/discussions/new?category=announcements",
               "general": "https://github.com/DrugBud-Suite/VoteM8/discussions/new?category=general",
               "ideas": "https://github.com/DrugBud-Suite/VoteM8/discussions/new?category=ideas",
               "polls": "https://github.com/DrugBud-Suite/VoteM8/discussions/new?category=polls",
               "q-a": "https://github.com/DrugBud-Suite/VoteM8/discussions/new?category=q-a",
               "question_issues": "https://github.com/DrugBud-Suite/VoteM8/discussions/new?category=question_issues",
               "show-and-tell": "https://github.com/DrugBud-Suite/VoteM8/discussions/new?category=show-and-tell"
            }
         },
         "home": "https://github.com/DrugBud-Suite/VoteM8",
         "issues": {
            "chooser": "https://github.com/DrugBud-Suite/VoteM8/issues/new/choose",
            "home": "https://github.com/DrugBud-Suite/VoteM8/issues",
            "new": {
               "config": "https://github.com/DrugBud-Suite/VoteM8/issues/new?template=25_config.yaml",
               "devops": "https://github.com/DrugBud-Suite/VoteM8/issues/new?template=26_devops.yaml",
               "doc_change": "https://github.com/DrugBud-Suite/VoteM8/issues/new?template=13_doc_change.yaml",
               "doc_feat": "https://github.com/DrugBud-Suite/VoteM8/issues/new?template=12_doc_feat.yaml",
               "doc_fix": "https://github.com/DrugBud-Suite/VoteM8/issues/new?template=11_doc_fix.yaml",
               "maintenance": "https://github.com/DrugBud-Suite/VoteM8/issues/new?template=27_maintenance.yaml",
               "pkg_api_change": "https://github.com/DrugBud-Suite/VoteM8/issues/new?template=08_pkg_api_change.yaml",
               "pkg_api_feat": "https://github.com/DrugBud-Suite/VoteM8/issues/new?template=05_pkg_api_feat.yaml",
               "pkg_api_fix": "https://github.com/DrugBud-Suite/VoteM8/issues/new?template=01_pkg_api_fix.yaml",
               "pkg_cli_change": "https://github.com/DrugBud-Suite/VoteM8/issues/new?template=09_pkg_cli_change.yaml",
               "pkg_cli_feat": "https://github.com/DrugBud-Suite/VoteM8/issues/new?template=06_pkg_cli_feat.yaml",
               "pkg_cli_fix": "https://github.com/DrugBud-Suite/VoteM8/issues/new?template=02_pkg_cli_fix.yaml",
               "pkg_gui_change": "https://github.com/DrugBud-Suite/VoteM8/issues/new?template=10_pkg_gui_change.yaml",
               "pkg_gui_feat": "https://github.com/DrugBud-Suite/VoteM8/issues/new?template=07_pkg_gui_feat.yaml",
               "pkg_gui_fix": "https://github.com/DrugBud-Suite/VoteM8/issues/new?template=03_pkg_gui_fix.yaml",
               "pkg_setup_fix": "https://github.com/DrugBud-Suite/VoteM8/issues/new?template=04_pkg_setup_fix.yaml",
               "refactor": "https://github.com/DrugBud-Suite/VoteM8/issues/new?template=24_refactor.yaml",
               "test_api_change": "https://github.com/DrugBud-Suite/VoteM8/issues/new?template=21_test_api_change.yaml",
               "test_api_feat": "https://github.com/DrugBud-Suite/VoteM8/issues/new?template=18_test_api_feat.yaml",
               "test_api_fix": "https://github.com/DrugBud-Suite/VoteM8/issues/new?template=14_test_api_fix.yaml",
               "test_cli_change": "https://github.com/DrugBud-Suite/VoteM8/issues/new?template=22_test_cli_change.yaml",
               "test_cli_feat": "https://github.com/DrugBud-Suite/VoteM8/issues/new?template=19_test_cli_feat.yaml",
               "test_cli_fix": "https://github.com/DrugBud-Suite/VoteM8/issues/new?template=15_test_cli_fix.yaml",
               "test_gui_change": "https://github.com/DrugBud-Suite/VoteM8/issues/new?template=23_test_gui_change.yaml",
               "test_gui_feat": "https://github.com/DrugBud-Suite/VoteM8/issues/new?template=20_test_gui_feat.yaml",
               "test_gui_fix": "https://github.com/DrugBud-Suite/VoteM8/issues/new?template=16_test_gui_fix.yaml",
               "test_setup_fix": "https://github.com/DrugBud-Suite/VoteM8/issues/new?template=17_test_setup_fix.yaml"
            }
         },
         "pulls": {
            "home": "https://github.com/DrugBud-Suite/VoteM8/pulls"
         },
         "raw": "https://raw.githubusercontent.com/DrugBud-Suite/VoteM8/main",
         "releases": {
            "home": "https://github.com/DrugBud-Suite/VoteM8/releases"
         },
         "security": {
            "advisories": "https://github.com/DrugBud-Suite/VoteM8/security/advisories",
            "home": "https://github.com/DrugBud-Suite/VoteM8/security",
            "new_advisory": "https://github.com/DrugBud-Suite/VoteM8/security/advisories/new"
         },
         "tree": "https://github.com/DrugBud-Suite/VoteM8/tree/main"
      },
      "vulnerability_alerts": true
   },
   "schedule": {
      "test": {
         "branch": {
            "main": "pull",
            "pre": "pull",
            "release": "pull"
         },
         "cron": "43 23 * * *"
      },
      "update": {
         "branch": {
            "main": "pull",
            "pre": "pull",
            "release": "pull"
         },
         "cron": "43 6 * * 6"
      }
   },
   "tag": {
      "version": {
         "prefix": "ver/"
      }
   },
   "team": {
      "owner": {
         "avatar": "https://avatars.githubusercontent.com/u/163024486?v=4",
         "bio": "A suite of computer-aided drug design tools",
         "city": "Germany",
         "email": {
            "id": "alacournola+drugbud@gmail.com",
            "url": "mailto:alacournola+drugbud@gmail.com"
         },
         "github": {
            "id": "DrugBud-Suite",
            "node_id": "O_kgDOCbeOZg",
            "rest_id": 163024486,
            "url": "https://github.com/DrugBud-Suite"
         },
         "name": {
            "full": "DrugM8",
            "legal": "DrugM8"
         }
      }
   },
   "test": {
      "build": {
         "backend": "setuptools.build_meta",
         "requires": [
            "setuptools >= 72.1.0",
            "versioningit >= 3.1.2"
         ],
         "tool": {
            "setuptools": {
               "cmdclass": {
                  "build_py": "versioningit.cmdclass.build_py",
                  "sdist": "versioningit.cmdclass.sdist"
               },
               "include-package-data": true,
               "license-files": [
                  "LICENSES/*",
                  "COPYRIGHTS/*"
               ],
               "packages": {
                  "find": {
                     "namespaces": true,
                     "where": [
                        "src"
                     ]
                  }
               }
            },
            "versioningit": {
               "format": {
                  "dirty": "{base_version}+0.{committer_date:%Y.%m.%d}.{rev}.dirty",
                  "distance": "{base_version}+{distance}.{committer_date:%Y.%m.%d}.{rev}",
                  "distance-dirty": "{base_version}+{distance}.{committer_date:%Y.%m.%d}.{rev}.dirty"
               },
               "onbuild": {
                  "build-file": "votem8_testsuite/__init__.py",
                  "method": "replace-version",
                  "regex": "^__version_details__: dict\\[str, str\\] = (?P<version>.*)",
                  "replacement": "{{\n    \"version\": \"{version}\",\n    \"build_date\": \"{build_date:%Y.%m.%d}\",\n    \"committer_date\": \"{committer_date:%Y.%m.%d}\",\n    \"author_date\": \"{author_date:%Y.%m.%d}\",\n    \"branch\": \"{branch}\",\n    \"distance\": \"{distance}\",\n    \"commit_hash\": \"{revision}\",\n}}\n",
                  "require-match": true,
                  "source-file": "src/votem8_testsuite/__init__.py"
               },
               "tag2version": {
                  "rmprefix": "ver/"
               },
               "vcs": {
                  "default-tag": "ver/0.0.0",
                  "match": [
                     "ver/[0-9]*.[0-9]*.[0-9]*"
                  ],
                  "method": "git"
               }
            }
         }
      },
      "classifiers": [
         "Operating System :: OS Independent",
         "Programming Language :: Python :: 3 :: Only",
         "Programming Language :: Python :: 3.10",
         "Programming Language :: Python :: 3.11",
         "Programming Language :: Python :: 3.12",
         "Programming Language :: Python :: 3.13",
         "Typing :: Typed"
      ],
      "dependency": {
         "core": {
            "coverage": {
               "conda": {
                  "channel": "conda-forge",
                  "spec": "coverage = 7.6.1"
               },
               "description": "Code coverage measurement for Python.",
               "import_name": "coverage",
               "name": "Coverage.py",
               "notes": "This is indirectly used by the `pytest-cov` plugin.\nHowever, we include it explicitly here to pin the version for reproducibility.\n",
               "pip": {
                  "spec": "coverage == 7.6.1"
               },
               "url": {
                  "conda": "https://anaconda.org/conda-forge/coverage",
                  "docs": "https://coverage.readthedocs.io/",
                  "pip": "https://pypi.org/project/coverage/",
                  "source": "https://github.com/nedbat/coveragepy"
               }
            },
            "pkgdata": {
               "description": "Handling package resources, such as accessing data files that are distributed with the package.",
               "import_name": "pkgdata",
               "name": "PkgData",
               "pip": {
                  "spec": "pkgdata"
               }
            },
            "plugin_cov": {
               "conda": {
                  "channel": "conda-forge",
                  "spec": "pytest-cov = 5.0.0"
               },
               "description": "Pytest plugin for measuring test coverage.",
               "import_name": "pytest_cov",
               "name": "Pytest-Cov",
               "notes": "This plugin uses the [coverage.py](https://github.com/nedbat/coveragepy) package\nto measure code coverage.\n",
               "pip": {
                  "spec": "pytest-cov == 5.0.0"
               },
               "url": {
                  "conda": "https://anaconda.org/conda-forge/pytest-cov",
                  "docs": "https://pytest-cov.readthedocs.io/",
                  "pip": "https://pypi.org/project/pytest-cov/",
                  "source": "https://github.com/pytest-dev/pytest-cov"
               }
            },
            "plugin_html": {
               "conda": {
                  "channel": "conda-forge",
                  "spec": "pytest-html = 4.1.1"
               },
               "description": "Pytest plugin for generating HTML reports.",
               "import_name": "pytest_html",
               "name": "Pytest-HTML",
               "pip": {
                  "spec": "pytest-html == 4.1.1"
               },
               "url": {
                  "conda": "https://anaconda.org/conda-forge/pytest-html",
                  "docs": "https://pytest-html.readthedocs.io/",
                  "pip": "https://pypi.org/project/pytest-html/",
                  "source": "https://github.com/pytest-dev/pytest-html"
               }
            },
            "testing": {
               "conda": {
                  "channel": "conda-forge",
                  "spec": "pytest = 8.3.3"
               },
               "description": "Testing framework for Python.",
               "import_name": "pytest",
               "name": "Pytest",
               "pip": {
                  "spec": "pytest == 8.3.3"
               },
               "url": {
                  "conda": "https://anaconda.org/conda-forge/pytest",
                  "docs": "https://docs.pytest.org/en/stable/",
                  "pip": "https://pypi.org/project/pytest/",
                  "source": "https://github.com/pytest-dev/pytest"
               }
            }
         },
         "env": {
            "conda": {
               "name": "votem8_testsuite",
               "path": "tests/conda_env.yaml"
            },
            "pip": {
               "path": "tests/requirements.txt"
            }
         }
      },
      "description": "VoteM8 - A Python package for consensus scoring",
      "entry": {
         "cli": {
            "main": {
               "description": "Main CLI entry of the test-suite.",
               "name": "VoteM8-TestSuite",
               "ref": "votem8_testsuite:__main__"
            }
         },
         "python": {
            "main": {
               "description": "Main Python API entry of the package.",
               "name": "votem8_testsuite",
               "ref": "votem8_testsuite:__init__"
            }
         }
      },
      "file": {
         "__init__.py": {
            "docstring": "VoteM8 Test-Suite.\n\n\u00a9 2024 DrugM8\nSPDX-License-Identifier: MIT\n\n"
         }
      },
      "import_name": "votem8_testsuite",
      "keywords": [
         "consensus",
         "scoring",
         "molecular docking",
         "protein-ligand scoring",
         "virtual screening"
      ],
      "license": "MIT",
      "manifest": [
         "graft src/votem8_testsuite/data",
         "include src/votem8_testsuite/py.typed",
         "global-exclude *.py[cod] __pycache__ *.so"
      ],
      "name": "VoteM8-TestSuite",
      "os": {
         "linux": {
            "name": "Linux",
            "runner": "ubuntu-latest"
         },
         "macos": {
            "name": "MacOS",
            "runner": "macos-latest"
         },
         "windows": {
            "name": "Windows",
            "runner": "windows-latest"
         }
      },
      "os_independent": true,
      "path": {
         "import": "tests/src/votem8_testsuite",
         "root": "tests",
         "source": "tests/src",
         "source_rel": "src"
      },
      "pypi": {
         "url": {
            "home": "https://pypi.org/project/VoteM8-TestSuite"
         }
      },
      "python": {
         "implementation": "cpython",
         "pure": true,
         "version": {
            "micros": [
               "3.10.0",
               "3.10.1",
               "3.10.2",
               "3.10.3",
               "3.10.4",
               "3.10.5",
               "3.10.6",
               "3.10.7",
               "3.10.8",
               "3.10.9",
               "3.10.10",
               "3.10.11",
               "3.10.12",
               "3.10.13",
               "3.10.14",
               "3.10.15",
               "3.11.0",
               "3.11.1",
               "3.11.2",
               "3.11.3",
               "3.11.4",
               "3.11.5",
               "3.11.6",
               "3.11.7",
               "3.11.8",
               "3.11.9",
               "3.11.10",
               "3.12.0",
               "3.12.1",
               "3.12.2",
               "3.12.3",
               "3.12.4",
               "3.12.5",
               "3.12.6",
               "3.12.7",
               "3.13.0"
            ],
            "minors": [
               "3.10",
               "3.11",
               "3.12",
               "3.13"
            ],
            "pyxy": [
               "py310",
               "py311",
               "py312",
               "py313"
            ],
            "spec": ">= 3.10"
         }
      },
      "typed": true,
      "urls": {
         "Download": "https://github.com/DrugBud-Suite/VoteM8/releases",
         "Homepage": "https://DrugBud-Suite.github.io/VoteM8",
         "Issue-Tracker": "https://github.com/DrugBud-Suite/VoteM8/issues",
         "Source": "https://github.com/DrugBud-Suite/VoteM8"
      }
   },
   "theme": {
      "color": {
         "primary": {
            "dark": "#9D41A1",
            "light": "#992D72"
         },
         "secondary": {
            "dark": "#2F2F2F",
            "light": "#2F2F2F"
         }
      },
      "footer": [
         {
            "class": "thematic_break"
         },
         {
            "class": "badges",
            "items": [
               {
                  "align": "left",
                  "alt": "VoteM8",
                  "args": {
                     "prefix": "\u00a9",
                     "query": "$.copyright",
                     "url": "https://raw.githubusercontent.com/DrugBud-Suite/VoteM8/main/.github/.control/.metadata.json"
                  },
                  "color": "#992D72",
                  "color_dark": "#9D41A1",
                  "label": "VoteM8",
                  "link": "https://DrugBud-Suite.github.io/VoteM8",
                  "logo": "docs/website/source/_media/logo/favicon.svg",
                  "logo_dark": "docs/website/source/_media/logo/favicon.svg",
                  "logo_type": "file",
                  "logo_type_dark": "file",
                  "service": "dynamic",
                  "title": "VoteM8: \u00a9 2024 DrugM8"
               },
               {
                  "align": "right",
                  "alt": "SPDX-License-Identifier: MIT",
                  "args": {
                     "query": "$.license.expression",
                     "url": "https://raw.githubusercontent.com/DrugBud-Suite/VoteM8/main/.github/.control/.metadata.json"
                  },
                  "color": "#2F2F2F",
                  "color_dark": "#2F2F2F",
                  "label": "License",
                  "link": "https://DrugBud-Suite.github.io/VoteM8/about/license",
                  "service": "dynamic",
                  "title": "SPDX-License-Identifier: MIT"
               }
            ],
            "style": "for-the-badge"
         },
         {
            "class": "badges",
            "items": [
               {
                  "align": "right",
                  "endpoint": "pypackit",
                  "service": "repodynamics"
               }
            ],
            "style": "for-the-badge"
         }
      ],
      "logo": {
         "full": {
            "dark": {
               "path": "docs/website/source/_media/logo/full_dark.svg",
               "path_web": "_media/logo/full_dark.svg",
               "url": "https://raw.githubusercontent.com/DrugBud-Suite/VoteM8/main/docs/website/source/_media/logo/full_dark.svg"
            },
            "light": {
               "path": "docs/website/source/_media/logo/full_light.svg",
               "path_web": "_media/logo/full_light.svg",
               "url": "https://raw.githubusercontent.com/DrugBud-Suite/VoteM8/main/docs/website/source/_media/logo/full_light.svg"
            },
            "raster": {
               "path": "docs/website/source/_media/logo/full_light.png",
               "path_web": "_media/logo/full_light.png",
               "url": "https://raw.githubusercontent.com/DrugBud-Suite/VoteM8/main/docs/website/source/_media/logo/full_light.png"
            }
         },
         "icon": {
            "path": "docs/website/source/_media/logo/favicon.svg",
            "path_web": "_media/logo/favicon.svg",
            "url": "https://raw.githubusercontent.com/DrugBud-Suite/VoteM8/main/docs/website/source/_media/logo/favicon.svg"
         },
         "simple": {
            "dark": {
               "path": "docs/website/source/_media/logo/simple_dark.svg",
               "path_web": "_media/logo/simple_dark.svg",
               "url": "https://raw.githubusercontent.com/DrugBud-Suite/VoteM8/main/docs/website/source/_media/logo/simple_dark.svg"
            },
            "light": {
               "path": "docs/website/source/_media/logo/simple_light.svg",
               "path_web": "_media/logo/simple_light.svg",
               "url": "https://raw.githubusercontent.com/DrugBud-Suite/VoteM8/main/docs/website/source/_media/logo/simple_light.svg"
            },
            "raster": {
               "path": "docs/website/source/_media/logo/simple_light.png",
               "path_web": "_media/logo/simple_light.png",
               "url": "https://raw.githubusercontent.com/DrugBud-Suite/VoteM8/main/docs/website/source/_media/logo/simple_light.png"
            }
         }
      }
   },
   "title": "VoteM8 - A Python package for consensus scoring",
   "tool": {
      "codecov": {
         "config": {
            "file": {
               "content": {
                  "comment": {
                     "behavior": "default",
                     "layout": "header, diff, flags, files",
                     "require_changes": false
                  },
                  "coverage": {
                     "precision": 2,
                     "range": "90...100",
                     "round": "nearest",
                     "status": {
                        "project": {
                           "default": {
                              "target": "100%",
                              "threshold": "5%"
                           }
                        }
                     }
                  }
               },
               "path": ".github/.codecov.yml",
               "type": "yaml"
            }
         }
      },
      "coverage": {
         "config": {
            "file": {
               "content": {
                  "tool": {
                     "coverage": {
                        "html": {
                           "directory": "$|| path_report ||/coverage/html",
                           "title": "VoteM8 Test Coverage"
                        },
                        "json": {
                           "output": "$|| path_report ||/coverage/coverage.json",
                           "pretty_print": true
                        },
                        "report": {
                           "exclude_also": [
                              "def __repr__",
                              "if self\\.debug",
                              "raise AssertionError",
                              "raise NotImplementedError",
                              "if 0:",
                              "if __name__ == .__main__.:",
                              "@(abc\\.)?abstractmethod",
                              "if _?TYPE_CHECKING:"
                           ],
                           "show_missing": true
                        },
                        "run": {
                           "branch": true,
                           "data_file": "$|| path_cache ||/coverage/coverage",
                           "debug_file": "$|| path_report ||/coverage/debug.log",
                           "source_pkgs": [
                              "votem8"
                           ]
                        },
                        "xml": {
                           "output": "$|| path_report ||/coverage/coverage.xml"
                        }
                     }
                  }
               },
               "path": "tests/src/votem8_testsuite/data/config/coverage.toml",
               "type": "toml"
            }
         }
      },
      "mypy": {
         "config": {
            "file": {
               "content": {
                  "tool": {
                     "mypy": {
                        "any_exprs_report": ".local/report/mypy",
                        "cache_dir": ".local/cache/mypy",
                        "color_output": true,
                        "html_report": ".local/report/mypy",
                        "linecount_report": ".local/report/mypy",
                        "linecoverage_report": ".local/report/mypy",
                        "lineprecision_report": ".local/report/mypy",
                        "packages": [
                           "votem8"
                        ],
                        "pretty": true,
                        "raise_exceptions": true,
                        "show_column_numbers": true,
                        "show_error_code_links": true,
                        "show_error_context": true,
                        "show_traceback": true,
                        "strict": true,
                        "txt_report": ".local/report/mypy",
                        "verbosity": 2,
                        "warn_return_any": true,
                        "xml_report": ".local/report/mypy"
                     }
                  }
               },
               "path": ".github/.mypy.toml",
               "type": "toml"
            },
            "workflow": {
               "cache_path": ".local/cache/mypy",
               "report_path": ".local/report/mypy"
            }
         },
         "env": {
            "dependency": {
               "mypy": {
                  "conda": {
                     "channel": "conda-forge",
                     "spec": "mypy = 1.11.2"
                  },
                  "import_name": "mypy",
                  "name": "Mypy",
                  "pip": {
                     "spec": "mypy[reports] == 1.11.2"
                  },
                  "url": {
                     "conda": "https://anaconda.org/conda-forge/mypy",
                     "docs": "https://mypy.readthedocs.io/",
                     "pip": "https://pypi.org/project/mypy/",
                     "source": "https://github.com/python/mypy"
                  }
               }
            },
            "file": {
               "conda": {
                  "name": "name-dev\n",
                  "path": ".github/dev_environment.yaml"
               },
               "pip": {
                  "path": ".github/workflow_requirements/mypy.txt"
               }
            }
         }
      },
      "pre-commit": {
         "config": {
            "file": {
               "content": {
                  "default_language_version": {
                     "python": "python3"
                  },
                  "minimum_pre_commit_version": "3.8.0",
                  "repos": [
                     {
                        "hooks": [
                           {
                              "id": "check-ast",
                              "stages": [
                                 "pre-commit",
                                 "manual"
                              ],
                              "verbose": true
                           },
                           {
                              "id": "check-case-conflict",
                              "stages": [
                                 "pre-commit",
                                 "manual"
                              ],
                              "verbose": true
                           },
                           {
                              "id": "check-executables-have-shebangs",
                              "stages": [
                                 "pre-commit",
                                 "manual"
                              ],
                              "verbose": true
                           },
                           {
                              "id": "check-json",
                              "stages": [
                                 "pre-commit",
                                 "manual"
                              ],
                              "verbose": true
                           },
                           {
                              "id": "check-shebang-scripts-are-executable",
                              "stages": [
                                 "pre-commit",
                                 "manual"
                              ],
                              "verbose": true
                           },
                           {
                              "id": "check-symlinks",
                              "stages": [
                                 "pre-commit",
                                 "manual"
                              ],
                              "verbose": true
                           },
                           {
                              "id": "check-toml",
                              "stages": [
                                 "pre-commit",
                                 "manual"
                              ],
                              "verbose": true
                           },
                           {
                              "id": "check-xml",
                              "stages": [
                                 "pre-commit",
                                 "manual"
                              ],
                              "verbose": true
                           },
                           {
                              "id": "check-yaml",
                              "stages": [
                                 "pre-commit",
                                 "manual"
                              ],
                              "verbose": true
                           },
                           {
                              "id": "destroyed-symlinks",
                              "stages": [
                                 "pre-commit",
                                 "manual"
                              ],
                              "verbose": true
                           },
                           {
                              "id": "end-of-file-fixer",
                              "stages": [
                                 "pre-commit",
                                 "manual"
                              ],
                              "verbose": true
                           },
                           {
                              "id": "fix-byte-order-marker",
                              "stages": [
                                 "pre-commit",
                                 "manual"
                              ],
                              "verbose": true
                           },
                           {
                              "id": "mixed-line-ending",
                              "stages": [
                                 "pre-commit",
                                 "manual"
                              ],
                              "verbose": true
                           },
                           {
                              "args": [
                                 "--branch",
                                 "main",
                                 "--pattern",
                                 "release/v.*"
                              ],
                              "id": "no-commit-to-branch",
                              "stages": [
                                 "pre-commit"
                              ],
                              "verbose": true
                           },
                           {
                              "args": [
                                 "--autofix",
                                 "--indent",
                                 "3"
                              ],
                              "id": "pretty-format-json",
                              "stages": [
                                 "pre-commit",
                                 "manual"
                              ],
                              "verbose": true
                           },
                           {
                              "args": [
                                 "--markdown-linebreak-ext=md"
                              ],
                              "id": "trailing-whitespace",
                              "stages": [
                                 "pre-commit",
                                 "manual"
                              ],
                              "verbose": true
                           }
                        ],
                        "repo": "https://github.com/pre-commit/pre-commit-hooks",
                        "rev": "v4.6.0"
                     },
                     {
                        "hooks": [
                           {
                              "args": [
                                 "--verbose",
                                 "--config",
                                 ".github/.ruff.toml",
                                 "--exit-non-zero-on-fix"
                              ],
                              "id": "ruff",
                              "stages": [
                                 "pre-commit",
                                 "manual"
                              ],
                              "types_or": [
                                 "python",
                                 "pyi",
                                 "jupyter"
                              ],
                              "verbose": true
                           },
                           {
                              "args": [
                                 "--config",
                                 ".github/.ruff.toml"
                              ],
                              "id": "ruff-format",
                              "stages": [
                                 "pre-commit",
                                 "manual"
                              ],
                              "types_or": [
                                 "python",
                                 "pyi",
                                 "jupyter"
                              ],
                              "verbose": true
                           }
                        ],
                        "repo": "https://github.com/astral-sh/ruff-pre-commit",
                        "rev": "v0.6.6"
                     }
                  ]
               },
               "path": ".github/.pre-commit-config.yaml",
               "type": "yaml"
            }
         },
         "env": {
            "dependency": {
               "pre_commit": {
                  "conda": {
                     "channel": "conda-forge",
                     "spec": "pre-commit = 3.8.0"
                  },
                  "description": "Running formatting and linting checks.",
                  "import_name": "pre_commit",
                  "name": "Pre-Commit",
                  "pip": {
                     "spec": "pre-commit == 3.8.0"
                  },
                  "url": {
                     "conda": "https://anaconda.org/conda-forge/pre_commit",
                     "docs": "https://pre-commit.com/",
                     "pip": "https://pypi.org/project/pre-commit/",
                     "source": "https://github.com/pre-commit/pre-commit"
                  }
               }
            },
            "file": {
               "conda": {
                  "name": "name-dev\n",
                  "path": ".github/dev_environment.yaml"
               }
            }
         }
      },
      "pylint": {
         "env": {
            "dependency": {
               "pylint": {
                  "conda": {
                     "channel": "conda-forge",
                     "spec": "pylint = 3.3.0"
                  },
                  "import_name": "pylint",
                  "name": "Pylint",
                  "pip": {
                     "spec": "pylint[spelling] == 3.3.0"
                  },
                  "url": {
                     "conda": "https://anaconda.org/conda-forge/pylint",
                     "docs": "https://pylint.readthedocs.io/",
                     "pip": "https://pypi.org/project/pylint/",
                     "source": "https://github.com/pylint-dev/pylint"
                  }
               }
            },
            "file": {
               "conda": {
                  "name": "name-dev\n",
                  "path": ".github/dev_environment.yaml"
               },
               "pip": {
                  "path": ".github/workflow_requirements/pylint.txt"
               }
            }
         }
      },
      "pytest": {
         "config": {
            "file": {
               "content": {
                  "tool": {
                     "pytest": {
                        "ini_options": {
                           "addopts": "-r a --verbose --color=yes --full-trace --strict-config --junit-xml='$|| path_report ||/pytest/junit.xml' --import-mode=importlib --debug='$|| path_report ||/pytest/debug.log' --cov --cov-config='$|| path_config ||/coverage.toml' --cov-report=term-missing:skip-covered --cov-report=html --cov-report=xml --cov-report=json --html='$|| path_report ||/pytest/report.html' --self-contained-html",
                           "cache_dir": "$|| path_cache ||/pytest",
                           "console_output_style": "count",
                           "junit_logging": "all",
                           "junit_suite_name": "votem8_testsuite",
                           "log_auto_indent": true,
                           "log_cli": true,
                           "log_cli_date_format": "%Y-%m-%d %H:%M:%S",
                           "log_cli_format": "%(levelname)s %(message)s",
                           "log_cli_level": "INFO",
                           "log_date_format": "%Y-%m-%d %H:%M:%S",
                           "log_file": "$|| path_report ||/pytest/log.txt",
                           "log_file_date_format": "%Y-%m-%d %H:%M:%S",
                           "log_file_format": "%(asctime)s %(levelname)s %(message)s",
                           "log_file_level": "DEBUG",
                           "log_format": "%(asctime)s %(levelname)s %(message)s",
                           "log_level": "DEBUG",
                           "minversion": "8.3.3",
                           "python_classes": [
                              "Test*",
                              "*Test"
                           ],
                           "python_files": [
                              "test_*.py",
                              "tests_*.py",
                              "*_test.py",
                              "*_tests.py"
                           ],
                           "python_functions": [
                              "test_*",
                              "tests_*",
                              "*_test",
                              "*_tests"
                           ],
                           "required_plugins": [
                              "pytest-cov == 5.0.0",
                              "pytest-html == 4.1.1"
                           ]
                        }
                     }
                  }
               },
               "path": "tests/src/votem8_testsuite/data/config/pytest.toml",
               "type": "toml"
            }
         }
      },
      "readthedocs": {
         "config": {
            "file": {
               "content": {
                  "build": {
                     "jobs": {
                        "post_checkout": [
                           "git fetch --unshallow"
                        ]
                     },
                     "os": "ubuntu-22.04",
                     "tools": {
                        "python": "mambaforge-4.10"
                     }
                  },
                  "conda": {
                     "environment": "docs/website/environment.yaml"
                  },
                  "formats": "all",
                  "python": {
                     "install": [
                        {
                           "method": "pip",
                           "path": "pkg"
                        }
                     ]
                  },
                  "sphinx": {
                     "builder": "dirhtml",
                     "configuration": "docs/website/source/conf.py",
                     "fail_on_warning": false
                  },
                  "version": 2
               },
               "path": ".readthedocs.yaml",
               "type": "yaml"
            },
            "workflow": {
               "language": "en",
               "name": "VoteM8",
               "platform": "community",
               "version_scheme": {
                  "single_version": false,
                  "translation": false
               }
            }
         }
      },
      "ruff": {
         "config": {
            "file": {
               "content": {
                  "cache-dir": ".local/cache/ruff",
                  "fix": true,
                  "format": {
                     "docstring-code-format": true
                  },
                  "line-length": 100,
                  "lint": {
                     "flake8-annotations": {
                        "allow-star-arg-any": true,
                        "mypy-init-return": true,
                        "suppress-dummy-args": true,
                        "suppress-none-returning": true
                     },
                     "flake8-comprehensions": {
                        "allow-dict-calls-with-keyword-arguments": true
                     },
                     "flake8-type-checking": {
                        "quote-annotations": true
                     },
                     "ignore": [
                        "PLR1711",
                        "W191",
                        "E501",
                        "E111",
                        "E114",
                        "E117",
                        "D206",
                        "D300",
                        "Q000",
                        "Q001",
                        "Q002",
                        "Q003",
                        "COM812",
                        "COM819",
                        "ISC001",
                        "ISC002",
                        "ANN101",
                        "ANN102"
                     ],
                     "mccabe": {
                        "max-complexity": 15
                     },
                     "per-file-ignores": {
                        "docs/website/source/conf.py": [
                           "TRY003"
                        ],
                        "pkg/src/votem8/__main__.py": [
                           "T20"
                        ],
                        "tests/src/**": [
                           "S101"
                        ],
                        "tests/src/votem8_testsuite/__init__.py": [
                           "T20"
                        ],
                        "tests/src/votem8_testsuite/__main__.py": [
                           "T20"
                        ]
                     },
                     "pydocstyle": {
                        "convention": "numpy"
                     },
                     "pylint": {
                        "max-args": 10,
                        "max-public-methods": 50,
                        "max-returns": 10
                     },
                     "select": [
                        "F",
                        "E",
                        "W",
                        "C90",
                        "I",
                        "N",
                        "D",
                        "UP",
                        "YTT",
                        "ANN",
                        "ASYNC",
                        "S",
                        "BLE",
                        "FBT",
                        "B",
                        "A",
                        "COM",
                        "C4",
                        "DTZ",
                        "T10",
                        "EM",
                        "EXE",
                        "FA",
                        "ISC",
                        "ICN",
                        "LOG",
                        "G",
                        "PIE",
                        "T20",
                        "PYI",
                        "PT",
                        "Q",
                        "RSE",
                        "RET",
                        "SLF",
                        "SLOT",
                        "SIM",
                        "TID",
                        "TCH",
                        "INT",
                        "ARG",
                        "PTH",
                        "TD",
                        "FIX",
                        "ERA",
                        "PD",
                        "PGH",
                        "PL",
                        "E",
                        "R",
                        "W",
                        "TRY",
                        "FLY",
                        "NPY",
                        "PERF",
                        "FURB",
                        "RUF"
                     ]
                  },
                  "output-format": "grouped",
                  "required-version": "== 0.6.6",
                  "show-fixes": true,
                  "src": [
                     "pkg/src",
                     "tests/src"
                  ],
                  "target-version": "py310"
               },
               "path": ".github/.ruff.toml",
               "type": "toml"
            }
         }
      }
   },
   "version": "0.0.0",
   "web": {
      "env": {
         "dependency": {
            "autobuild": {
               "description": "Automatically rebuilding the documentation when changes are made.",
               "import_name": "sphinx-autobuild",
               "notes": "This is added to the `Makefile` of Sphinx under the `livehtml` target,\nmeaning that you can run `make livehtml` in the website directory\nto start the autobuild server.\n",
               "pip": {
                  "spec": "sphinx-autobuild >= 2024.09.17"
               },
               "url": {
                  "source": "https://github.com/sphinx-doc/sphinx-autobuild"
               }
            },
            "gittidy": {
               "description": "Git API to automatically retrieve project version from tags during builds.\n",
               "import_name": "gittidy",
               "pip": {
                  "spec": "gittidy"
               },
               "url": {
                  "docs": "https://gittidy.repodynamics.com"
               }
            },
            "intersphinx_registry": {
               "conda": {
                  "channel": "conda-forge",
                  "spec": "intersphinx-registry"
               },
               "description": "Registry of intersphinx mappings for external documentation.\n",
               "import_name": "intersphinx_registry",
               "pip": {
                  "spec": "intersphinx_registry"
               },
               "url": {
                  "conda": "https://anaconda.org/conda-forge/intersphinx-registry",
                  "pip": "https://pypi.org/project/intersphinx_registry/",
                  "source": "https://github.com/Quansight-labs/intersphinx_registry"
               }
            },
            "librsvg": {
               "conda": {
                  "channel": "conda-forge",
                  "spec": "librsvg"
               },
               "description": "Library for rendering SVG files and using them\nin PDF (via LaTeX) builds done by latexmk.\n",
               "import_name": "librsvg",
               "url": {
                  "docs": "https://wiki.gnome.org/Projects/LibRsvg",
                  "source": "https://gitlab.gnome.org/GNOME/librsvg"
               }
            },
            "linkify": {
               "conda": {
                  "channel": "conda-forge",
                  "spec": "linkify-it-py == 2.0.3"
               },
               "description": "Linkify extension for MyST Markdown to automatically convert URLs to hyperlinks.\n",
               "import_name": "linkify_it",
               "pip": {
                  "spec": "linkify-it-py == 2.0.3"
               },
               "url": {
                  "docs": "https://myst-parser.readthedocs.io/en/latest/syntax/optional.html#linkify"
               }
            },
            "myst": {
               "conda": {
                  "channel": "conda-forge",
                  "spec": "myst-parser = 3.0.1"
               },
               "description": "Adding MyST Markdown functionalities to Sphinx.",
               "import_name": "myst_parser",
               "notes": "This is added as a dependency and not an extension\nbecause the MyST-NB extension (a superset of MyST-Parser) is used as an extension,\nwhich already includes MyST-Parser.\nHowever, here we specifically include MyST-Parser to ensure the correct version is installed.\n",
               "pip": {
                  "spec": "myst-parser[linkify] == 3.0.1"
               },
               "url": {
                  "docs": "https://myst-parser.readthedocs.io/",
                  "source": "https://github.com/executablebooks/MyST-Parser"
               }
            },
            "versionman": {
               "description": "Version management utilities to automatically find the latest version\nfrom git tags during build.\n",
               "import_name": "versionman",
               "pip": {
                  "spec": "versionman"
               },
               "url": {
                  "docs": "https://versionman.repodynamics.com"
               }
            }
         },
         "file": {
            "conda": {
               "name": "VoteM8-docs",
               "path": "docs/website/environment.yaml"
            },
            "pip": {
               "path": "docs/website/requirements.txt"
            }
         }
      },
      "extension": {
         "ablog": {
            "config": {
               "blog_baseurl": "https://DrugBud-Suite.github.io/VoteM8",
               "blog_default_author": "owner",
               "blog_feed_archives": true,
               "blog_path": "news/list",
               "blog_post_pattern": [
                  "news/post/*.md"
               ],
               "blog_title": "VoteM8 News",
               "fontawesome_included": true,
               "post_always_section": true,
               "post_auto_image": 1,
               "post_show_prev_next": false
            },
            "dependency": {
               "conda": {
                  "channel": "conda-forge",
                  "spec": "ablog = 0.11.11"
               },
               "description": "Adding a news blog to the website.",
               "import_name": "ablog",
               "pip": {
                  "spec": "ablog == 0.11.11"
               },
               "url": {
                  "docs": "https://ablog.readthedocs.io/",
                  "docs_config": {
                     "url": "https://ablog.readthedocs.io/en/stable/manual/ablog-configuration-options.html"
                  },
                  "source": "https://github.com/sunpy/ablog"
               }
            }
         },
         "autodoc2": {
            "config": {
               "autodoc2_hidden_objects": [
                  "private",
                  "inherited"
               ],
               "autodoc2_index_template": null,
               "autodoc2_output_dir": "api",
               "autodoc2_packages": [
                  "../../../pkg/src/votem8"
               ],
               "autodoc2_render_plugin": "myst",
               "autodoc2_sort_names": true
            },
            "dependency": {
               "description": "Automatically generating Python API documentation from docstrings.",
               "import_name": "autodoc2",
               "pip": {
                  "spec": "sphinx-autodoc2 == 0.5.0"
               },
               "url": {
                  "docs": "https://sphinx-autodoc2.readthedocs.io/",
                  "pip": "https://pypi.org/project/sphinx-autodoc2/",
                  "source": "https://github.com/sphinx-extensions2/sphinx-autodoc2"
               }
            }
         },
         "bibtex": {
            "config": {
               "bibtex_bibfiles": [
                  "refs.bib"
               ],
               "bibtex_default_style": "plain",
               "bibtex_reference_style": "label"
            },
            "dependency": {
               "conda": {
                  "channel": "conda-forge",
                  "spec": "sphinxcontrib-bibtex = 2.6.3"
               },
               "description": "Adding BibTeX-style citations.",
               "import_name": "sphinxcontrib.bibtex",
               "pip": {
                  "spec": "sphinxcontrib-bibtex == 2.6.3"
               },
               "url": {
                  "conda": "https://anaconda.org/conda-forge/sphinxcontrib-bibtex",
                  "docs": "https://sphinxcontrib-bibtex.readthedocs.io/",
                  "pip": "https://pypi.org/project/sphinxcontrib-bibtex/",
                  "source": "https://github.com/mcmtroffaes/sphinxcontrib-bibtex"
               }
            }
         },
         "copy_button": {
            "dependency": {
               "conda": {
                  "channel": "conda-forge",
                  "spec": "sphinx-copybutton = 0.5.2"
               },
               "description": "Adding a copy button to code blocks.",
               "import_name": "sphinx_copybutton",
               "pip": {
                  "spec": "sphinx-copybutton == 0.5.2"
               },
               "url": {
                  "docs": "https://sphinx-copybutton.readthedocs.io/",
                  "source": "https://github.com/executablebooks/sphinx-copybutton"
               }
            }
         },
         "design": {
            "config": {
               "sd_fontawesome_latex": true
            },
            "dependency": {
               "conda": {
                  "channel": "conda-forge",
                  "spec": "sphinx-design = 0.6.1"
               },
               "description": "Adding responsive web components, such as grids, cards, tabs, etc.",
               "import_name": "sphinx_design",
               "pip": {
                  "spec": "sphinx-design == 0.6.1"
               },
               "url": {
                  "docs": "https://sphinx-design.readthedocs.io/",
                  "source": "https://github.com/executablebooks/sphinx-design"
               }
            }
         },
         "ext_toc": {
            "config": {
               "external_toc_exclude_missing": false,
               "external_toc_path": ".toc.yaml"
            },
            "dependency": {
               "conda": {
                  "channel": "conda-forge",
                  "spec": "sphinx-external-toc = 1.0.1"
               },
               "description": "Adding external table of contents to Sphinx.",
               "import_name": "sphinx_external_toc",
               "pip": {
                  "spec": "sphinx_external_toc == 1.0.1"
               },
               "url": {
                  "conda": "https://anaconda.org/conda-forge/sphinx-external-toc",
                  "docs": "https://sphinx-external-toc.readthedocs.io",
                  "pip": "https://pypi.org/project/sphinx_external_toc/",
                  "source": "https://github.com/executablebooks/sphinx-external-toc"
               }
            }
         },
         "last_update": {
            "dependency": {
               "description": "Adding page-specific last-updated dates to each page.",
               "import_name": "sphinx_last_updated_by_git",
               "pip": {
                  "spec": "sphinx-last-updated-by-git == 0.3.7"
               },
               "url": {
                  "docs": "https://sphinx-last-updated-by-git.readthedocs.io/",
                  "source": "https://github.com/mgeier/sphinx-last-updated-by-git"
               }
            }
         },
         "mermaid": {
            "dependency": {
               "conda": {
                  "channel": "conda-forge",
                  "spec": "sphinxcontrib-mermaid = 0.9.2"
               },
               "description": "Adding Mermaid diagrams and charts.",
               "import_name": "sphinxcontrib.mermaid",
               "pip": {
                  "spec": "sphinxcontrib-mermaid == 0.9.2"
               },
               "url": {
                  "docs": "https://sphinxcontrib-mermaid-demo.readthedocs.io/en/stable/",
                  "source": "https://github.com/mgaitan/sphinxcontrib-mermaid"
               }
            }
         },
         "myst-nb": {
            "config": {
               "myst_enable_extensions": [
                  "amsmath",
                  "attrs_inline",
                  "attrs_block",
                  "colon_fence",
                  "deflist",
                  "dollarmath",
                  "fieldlist",
                  "html_admonition",
                  "html_image",
                  "linkify",
                  "replacements",
                  "smartquotes",
                  "substitution",
                  "tasklist"
               ],
               "myst_fence_as_directive": [
                  "mermaid"
               ],
               "myst_heading_anchors": 6,
               "myst_links_external_new_tab": true,
               "myst_sub_delimiters": [
                  "|",
                  "|"
               ]
            },
            "dependency": {
               "conda": {
                  "channel": "conda-forge",
                  "spec": "myst-nb = 1.1.1"
               },
               "description": "Adding MyST Markdown and Jupyter support to Sphinx.",
               "import_name": "myst_nb",
               "note": "MyST-NB is built on top of [MyST-Parser](https://myst-parser.readthedocs.io/)\nand exposes all of its functionalities. It also includes support for Jupyter Notebooks.\nWhen using MyST-NB, MyST-Parser must not be included separately.\n",
               "pip": {
                  "spec": "myst-nb == 1.1.1"
               },
               "url": {
                  "conda": "https://anaconda.org/conda-forge/myst-nb",
                  "docs": "https://myst-parser.readthedocs.io/",
                  "pip": "https://pypi.org/project/myst-nb/",
                  "source": "https://github.com/executablebooks/MyST-Parser"
               }
            }
         },
         "not_found_page": {
            "config": {
               "notfound_urls_prefix": "/VoteM8/"
            },
            "dependency": {
               "description": "Handling relative links in the custom 404 page.",
               "import_name": "notfound.extension",
               "pip": {
                  "spec": "sphinx-notfound-page == 1.0.4"
               },
               "url": {
                  "docs": "https://sphinx-notfound-page.readthedocs.io/",
                  "pip": "https://pypi.org/project/sphinx-notfound-page/",
                  "source": "https://github.com/readthedocs/sphinx-notfound-page"
               }
            }
         },
         "opengraph": {
            "config": {
               "ogp_enable_meta_description": true,
               "ogp_site_url": "https://DrugBud-Suite.github.io/VoteM8",
               "ogp_social_cards": {
                  "image": "_static/simple_light.svg",
                  "line_color": "#992D72"
               },
               "ogp_use_first_image": true
            },
            "dependency": {
               "conda": {
                  "channel": "conda-forge",
                  "spec": "sphinxext-opengraph = 0.9.1"
               },
               "description": "Generating [Open Graph](https://ogp.me/) metadata for each page.\n",
               "import_name": "sphinxext.opengraph",
               "pip": {
                  "spec": "sphinxext-opengraph == 0.9.1"
               },
               "url": {
                  "conda": "https://anaconda.org/conda-forge/sphinxext-opengraph",
                  "docs": "https://sphinxext-opengraph.readthedocs.io/",
                  "pip": "https://pypi.org/project/sphinxext-opengraph",
                  "source": "https://github.com/wpilibsuite/sphinxext-opengraph/"
               }
            }
         },
         "svg2pdf": {
            "dependency": {
               "description": "Converting SVG images to PNG for LaTeX.",
               "import_name": "sphinxcontrib.rsvgconverter",
               "notes": "This doesn't work on `latex_logo`;\nsee [nbsphinx](https://nbsphinx.readthedocs.io/en/latest/markdown-cells.html).\n",
               "pip": {
                  "spec": "sphinxcontrib-svg2pdfconverter[CairoSVG] == 1.2.2"
               },
               "url": {
                  "source": "https://github.com/missinglinkelectronics/sphinxcontrib-svg2pdfconverter"
               }
            }
         },
         "thebe": {
            "dependency": {
               "conda": {
                  "channel": "conda-forge",
                  "spec": "sphinx-thebe = 0.3.1"
               },
               "description": "Make code cells interactive in Sphinx.",
               "import_name": "sphinx_thebe",
               "pip": {
                  "spec": "sphinx-thebe == 0.3.1"
               },
               "url": {
                  "conda": "https://anaconda.org/conda-forge/sphinx-thebe",
                  "docs": "https://sphinx-thebe.readthedocs.io",
                  "pip": "https://pypi.org/project/sphinx-thebe/",
                  "source": "https://github.com/executablebooks/sphinx-thebe"
               }
            }
         },
         "tippy": {
            "config": {
               "tippy_props": {
                  "delay": [
                     200,
                     500
                  ],
                  "duration": [
                     200,
                     100
                  ],
                  "interactive": true,
                  "maxWidth": 500,
                  "placement": "auto-start",
                  "theme": "material"
               }
            },
            "dependency": {
               "description": "Adding rich hover tooltips to content.",
               "import_name": "sphinx_tippy",
               "pip": {
                  "spec": "sphinx-tippy == 0.4.3"
               },
               "url": {
                  "docs": "https://sphinx-tippy.readthedocs.io",
                  "pip": "https://pypi.org/project/sphinx_tippy",
                  "source": "https://github.com/sphinx-extensions2/sphinx-tippy"
               }
            }
         },
         "toggle_button": {
            "config": {
               "togglebutton_hint": "show details",
               "togglebutton_hint_hide": "hide details"
            },
            "dependency": {
               "conda": {
                  "channel": "conda-forge",
                  "spec": "sphinx-togglebutton = 0.3.2"
               },
               "description": "Adding toggle buttons to admonitions and other content.",
               "import_name": "sphinx_togglebutton",
               "pip": {
                  "spec": "sphinx-togglebutton == 0.3.2"
               },
               "url": {
                  "docs": "https://sphinx-togglebutton.readthedocs.io/",
                  "source": "https://github.com/executablebooks/sphinx-togglebutton"
               }
            }
         }
      },
      "page": {
         "about": {
            "path": "about",
            "title": "About",
            "url": "https://DrugBud-Suite.github.io/VoteM8/about"
         },
         "api": {
            "path": "api",
            "title": "API Reference",
            "url": "https://DrugBud-Suite.github.io/VoteM8/api"
         },
         "blog": {
            "path": "news",
            "title": "News",
            "url": "https://DrugBud-Suite.github.io/VoteM8/news"
         },
         "blog_category_release": {
            "path": "news/list/category/release",
            "title": "Release",
            "url": "https://DrugBud-Suite.github.io/VoteM8/news/list/category/release"
         },
         "blog_category_template": {
            "path": "news/list/category/template",
            "title": "Template",
            "url": "https://DrugBud-Suite.github.io/VoteM8/news/list/category/template"
         },
         "blog_tag_sample": {
            "path": "news/list/tag/sample",
            "title": "sample",
            "url": "https://DrugBud-Suite.github.io/VoteM8/news/list/tag/sample"
         },
         "blog_tag_template": {
            "path": "news/list/tag/template",
            "title": "template",
            "url": "https://DrugBud-Suite.github.io/VoteM8/news/list/tag/template"
         },
         "contact": {
            "path": "about/contact",
            "title": "Contact",
            "url": "https://DrugBud-Suite.github.io/VoteM8/about/contact"
         },
         "contribute": {
            "path": "contribute",
            "title": "Contribution Guide",
            "url": "https://DrugBud-Suite.github.io/VoteM8/contribute"
         },
         "help": {
            "path": "help",
            "title": "Help",
            "url": "https://DrugBud-Suite.github.io/VoteM8/help"
         },
         "install": {
            "path": "manual/install",
            "title": "Installation",
            "url": "https://DrugBud-Suite.github.io/VoteM8/manual/install"
         },
         "intro": {
            "path": "intro",
            "title": "Introduction",
            "url": "https://DrugBud-Suite.github.io/VoteM8/intro"
         },
         "license": {
            "path": "about/license",
            "title": "License",
            "url": "https://DrugBud-Suite.github.io/VoteM8/about/license"
         },
         "manual": {
            "path": "manual",
            "title": "User Manual",
            "url": "https://DrugBud-Suite.github.io/VoteM8/manual"
         },
         "overview": {
            "path": "intro/overview",
            "title": "Overview",
            "url": "https://DrugBud-Suite.github.io/VoteM8/intro/overview"
         }
      },
      "path": {
         "root": "docs/website",
         "source": "docs/website/source",
         "source_rel": "source",
         "to_root": "../../.."
      },
      "sphinx": {
         "config": {
            "author": "DrugM8",
            "exclude_patterns": [
               "Thumbs.db",
               ".DS_Store",
               ".ipynb_checkpoints",
               "README.md"
            ],
            "html_baseurl": "https://DrugBud-Suite.github.io/VoteM8",
            "html_context": {
               "pp_title_sep": ".\u2002"
            },
            "html_css_files": [
               "https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;600;700&display=swap",
               "css/custom.css"
            ],
            "html_extra_path": [],
            "html_favicon": "_media/logo/favicon.svg",
            "html_last_updated_fmt": "%b %d, %Y",
            "html_math_renderer": "mathjax",
            "html_secnumber_suffix": ".\u2002",
            "html_short_title": "VoteM8",
            "html_show_sphinx": false,
            "html_sidebars": {
               "news/**": [
                  "ablog/postcard.html",
                  "ablog/recentposts.html",
                  "ablog/tagcloud.html",
                  "ablog/categories.html",
                  "ablog/archives.html",
                  "ablog/authors.html"
               ]
            },
            "html_static_path": [
               "_static",
               "_media/logo/simple_light.svg",
               "_media/logo/simple_dark.svg"
            ],
            "html_title": "VoteM8",
            "html_use_opensearch": "https://DrugBud-Suite.github.io/VoteM8",
            "language": "en",
            "latex_elements": {
               "figure_align": "htbp",
               "fncychap": "\\usepackage[Bjornstrup]{fncychap}",
               "fontpkg": "\\setmainfont{DejaVu Serif}\n\\setsansfont{DejaVu Sans}\n\\setmonofont{DejaVu Sans Mono}\n",
               "papersize": "a4paper",
               "pointsize": "11pt",
               "preamble": "\\usepackage[titles]{tocloft}\n\\usepackage{fontspec}\n\\cftsetpnumwidth {1.25cm}\\cftsetrmarg{1.5cm}\n\\setlength{\\cftchapnumwidth}{0.75cm}\n\\setlength{\\cftsecindent}{\\cftchapnumwidth}\n\\setlength{\\cftsecnumwidth}{1.25cm}\n",
               "printindex": "\\footnotesize\\raggedright\\printindex"
            },
            "latex_engine": "lualatex",
            "latex_logo": "_media/logo/full_light.png",
            "latex_show_pagerefs": true,
            "latex_show_urls": "footnote",
            "latex_theme": "manual",
            "math_eqref_format": "Eq. {number}",
            "math_number_all": true,
            "math_numfig": true,
            "math_numsep": ".",
            "maximum_signature_line_length": 80,
            "needs_sphinx": "7.3",
            "nitpicky": true,
            "numfig": true,
            "numfig_secnum_depth": 3,
            "project": "VoteM8",
            "project_copyright": "\u00a9 2024 DrugM8",
            "pygment_style": "default",
            "python_display_short_literal_types": true,
            "python_maximum_signature_line_length": 80,
            "root_doc": "index",
            "show_authors": true,
            "show_warning_types": true,
            "templates_path": [
               "_templates"
            ],
            "today_fmt": "%b %d, %Y",
            "trim_footnote_reference_space": true
         },
         "dependency": {
            "conda": {
               "channel": "conda-forge",
               "spec": "sphinx == 7.4.7"
            },
            "import_name": "sphinx",
            "pip": {
               "spec": "sphinx == 7.4.7"
            },
            "url": {
               "docs": "https://www.sphinx-doc.org/",
               "source": "https://github.com/sphinx-doc/sphinx"
            }
         },
         "extension": {
            "autodoc": {
               "dependency": {
                  "import_name": "sphinx.ext.autodoc"
               }
            },
            "autosummary": {
               "config": {
                  "autosummary_generate": true,
                  "autosummary_generate_overwrite": true,
                  "autosummary_ignore_module_all": false,
                  "autosummary_imported_members": false
               },
               "dependency": {
                  "import_name": "sphinx.ext.autosummary",
                  "url": {
                     "docs": "https://www.sphinx-doc.org/en/master/usage/extensions/autosummary.html"
                  }
               }
            },
            "doctest": {
               "dependency": {
                  "import_name": "sphinx.ext.doctest"
               }
            },
            "duration": {
               "dependency": {
                  "import_name": "sphinx.ext.duration"
               }
            },
            "extlinks": {
               "dependency": {
                  "import_name": "sphinx.ext.extlinks"
               }
            },
            "ifconfig": {
               "dependency": {
                  "description": "Conditional content in Sphinx.",
                  "import_name": "sphinx.ext.ifconfig",
                  "url": {
                     "docs": "https://www.sphinx-doc.org/en/master/usage/extensions/ifconfig.html"
                  }
               }
            },
            "intersphinx": {
               "config": {
                  "intersphinx_mapping": {
                     "matplotlib": null,
                     "numpy": null,
                     "python": [
                        "https://docs.python.org/3/",
                        null
                     ],
                     "scipy": null
                  }
               },
               "dependency": {
                  "description": "Adding links to external documentation.",
                  "import_name": "sphinx.ext.intersphinx",
                  "notes": "This is also required for the\n[ABlog extension](https://ablog.readthedocs.io/en/stable/index.html#getting-started).\n",
                  "url": {
                     "docs": "https://www.sphinx-doc.org/en/master/usage/extensions/intersphinx.html"
                  }
               }
            },
            "linkcode": {
               "dependency": {
                  "description": "Linking source code to documentation.",
                  "import_name": "sphinx.ext.linkcode",
                  "url": {
                     "docs": "https://www.sphinx-doc.org/en/master/usage/extensions/linkcode.html"
                  }
               }
            },
            "mathjax": {
               "dependency": {
                  "import_name": "sphinx.ext.mathjax"
               }
            }
         },
         "needs_package": false
      },
      "theme": {
         "config": {
            "html_context": {
               "default_mode": "auto",
               "doc_path": "docs/website/source",
               "github_repo": "VoteM8",
               "github_user": "DrugBud-Suite",
               "github_version": "main"
            },
            "html_theme_options": {
               "announcement": "https://raw.githubusercontent.com/DrugBud-Suite/VoteM8/main/docs/website/announcement.html",
               "article_footer_items": [],
               "article_header_end": [],
               "article_header_start": [
                  "breadcrumbs"
               ],
               "back_to_top_button": true,
               "content_footer_items": [],
               "footer_center": [],
               "footer_end": [
                  "quicklinks"
               ],
               "footer_start": [
                  "version",
                  "copyright",
                  "pypackit_ver"
               ],
               "header_links_before_dropdown": 7,
               "icon_links": [
                  {
                     "icon": "fa-brands fa-python",
                     "name": "PyPI Distribution",
                     "url": "https://pypi.org/project/VoteM8"
                  },
                  {
                     "icon": "fa-brands fa-github",
                     "name": "Source Repository",
                     "url": "https://github.com/DrugBud-Suite/VoteM8"
                  },
                  {
                     "icon": "fa-regular fa-circle-dot",
                     "name": "Issues",
                     "url": "https://github.com/DrugBud-Suite/VoteM8/issues"
                  },
                  {
                     "icon": "fa-solid fa-code-pull-request",
                     "name": "Pull Requests",
                     "url": "https://github.com/DrugBud-Suite/VoteM8/pulls"
                  },
                  {
                     "icon": "fa-solid fa-comments",
                     "name": "Discussions",
                     "url": "https://github.com/DrugBud-Suite/VoteM8/discussions"
                  },
                  {
                     "icon": "fa-solid fa-copyright",
                     "name": "License",
                     "url": "https://DrugBud-Suite.github.io/VoteM8/about/license"
                  }
               ],
               "icon_links_label": "External links",
               "logo": {
                  "alt_text": "VoteM8",
                  "image_dark": "_static/simple_dark.svg",
                  "image_light": "_static/simple_light.svg"
               },
               "navbar_align": "left",
               "navbar_center": [
                  "navbar-nav"
               ],
               "navbar_end": [
                  "navbar-icon-links",
                  "theme-switcher"
               ],
               "navbar_persistent": [
                  "search-button"
               ],
               "navbar_start": [
                  "navbar-logo"
               ],
               "navigation_depth": 5,
               "primary_sidebar_end": [],
               "pygments_dark_style": "monokai",
               "pygments_light_style": "default",
               "search_bar_text": "Search VoteM8",
               "secondary_sidebar_items": [
                  "page-toc",
                  "last-updated",
                  "edit-this-page",
                  "indices"
               ],
               "show_nav_level": 2,
               "show_prev_next": true,
               "show_toc_level": 3,
               "sidebar_includehidden": true,
               "sidebarwidth": 270,
               "theme_variables": {
                  "font-family-base": "Quicksand, -apple-system, BlinkMacSystemFont, Segoe UI, \"Helvetica Neue\", Arial, sans-serif",
                  "font-family-heading": "Quicksand, -apple-system, BlinkMacSystemFont, Segoe UI, \"Helvetica Neue\", Arial, sans-serif"
               },
               "use_edit_page_button": true
            }
         },
         "dependency": {
            "conda": {
               "channel": "conda-forge",
               "spec": "pydata-sphinx-theme == 0.15.4"
            },
            "import_name": "pydata_sphinx_theme",
            "pip": {
               "spec": "pydata-sphinx-theme == 0.15.4"
            },
            "url": {
               "docs": "https://pydata-sphinx-theme.readthedocs.io/",
               "source": "https://github.com/pydata/pydata-sphinx-theme"
            }
         }
      },
      "toc": {
         "defaults": {
            "hidden": true
         },
         "entries": [
            {
               "entries": [
                  {
                     "file": "intro/overview/index"
                  },
                  {
                     "file": "intro/background/index"
                  }
               ],
               "file": "intro/index",
               "options": {
                  "numbered": true
               },
               "title": "Intro"
            },
            {
               "entries": [
                  {
                     "file": "manual/install/index"
                  },
                  {
                     "file": "manual/quickstart/index"
                  },
                  {
                     "file": "manual/testing/index"
                  }
               ],
               "file": "manual/index",
               "options": {
                  "numbered": true
               },
               "title": "Manual"
            },
            {
               "entries": [
                  {
                     "file": "api/votem8/votem8"
                  }
               ],
               "file": "api/index",
               "title": "API"
            },
            {
               "entries": [
                  {
                     "glob": "news/post/**"
                  }
               ],
               "file": "news/index",
               "title": "News"
            },
            {
               "file": "contribute/index",
               "options": {
                  "numbered": true
               },
               "title": "Contribute"
            },
            {
               "entries": [
                  {
                     "file": "about/contact/index"
                  }
               ],
               "file": "about/index",
               "options": {
                  "numbered": true
               },
               "title": "About"
            },
            {
               "entries": [
                  {
                     "file": "help/sitemap/index"
                  }
               ],
               "file": "help/index",
               "options": {
                  "numbered": true
               },
               "title": "Help"
            }
         ],
         "path": ".toc.yaml",
         "root": "index"
      },
      "url": {
         "base": "https://DrugBud-Suite.github.io/VoteM8",
         "home": "https://DrugBud-Suite.github.io/VoteM8"
      }
   }
}
